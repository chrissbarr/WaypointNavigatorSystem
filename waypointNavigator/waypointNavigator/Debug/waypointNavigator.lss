
waypointNavigator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006c  00800200  000010b2  00001146  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002f  0080026c  0080026c  000011b2  2**0
                  ALLOC
  3 .stab         00000024  00000000  00000000  000011b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000001e  00000000  00000000  000011d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000030  00000000  00000000  000011f6  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000002d0  00000000  00000000  00001228  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000026e3  00000000  00000000  000014f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000dd2  00000000  00000000  00003bdb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000170a  00000000  00000000  000049ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000070c  00000000  00000000  000060b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000e8b  00000000  00000000  000067c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000018c5  00000000  00000000  0000764f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000200  00000000  00000000  00008f14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	ee c0       	rjmp	.+476    	; 0x1de <__ctors_end>
       2:	00 00       	nop
       4:	0b c1       	rjmp	.+534    	; 0x21c <__bad_interrupt>
       6:	00 00       	nop
       8:	09 c1       	rjmp	.+530    	; 0x21c <__bad_interrupt>
       a:	00 00       	nop
       c:	07 c1       	rjmp	.+526    	; 0x21c <__bad_interrupt>
       e:	00 00       	nop
      10:	05 c1       	rjmp	.+522    	; 0x21c <__bad_interrupt>
      12:	00 00       	nop
      14:	03 c1       	rjmp	.+518    	; 0x21c <__bad_interrupt>
      16:	00 00       	nop
      18:	01 c1       	rjmp	.+514    	; 0x21c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	ff c0       	rjmp	.+510    	; 0x21c <__bad_interrupt>
      1e:	00 00       	nop
      20:	fd c0       	rjmp	.+506    	; 0x21c <__bad_interrupt>
      22:	00 00       	nop
      24:	52 c2       	rjmp	.+1188   	; 0x4ca <__vector_9>
      26:	00 00       	nop
      28:	f9 c0       	rjmp	.+498    	; 0x21c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	f7 c0       	rjmp	.+494    	; 0x21c <__bad_interrupt>
      2e:	00 00       	nop
      30:	f5 c0       	rjmp	.+490    	; 0x21c <__bad_interrupt>
      32:	00 00       	nop
      34:	f3 c0       	rjmp	.+486    	; 0x21c <__bad_interrupt>
      36:	00 00       	nop
      38:	f1 c0       	rjmp	.+482    	; 0x21c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	ef c0       	rjmp	.+478    	; 0x21c <__bad_interrupt>
      3e:	00 00       	nop
      40:	ed c0       	rjmp	.+474    	; 0x21c <__bad_interrupt>
      42:	00 00       	nop
      44:	eb c0       	rjmp	.+470    	; 0x21c <__bad_interrupt>
      46:	00 00       	nop
      48:	e9 c0       	rjmp	.+466    	; 0x21c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	e7 c0       	rjmp	.+462    	; 0x21c <__bad_interrupt>
      4e:	00 00       	nop
      50:	e5 c0       	rjmp	.+458    	; 0x21c <__bad_interrupt>
      52:	00 00       	nop
      54:	e3 c0       	rjmp	.+454    	; 0x21c <__bad_interrupt>
      56:	00 00       	nop
      58:	e1 c0       	rjmp	.+450    	; 0x21c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	19 c3       	rjmp	.+1586   	; 0x690 <__vector_23>
      5e:	00 00       	nop
      60:	dd c0       	rjmp	.+442    	; 0x21c <__bad_interrupt>
      62:	00 00       	nop
      64:	db c0       	rjmp	.+438    	; 0x21c <__bad_interrupt>
      66:	00 00       	nop
      68:	d9 c0       	rjmp	.+434    	; 0x21c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	d7 c0       	rjmp	.+430    	; 0x21c <__bad_interrupt>
      6e:	00 00       	nop
      70:	d5 c0       	rjmp	.+426    	; 0x21c <__bad_interrupt>
      72:	00 00       	nop
      74:	d3 c0       	rjmp	.+422    	; 0x21c <__bad_interrupt>
      76:	00 00       	nop
      78:	d1 c0       	rjmp	.+418    	; 0x21c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	cf c0       	rjmp	.+414    	; 0x21c <__bad_interrupt>
      7e:	00 00       	nop
      80:	cd c0       	rjmp	.+410    	; 0x21c <__bad_interrupt>
      82:	00 00       	nop
      84:	cb c0       	rjmp	.+406    	; 0x21c <__bad_interrupt>
      86:	00 00       	nop
      88:	c9 c0       	rjmp	.+402    	; 0x21c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c7 c0       	rjmp	.+398    	; 0x21c <__bad_interrupt>
      8e:	00 00       	nop
      90:	c5 c0       	rjmp	.+394    	; 0x21c <__bad_interrupt>
      92:	00 00       	nop
      94:	c3 c0       	rjmp	.+390    	; 0x21c <__bad_interrupt>
      96:	00 00       	nop
      98:	c1 c0       	rjmp	.+386    	; 0x21c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	bf c0       	rjmp	.+382    	; 0x21c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	bd c0       	rjmp	.+378    	; 0x21c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	bb c0       	rjmp	.+374    	; 0x21c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	b9 c0       	rjmp	.+370    	; 0x21c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	b7 c0       	rjmp	.+366    	; 0x21c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	b5 c0       	rjmp	.+362    	; 0x21c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	b3 c0       	rjmp	.+358    	; 0x21c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	b1 c0       	rjmp	.+354    	; 0x21c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	af c0       	rjmp	.+350    	; 0x21c <__bad_interrupt>
      be:	00 00       	nop
      c0:	ad c0       	rjmp	.+346    	; 0x21c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	ab c0       	rjmp	.+342    	; 0x21c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	a9 c0       	rjmp	.+338    	; 0x21c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	a7 c0       	rjmp	.+334    	; 0x21c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	a5 c0       	rjmp	.+330    	; 0x21c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	a3 c0       	rjmp	.+326    	; 0x21c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	a1 c0       	rjmp	.+322    	; 0x21c <__bad_interrupt>
      da:	00 00       	nop
      dc:	9f c0       	rjmp	.+318    	; 0x21c <__bad_interrupt>
      de:	00 00       	nop
      e0:	9d c0       	rjmp	.+314    	; 0x21c <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	00 40       	sbci	r16, 0x00	; 0
      e6:	7a 10       	cpse	r7, r10
      e8:	f3 5a       	subi	r31, 0xA3	; 163
      ea:	00 a0       	ldd	r0, Z+32	; 0x20
      ec:	72 4e       	sbci	r23, 0xE2	; 226
      ee:	18 09       	sbc	r17, r8
      f0:	00 10       	cpse	r0, r0
      f2:	a5 d4       	rcall	.+2378   	; 0xa3e <__fp_pscB+0x6>
      f4:	e8 00       	.word	0x00e8	; ????
      f6:	00 e8       	ldi	r16, 0x80	; 128
      f8:	76 48       	sbci	r23, 0x86	; 134
      fa:	17 00       	.word	0x0017	; ????
      fc:	00 e4       	ldi	r16, 0x40	; 64
      fe:	0b 54       	subi	r16, 0x4B	; 75
     100:	02 00       	.word	0x0002	; ????
     102:	00 ca       	rjmp	.-3072   	; 0xfffff504 <__eeprom_end+0xff7ef504>
     104:	9a 3b       	cpi	r25, 0xBA	; 186
     106:	00 00       	nop
     108:	00 e1       	ldi	r16, 0x10	; 16
     10a:	f5 05       	cpc	r31, r5
     10c:	00 00       	nop
     10e:	80 96       	adiw	r24, 0x20	; 32
     110:	98 00       	.word	0x0098	; ????
     112:	00 00       	nop
     114:	40 42       	sbci	r20, 0x20	; 32
     116:	0f 00       	.word	0x000f	; ????
     118:	00 00       	nop
     11a:	a0 86       	std	Z+8, r10	; 0x08
     11c:	01 00       	.word	0x0001	; ????
     11e:	00 00       	nop
     120:	10 27       	eor	r17, r16
     122:	00 00       	nop
     124:	00 00       	nop
     126:	e8 03       	fmulsu	r22, r16
     128:	00 00       	nop
     12a:	00 00       	nop
     12c:	64 00       	.word	0x0064	; ????
     12e:	00 00       	nop
     130:	00 00       	nop
     132:	0a 00       	.word	0x000a	; ????
     134:	00 00       	nop
     136:	00 00       	nop
     138:	01 00       	.word	0x0001	; ????
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	2c 76       	andi	r18, 0x6C	; 108
     140:	d8 88       	ldd	r13, Y+16	; 0x10
     142:	dc 67       	ori	r29, 0x7C	; 124
     144:	4f 08       	sbc	r4, r15
     146:	23 df       	rcall	.-442    	; 0xffffff8e <__eeprom_end+0xff7eff8e>
     148:	c1 df       	rcall	.-126    	; 0xcc <__SREG__+0x8d>
     14a:	ae 59       	subi	r26, 0x9E	; 158
     14c:	e1 b1       	in	r30, 0x01	; 1
     14e:	b7 96       	adiw	r30, 0x27	; 39
     150:	e5 e3       	ldi	r30, 0x35	; 53
     152:	e4 53       	subi	r30, 0x34	; 52
     154:	c6 3a       	cpi	r28, 0xA6	; 166
     156:	e6 51       	subi	r30, 0x16	; 22
     158:	99 76       	andi	r25, 0x69	; 105
     15a:	96 e8       	ldi	r25, 0x86	; 134
     15c:	e6 c2       	rjmp	.+1484   	; 0x72a <_Z6microsv+0x6>
     15e:	84 26       	eor	r8, r20
     160:	eb 89       	ldd	r30, Y+19	; 0x13
     162:	8c 9b       	sbis	0x11, 4	; 17
     164:	62 ed       	ldi	r22, 0xD2	; 210
     166:	40 7c       	andi	r20, 0xC0	; 192
     168:	6f fc       	.word	0xfc6f	; ????
     16a:	ef bc       	out	0x2f, r14	; 47
     16c:	9c 9f       	mul	r25, r28
     16e:	40 f2       	brcs	.-112    	; 0x100 <__trampolines_end+0x1c>
     170:	ba a5       	ldd	r27, Y+42	; 0x2a
     172:	6f a5       	ldd	r22, Y+47	; 0x2f
     174:	f4 90       	lpm	r15, Z
     176:	05 5a       	subi	r16, 0xA5	; 165
     178:	2a f7       	brpl	.-54     	; 0x144 <__trampolines_end+0x60>
     17a:	5c 93       	st	X, r21
     17c:	6b 6c       	ori	r22, 0xCB	; 203
     17e:	f9 67       	ori	r31, 0x79	; 121
     180:	6d c1       	rjmp	.+730    	; 0x45c <_Z14altimeter_initv+0x16>
     182:	1b fc       	.word	0xfc1b	; ????
     184:	e0 e4       	ldi	r30, 0x40	; 64
     186:	0d 47       	sbci	r16, 0x7D	; 125
     188:	fe f5       	brtc	.+126    	; 0x208 <__do_clear_bss>
     18a:	20 e6       	ldi	r18, 0x60	; 96
     18c:	b5 00       	.word	0x00b5	; ????
     18e:	d0 ed       	ldi	r29, 0xD0	; 208
     190:	90 2e       	mov	r9, r16
     192:	03 00       	.word	0x0003	; ????
     194:	94 35       	cpi	r25, 0x54	; 84
     196:	77 05       	cpc	r23, r7
     198:	00 80       	ld	r0, Z
     19a:	84 1e       	adc	r8, r20
     19c:	08 00       	.word	0x0008	; ????
     19e:	00 20       	and	r0, r0
     1a0:	4e 0a       	sbc	r4, r30
     1a2:	00 00       	nop
     1a4:	00 c8       	rjmp	.-4096   	; 0xfffff1a6 <__eeprom_end+0xff7ef1a6>
     1a6:	0c 33       	cpi	r16, 0x3C	; 60
     1a8:	33 33       	cpi	r19, 0x33	; 51
     1aa:	33 0f       	add	r19, r19
     1ac:	98 6e       	ori	r25, 0xE8	; 232
     1ae:	12 83       	std	Z+2, r17	; 0x02
     1b0:	11 41       	sbci	r17, 0x11	; 17
     1b2:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1b4:	21 14       	cp	r2, r1
     1b6:	89 3b       	cpi	r24, 0xB9	; 185
     1b8:	e6 55       	subi	r30, 0x56	; 86
     1ba:	16 cf       	rjmp	.-468    	; 0xffffffe8 <__eeprom_end+0xff7effe8>
     1bc:	fe e6       	ldi	r31, 0x6E	; 110
     1be:	db 18       	sub	r13, r11
     1c0:	d1 84       	ldd	r13, Z+9	; 0x09
     1c2:	4b 38       	cpi	r20, 0x8B	; 139
     1c4:	1b f7       	brvc	.-58     	; 0x18c <__trampolines_end+0xa8>
     1c6:	7c 1d       	adc	r23, r12
     1c8:	90 1d       	adc	r25, r0
     1ca:	a4 bb       	out	0x14, r26	; 20
     1cc:	e4 24       	eor	r14, r4
     1ce:	20 32       	cpi	r18, 0x20	; 32
     1d0:	84 72       	andi	r24, 0x24	; 36
     1d2:	5e 22       	and	r5, r30
     1d4:	81 00       	.word	0x0081	; ????
     1d6:	c9 f1       	breq	.+114    	; 0x24a <i2c_rep_start+0xa>
     1d8:	24 ec       	ldi	r18, 0xC4	; 196
     1da:	a1 e5       	ldi	r26, 0x51	; 81
     1dc:	3d 27       	eor	r19, r29

000001de <__ctors_end>:
     1de:	11 24       	eor	r1, r1
     1e0:	1f be       	out	0x3f, r1	; 63
     1e2:	cf ef       	ldi	r28, 0xFF	; 255
     1e4:	d1 e2       	ldi	r29, 0x21	; 33
     1e6:	de bf       	out	0x3e, r29	; 62
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	0c bf       	out	0x3c, r16	; 60

000001ee <__do_copy_data>:
     1ee:	12 e0       	ldi	r17, 0x02	; 2
     1f0:	a0 e0       	ldi	r26, 0x00	; 0
     1f2:	b2 e0       	ldi	r27, 0x02	; 2
     1f4:	e2 eb       	ldi	r30, 0xB2	; 178
     1f6:	f0 e1       	ldi	r31, 0x10	; 16
     1f8:	00 e0       	ldi	r16, 0x00	; 0
     1fa:	0b bf       	out	0x3b, r16	; 59
     1fc:	02 c0       	rjmp	.+4      	; 0x202 <__do_copy_data+0x14>
     1fe:	07 90       	elpm	r0, Z+
     200:	0d 92       	st	X+, r0
     202:	ac 36       	cpi	r26, 0x6C	; 108
     204:	b1 07       	cpc	r27, r17
     206:	d9 f7       	brne	.-10     	; 0x1fe <__do_copy_data+0x10>

00000208 <__do_clear_bss>:
     208:	22 e0       	ldi	r18, 0x02	; 2
     20a:	ac e6       	ldi	r26, 0x6C	; 108
     20c:	b2 e0       	ldi	r27, 0x02	; 2
     20e:	01 c0       	rjmp	.+2      	; 0x212 <.do_clear_bss_start>

00000210 <.do_clear_bss_loop>:
     210:	1d 92       	st	X+, r1

00000212 <.do_clear_bss_start>:
     212:	ab 39       	cpi	r26, 0x9B	; 155
     214:	b2 07       	cpc	r27, r18
     216:	e1 f7       	brne	.-8      	; 0x210 <.do_clear_bss_loop>
     218:	56 d3       	rcall	.+1708   	; 0x8c6 <main>
     21a:	49 c7       	rjmp	.+3730   	; 0x10ae <_exit>

0000021c <__bad_interrupt>:
     21c:	f1 ce       	rjmp	.-542    	; 0x0 <__vectors>

0000021e <i2c_delay_T2>:
;*************************************************************************
	.stabs	"",100,0,0,i2c_delay_T2
	.stabs	"i2cmaster.S",100,0,0,i2c_delay_T2
	.func i2c_delay_T2	; delay 5.0 microsec with 4 Mhz crystal	
i2c_delay_T2:        ; 4 cycles
	rjmp 1f      ; 2   "
     21e:	00 c0       	rjmp	.+0      	; 0x220 <i2c_delay_T2+0x2>
1:	rjmp 2f      ; 2   "
     220:	00 c0       	rjmp	.+0      	; 0x222 <i2c_delay_T2+0x4>
2:	rjmp 3f      ; 2   "
     222:	00 c0       	rjmp	.+0      	; 0x224 <i2c_delay_T2+0x6>
3:	rjmp 4f      ; 2   "
     224:	00 c0       	rjmp	.+0      	; 0x226 <i2c_delay_T2+0x8>
4:	rjmp 5f      ; 2   "
     226:	00 c0       	rjmp	.+0      	; 0x228 <i2c_delay_T2+0xa>
5: 	rjmp 6f      ; 2   "
     228:	00 c0       	rjmp	.+0      	; 0x22a <i2c_delay_T2+0xc>
6:	nop          ; 1   "
     22a:	00 00       	nop
	ret          ; 3   "
     22c:	08 95       	ret

0000022e <i2c_init>:
; extern void i2c_init(void)
;*************************************************************************
	.global i2c_init
	.func i2c_init
i2c_init:
	cbi SDA_DDR,SDA		;release SDA
     22e:	51 98       	cbi	0x0a, 1	; 10
	cbi SCL_DDR,SCL		;release SCL
     230:	50 98       	cbi	0x0a, 0	; 10
	cbi SDA_OUT,SDA
     232:	59 98       	cbi	0x0b, 1	; 11
	cbi SCL_OUT,SCL
     234:	58 98       	cbi	0x0b, 0	; 11
	ret
     236:	08 95       	ret

00000238 <i2c_start>:
;*************************************************************************

	.global i2c_start
	.func   i2c_start
i2c_start:
	sbi 	SDA_DDR,SDA	;force SDA low
     238:	51 9a       	sbi	0x0a, 1	; 10
	rcall 	i2c_delay_T2	;delay T/2
     23a:	f1 df       	rcall	.-30     	; 0x21e <i2c_delay_T2>
	
	rcall 	i2c_write	;write address
     23c:	1d c0       	rjmp	.+58     	; 0x278 <i2c_write>
	ret
     23e:	08 95       	ret

00000240 <i2c_rep_start>:
;*************************************************************************

	.global i2c_rep_start
	.func	i2c_rep_start
i2c_rep_start:
	sbi	SCL_DDR,SCL	;force SCL low
     240:	50 9a       	sbi	0x0a, 0	; 10
	rcall 	i2c_delay_T2	;delay  T/2
     242:	ed df       	rcall	.-38     	; 0x21e <i2c_delay_T2>
	cbi	SDA_DDR,SDA	;release SDA
     244:	51 98       	cbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     246:	eb df       	rcall	.-42     	; 0x21e <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     248:	50 98       	cbi	0x0a, 0	; 10
	rcall 	i2c_delay_T2	;delay  T/2
     24a:	e9 df       	rcall	.-46     	; 0x21e <i2c_delay_T2>
	sbi 	SDA_DDR,SDA	;force SDA low
     24c:	51 9a       	sbi	0x0a, 1	; 10
	rcall 	i2c_delay_T2	;delay	T/2
     24e:	e7 df       	rcall	.-50     	; 0x21e <i2c_delay_T2>
	
	rcall	i2c_write	;write address
     250:	13 c0       	rjmp	.+38     	; 0x278 <i2c_write>
	ret
     252:	08 95       	ret

00000254 <i2c_start_wait>:
;*************************************************************************

	.global i2c_start_wait
	.func   i2c_start_wait
i2c_start_wait:
	mov	__tmp_reg__,r24
     254:	08 2e       	mov	r0, r24

00000256 <i2c_start_wait1>:
i2c_start_wait1:
	sbi 	SDA_DDR,SDA	;force SDA low
     256:	51 9a       	sbi	0x0a, 1	; 10
	rcall 	i2c_delay_T2	;delay T/2
     258:	e2 df       	rcall	.-60     	; 0x21e <i2c_delay_T2>
	mov	r24,__tmp_reg__
     25a:	80 2d       	mov	r24, r0
	rcall 	i2c_write	;write address
     25c:	0d d0       	rcall	.+26     	; 0x278 <i2c_write>
	tst	r24		;if device not busy -> done
     25e:	88 23       	and	r24, r24
	breq	i2c_start_wait_done
     260:	11 f0       	breq	.+4      	; 0x266 <i2c_start_wait_done>
	rcall	i2c_stop	;terminate write operation
     262:	02 d0       	rcall	.+4      	; 0x268 <i2c_stop>
	rjmp	i2c_start_wait1	;device busy, poll ack again
     264:	f8 cf       	rjmp	.-16     	; 0x256 <i2c_start_wait1>

00000266 <i2c_start_wait_done>:
i2c_start_wait_done:
	ret
     266:	08 95       	ret

00000268 <i2c_stop>:
;*************************************************************************

	.global	i2c_stop
	.func	i2c_stop
i2c_stop:
	sbi	SCL_DDR,SCL	;force SCL low
     268:	50 9a       	sbi	0x0a, 0	; 10
	sbi	SDA_DDR,SDA	;force SDA low
     26a:	51 9a       	sbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     26c:	d8 df       	rcall	.-80     	; 0x21e <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     26e:	50 98       	cbi	0x0a, 0	; 10
	rcall	i2c_delay_T2	;delay T/2
     270:	d6 df       	rcall	.-84     	; 0x21e <i2c_delay_T2>
	cbi	SDA_DDR,SDA	;release SDA
     272:	51 98       	cbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     274:	d4 cf       	rjmp	.-88     	; 0x21e <i2c_delay_T2>
	ret
     276:	08 95       	ret

00000278 <i2c_write>:
;	data = r24,  return = r25(=0):r24
;*************************************************************************
	.global i2c_write
	.func	i2c_write
i2c_write:
	sec			;set carry flag
     278:	08 94       	sec
	rol 	r24		;shift in carry and out bit one
     27a:	88 1f       	adc	r24, r24
	rjmp	i2c_write_first
     27c:	01 c0       	rjmp	.+2      	; 0x280 <i2c_write_first>

0000027e <i2c_write_bit>:
i2c_write_bit:
	lsl	r24		;if transmit register empty
     27e:	88 0f       	add	r24, r24

00000280 <i2c_write_first>:
i2c_write_first:
	breq	i2c_get_ack
     280:	59 f0       	breq	.+22     	; 0x298 <i2c_get_ack>
	sbi	SCL_DDR,SCL	;force SCL low
     282:	50 9a       	sbi	0x0a, 0	; 10
	brcc	i2c_write_low
     284:	18 f4       	brcc	.+6      	; 0x28c <i2c_write_low>
	nop
     286:	00 00       	nop
	cbi	SDA_DDR,SDA	;release SDA
     288:	51 98       	cbi	0x0a, 1	; 10
	rjmp	i2c_write_high
     28a:	02 c0       	rjmp	.+4      	; 0x290 <i2c_write_high>

0000028c <i2c_write_low>:
i2c_write_low:
	sbi	SDA_DDR,SDA	;force SDA low
     28c:	51 9a       	sbi	0x0a, 1	; 10
	rjmp	i2c_write_high
     28e:	00 c0       	rjmp	.+0      	; 0x290 <i2c_write_high>

00000290 <i2c_write_high>:
i2c_write_high:
	rcall 	i2c_delay_T2	;delay T/2
     290:	c6 df       	rcall	.-116    	; 0x21e <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     292:	50 98       	cbi	0x0a, 0	; 10
	rcall	i2c_delay_T2	;delay T/2
     294:	c4 df       	rcall	.-120    	; 0x21e <i2c_delay_T2>
	rjmp	i2c_write_bit
     296:	f3 cf       	rjmp	.-26     	; 0x27e <i2c_write_bit>

00000298 <i2c_get_ack>:
	
i2c_get_ack:
	sbi	SCL_DDR,SCL	;force SCL low
     298:	50 9a       	sbi	0x0a, 0	; 10
	cbi	SDA_DDR,SDA	;release SDA
     29a:	51 98       	cbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     29c:	c0 df       	rcall	.-128    	; 0x21e <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     29e:	50 98       	cbi	0x0a, 0	; 10

000002a0 <i2c_ack_wait>:
i2c_ack_wait:
	sbis	SCL_IN,SCL	;wait SCL high (in case wait states are inserted)
     2a0:	48 9b       	sbis	0x09, 0	; 9
	rjmp	i2c_ack_wait
     2a2:	fe cf       	rjmp	.-4      	; 0x2a0 <i2c_ack_wait>
	
	clr	r24		;return 0
     2a4:	88 27       	eor	r24, r24
	sbic	SDA_IN,SDA	;if SDA high -> return 1
     2a6:	49 99       	sbic	0x09, 1	; 9
	ldi	r24,1
     2a8:	81 e0       	ldi	r24, 0x01	; 1
	rcall	i2c_delay_T2	;delay T/2
     2aa:	b9 df       	rcall	.-142    	; 0x21e <i2c_delay_T2>
	clr	r25
     2ac:	99 27       	eor	r25, r25
	ret
     2ae:	08 95       	ret

000002b0 <i2c_readNak>:
	.global i2c_readAck
	.global i2c_readNak
	.global i2c_read		
	.func	i2c_read
i2c_readNak:
	clr	r24
     2b0:	88 27       	eor	r24, r24
	rjmp	i2c_read
     2b2:	01 c0       	rjmp	.+2      	; 0x2b6 <i2c_read>

000002b4 <i2c_readAck>:
i2c_readAck:
	ldi	r24,0x01
     2b4:	81 e0       	ldi	r24, 0x01	; 1

000002b6 <i2c_read>:
i2c_read:
	ldi	r23,0x01	;data = 0x01
     2b6:	71 e0       	ldi	r23, 0x01	; 1

000002b8 <i2c_read_bit>:
i2c_read_bit:
	sbi	SCL_DDR,SCL	;force SCL low
     2b8:	50 9a       	sbi	0x0a, 0	; 10
	cbi	SDA_DDR,SDA	;release SDA (from previous ACK)
     2ba:	51 98       	cbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     2bc:	b0 df       	rcall	.-160    	; 0x21e <i2c_delay_T2>
	
	cbi	SCL_DDR,SCL	;release SCL
     2be:	50 98       	cbi	0x0a, 0	; 10
	rcall	i2c_delay_T2	;delay T/2
     2c0:	ae df       	rcall	.-164    	; 0x21e <i2c_delay_T2>

000002c2 <i2c_read_stretch>:
	
i2c_read_stretch:
    sbis SCL_IN, SCL        ;loop until SCL is high (allow slave to stretch SCL)
     2c2:	48 9b       	sbis	0x09, 0	; 9
    rjmp	i2c_read_stretch
     2c4:	fe cf       	rjmp	.-4      	; 0x2c2 <i2c_read_stretch>
    	
	clc			;clear carry flag
     2c6:	88 94       	clc
	sbic	SDA_IN,SDA	;if SDA is high
     2c8:	49 99       	sbic	0x09, 1	; 9
	sec			;  set carry flag
     2ca:	08 94       	sec
	
	rol	r23		;store bit
     2cc:	77 1f       	adc	r23, r23
	brcc	i2c_read_bit	;while receive register not full
     2ce:	a0 f7       	brcc	.-24     	; 0x2b8 <i2c_read_bit>

000002d0 <i2c_put_ack>:
	
i2c_put_ack:
	sbi	SCL_DDR,SCL	;force SCL low	
     2d0:	50 9a       	sbi	0x0a, 0	; 10
	cpi	r24,1
     2d2:	81 30       	cpi	r24, 0x01	; 1
	breq	i2c_put_ack_low	;if (ack=0)
     2d4:	11 f0       	breq	.+4      	; 0x2da <i2c_put_ack_low>
	cbi	SDA_DDR,SDA	;      release SDA
     2d6:	51 98       	cbi	0x0a, 1	; 10
	rjmp	i2c_put_ack_high
     2d8:	01 c0       	rjmp	.+2      	; 0x2dc <i2c_put_ack_high>

000002da <i2c_put_ack_low>:
i2c_put_ack_low:                ;else
	sbi	SDA_DDR,SDA	;      force SDA low
     2da:	51 9a       	sbi	0x0a, 1	; 10

000002dc <i2c_put_ack_high>:
i2c_put_ack_high:
	rcall	i2c_delay_T2	;delay T/2
     2dc:	a0 df       	rcall	.-192    	; 0x21e <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     2de:	50 98       	cbi	0x0a, 0	; 10

000002e0 <i2c_put_ack_wait>:
i2c_put_ack_wait:
	sbis	SCL_IN,SCL	;wait SCL high
     2e0:	48 9b       	sbis	0x09, 0	; 9
	rjmp	i2c_put_ack_wait
     2e2:	fe cf       	rjmp	.-4      	; 0x2e0 <i2c_put_ack_wait>
	rcall	i2c_delay_T2	;delay T/2
     2e4:	9c df       	rcall	.-200    	; 0x21e <i2c_delay_T2>
	mov	r24,r23
     2e6:	87 2f       	mov	r24, r23
	clr	r25
     2e8:	99 27       	eor	r25, r25
	ret
     2ea:	08 95       	ret

000002ec <_Z16enableEventFlagsv>:

//Enables the pressure and temp measurement event flags so that we can
//test against them. This is recommended in datasheet during setup.
void enableEventFlags()
{
	i2c_start_wait(MPL3115a2+I2C_WRITE);
     2ec:	80 ec       	ldi	r24, 0xC0	; 192
     2ee:	b2 df       	rcall	.-156    	; 0x254 <i2c_start_wait>
	i2c_write(PT_DATA_CFG);
     2f0:	83 e1       	ldi	r24, 0x13	; 19
     2f2:	c2 df       	rcall	.-124    	; 0x278 <i2c_write>
	i2c_write(0x07);
     2f4:	87 e0       	ldi	r24, 0x07	; 7
     2f6:	c0 cf       	rjmp	.-128    	; 0x278 <i2c_write>
     2f8:	08 95       	ret

000002fa <_Z8IIC_Readh>:
}

byte IIC_Read(byte regAddr)
{
     2fa:	cf 93       	push	r28
     2fc:	c8 2f       	mov	r28, r24
	// This function reads one byte over IIC
	
	i2c_rep_start(MPL3115a2+I2C_WRITE);
     2fe:	80 ec       	ldi	r24, 0xC0	; 192
     300:	9f df       	rcall	.-194    	; 0x240 <i2c_rep_start>
	i2c_write(regAddr);
     302:	8c 2f       	mov	r24, r28
     304:	b9 df       	rcall	.-142    	; 0x278 <i2c_write>
	
	i2c_rep_start(MPL3115a2+I2C_READ);
     306:	81 ec       	ldi	r24, 0xC1	; 193
     308:	9b df       	rcall	.-202    	; 0x240 <i2c_rep_start>
	return i2c_readNak();
     30a:	d2 df       	rcall	.-92     	; 0x2b0 <i2c_readNak>
}
     30c:	cf 91       	pop	r28
     30e:	08 95       	ret

00000310 <_Z9IIC_Writehh>:

void IIC_Write(byte regAddr, byte value)
{
     310:	cf 93       	push	r28
     312:	df 93       	push	r29
     314:	d8 2f       	mov	r29, r24
     316:	c6 2f       	mov	r28, r22
	i2c_start_wait(MPL3115a2+I2C_WRITE);
     318:	80 ec       	ldi	r24, 0xC0	; 192
     31a:	9c df       	rcall	.-200    	; 0x254 <i2c_start_wait>
	i2c_write(regAddr);
     31c:	8d 2f       	mov	r24, r29
     31e:	ac df       	rcall	.-168    	; 0x278 <i2c_write>
	i2c_write(value);
     320:	8c 2f       	mov	r24, r28
     322:	aa df       	rcall	.-172    	; 0x278 <i2c_write>
	i2c_stop();
     324:	a1 df       	rcall	.-190    	; 0x268 <i2c_stop>
     326:	df 91       	pop	r29
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <_Z24altimeter_toggle_oneShotv>:
}

void altimeter_toggle_oneShot(void) 
{ 
	//read CTRL_REG1
	uint8_t tempSetting = IIC_Read(CTRL_REG1);
     32c:	86 e2       	ldi	r24, 0x26	; 38
     32e:	e5 df       	rcall	.-54     	; 0x2fa <_Z8IIC_Readh>
	
	//Clear OST bit
	tempSetting &= ~(1<<1);
     330:	68 2f       	mov	r22, r24
     332:	6d 7f       	andi	r22, 0xFD	; 253
	IIC_Write(CTRL_REG1,tempSetting);
     334:	86 e2       	ldi	r24, 0x26	; 38
     336:	ec df       	rcall	.-40     	; 0x310 <_Z9IIC_Writehh>
	
	//read CTRL_REG1
	tempSetting = IIC_Read(CTRL_REG1);
     338:	86 e2       	ldi	r24, 0x26	; 38
     33a:	df df       	rcall	.-66     	; 0x2fa <_Z8IIC_Readh>
	
	//set OST bit
	tempSetting |= (1<<1);
     33c:	68 2f       	mov	r22, r24
     33e:	62 60       	ori	r22, 0x02	; 2
	IIC_Write(CTRL_REG1,tempSetting); 
     340:	86 e2       	ldi	r24, 0x26	; 38
     342:	e6 cf       	rjmp	.-52     	; 0x310 <_Z9IIC_Writehh>
     344:	08 95       	ret

00000346 <_Z20altimeter_get_metresv>:
	enableEventFlags();
	debug_println("Altimeter initialized!");
}

float altimeter_get_metres(void)
{
     346:	cf 92       	push	r12
     348:	df 92       	push	r13
     34a:	ef 92       	push	r14
     34c:	ff 92       	push	r15
     34e:	cf 93       	push	r28
     350:	df 93       	push	r29
	float altitude = -999;
	
	altimeter_toggle_oneShot();
     352:	ec df       	rcall	.-40     	; 0x32c <_Z24altimeter_toggle_oneShotv>
	
	int counter = 0;
	
	while((IIC_Read(STATUS) & (1<<1)) == 0)
     354:	c9 e5       	ldi	r28, 0x59	; 89
     356:	d2 e0       	ldi	r29, 0x02	; 2
     358:	0a c0       	rjmp	.+20     	; 0x36e <_Z20altimeter_get_metresv+0x28>
     35a:	21 97       	sbiw	r28, 0x01	; 1
	{
		if(++counter > 600) return (-999);
     35c:	20 97       	sbiw	r28, 0x00	; 0
     35e:	09 f4       	brne	.+2      	; 0x362 <_Z20altimeter_get_metresv+0x1c>
     360:	4b c0       	rjmp	.+150    	; 0x3f8 <_Z20altimeter_get_metresv+0xb2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     362:	8f e9       	ldi	r24, 0x9F	; 159
     364:	9f e0       	ldi	r25, 0x0F	; 15
     366:	01 97       	sbiw	r24, 0x01	; 1
     368:	f1 f7       	brne	.-4      	; 0x366 <_Z20altimeter_get_metresv+0x20>
     36a:	00 c0       	rjmp	.+0      	; 0x36c <_Z20altimeter_get_metresv+0x26>
     36c:	00 00       	nop
	
	altimeter_toggle_oneShot();
	
	int counter = 0;
	
	while((IIC_Read(STATUS) & (1<<1)) == 0)
     36e:	80 e0       	ldi	r24, 0x00	; 0
     370:	c4 df       	rcall	.-120    	; 0x2fa <_Z8IIC_Readh>
     372:	81 ff       	sbrs	r24, 1
     374:	f2 cf       	rjmp	.-28     	; 0x35a <_Z20altimeter_get_metresv+0x14>
		if(++counter > 600) return (-999);
		_delay_ms(1);
	}
	//_delay_ms(100);
	
	i2c_start_wait(MPL3115a2+I2C_WRITE);
     376:	80 ec       	ldi	r24, 0xC0	; 192
     378:	6d df       	rcall	.-294    	; 0x254 <i2c_start_wait>
	i2c_write(OUT_P_MSB);
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	7d df       	rcall	.-262    	; 0x278 <i2c_write>
	i2c_rep_start(MPL3115a2+I2C_READ);
     37e:	81 ec       	ldi	r24, 0xC1	; 193
     380:	5f df       	rcall	.-322    	; 0x240 <i2c_rep_start>
	
	int8_t msbA,csbA,lsbA = 0x00; 
	
	msbA = i2c_readAck();
     382:	98 df       	rcall	.-208    	; 0x2b4 <i2c_readAck>
     384:	f8 2e       	mov	r15, r24
	csbA = i2c_readAck();
     386:	96 df       	rcall	.-212    	; 0x2b4 <i2c_readAck>
     388:	d8 2f       	mov	r29, r24
	lsbA = i2c_readNak();	
     38a:	92 df       	rcall	.-220    	; 0x2b0 <i2c_readNak>
     38c:	c8 2f       	mov	r28, r24
	i2c_stop();
     38e:	6c df       	rcall	.-296    	; 0x268 <i2c_stop>
	
	altimeter_toggle_oneShot();
     390:	cd df       	rcall	.-102    	; 0x32c <_Z24altimeter_toggle_oneShotv>
	
	float tempcsb = (lsbA>>4)/16.0;
	
	altitude = (float)( (msbA << 8) | csbA) + tempcsb;
     392:	4f 2d       	mov	r20, r15
     394:	55 27       	eor	r21, r21
     396:	47 fd       	sbrc	r20, 7
     398:	50 95       	com	r21
     39a:	74 2f       	mov	r23, r20
     39c:	66 27       	eor	r22, r22
     39e:	2d 2f       	mov	r18, r29
     3a0:	33 27       	eor	r19, r19
     3a2:	27 fd       	sbrc	r18, 7
     3a4:	30 95       	com	r19
     3a6:	62 2b       	or	r22, r18
     3a8:	73 2b       	or	r23, r19
     3aa:	88 27       	eor	r24, r24
     3ac:	77 fd       	sbrc	r23, 7
     3ae:	80 95       	com	r24
     3b0:	98 2f       	mov	r25, r24
     3b2:	f7 d2       	rcall	.+1518   	; 0x9a2 <__floatsisf>
     3b4:	6b 01       	movw	r12, r22
     3b6:	7c 01       	movw	r14, r24
	lsbA = i2c_readNak();	
	i2c_stop();
	
	altimeter_toggle_oneShot();
	
	float tempcsb = (lsbA>>4)/16.0;
     3b8:	6c 2f       	mov	r22, r28
     3ba:	77 27       	eor	r23, r23
     3bc:	67 fd       	sbrc	r22, 7
     3be:	70 95       	com	r23
     3c0:	75 95       	asr	r23
     3c2:	67 95       	ror	r22
     3c4:	75 95       	asr	r23
     3c6:	67 95       	ror	r22
     3c8:	75 95       	asr	r23
     3ca:	67 95       	ror	r22
     3cc:	75 95       	asr	r23
     3ce:	67 95       	ror	r22
     3d0:	88 27       	eor	r24, r24
     3d2:	77 fd       	sbrc	r23, 7
     3d4:	80 95       	com	r24
     3d6:	98 2f       	mov	r25, r24
     3d8:	e4 d2       	rcall	.+1480   	; 0x9a2 <__floatsisf>
     3da:	20 e0       	ldi	r18, 0x00	; 0
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	40 e8       	ldi	r20, 0x80	; 128
     3e0:	5d e3       	ldi	r21, 0x3D	; 61
     3e2:	6b d3       	rcall	.+1750   	; 0xaba <__mulsf3>
     3e4:	9b 01       	movw	r18, r22
     3e6:	ac 01       	movw	r20, r24
	
	altitude = (float)( (msbA << 8) | csbA) + tempcsb;
     3e8:	c7 01       	movw	r24, r14
     3ea:	b6 01       	movw	r22, r12
     3ec:	74 d2       	rcall	.+1256   	; 0x8d6 <__addsf3>
	
	return altitude;
     3ee:	56 2f       	mov	r21, r22
     3f0:	47 2f       	mov	r20, r23
     3f2:	38 2f       	mov	r19, r24
     3f4:	29 2f       	mov	r18, r25
     3f6:	04 c0       	rjmp	.+8      	; 0x400 <_Z20altimeter_get_metresv+0xba>
	
	int counter = 0;
	
	while((IIC_Read(STATUS) & (1<<1)) == 0)
	{
		if(++counter > 600) return (-999);
     3f8:	50 e0       	ldi	r21, 0x00	; 0
     3fa:	40 ec       	ldi	r20, 0xC0	; 192
     3fc:	39 e7       	ldi	r19, 0x79	; 121
     3fe:	24 ec       	ldi	r18, 0xC4	; 196
	float tempcsb = (lsbA>>4)/16.0;
	
	altitude = (float)( (msbA << 8) | csbA) + tempcsb;
	
	return altitude;
}
     400:	65 2f       	mov	r22, r21
     402:	74 2f       	mov	r23, r20
     404:	83 2f       	mov	r24, r19
     406:	92 2f       	mov	r25, r18
     408:	df 91       	pop	r29
     40a:	cf 91       	pop	r28
     40c:	ff 90       	pop	r15
     40e:	ef 90       	pop	r14
     410:	df 90       	pop	r13
     412:	cf 90       	pop	r12
     414:	08 95       	ret

00000416 <_Z16setModeAltimeterv>:
}

void setModeAltimeter()
{
	//read CTRL_REG1
	uint8_t tempSetting = IIC_Read(CTRL_REG1);
     416:	86 e2       	ldi	r24, 0x26	; 38
     418:	70 df       	rcall	.-288    	; 0x2fa <_Z8IIC_Readh>
	
	tempSetting |= (1<<7);	//set ALT bit
     41a:	68 2f       	mov	r22, r24
     41c:	60 68       	ori	r22, 0x80	; 128
	
	IIC_Write(CTRL_REG1,tempSetting);
     41e:	86 e2       	ldi	r24, 0x26	; 38
     420:	77 cf       	rjmp	.-274    	; 0x310 <_Z9IIC_Writehh>
     422:	08 95       	ret

00000424 <_Z17setOversampleRateh>:
}

void setOversampleRate(uint8_t sampleRate)
{
     424:	cf 93       	push	r28
     426:	c8 2f       	mov	r28, r24
     428:	88 30       	cpi	r24, 0x08	; 8
     42a:	08 f0       	brcs	.+2      	; 0x42e <_Z17setOversampleRateh+0xa>
     42c:	c7 e0       	ldi	r28, 0x07	; 7
	if(sampleRate > 7) sampleRate = 7;	//OS cannot be large than 0b.0111
	sampleRate <<= 3;
	
	//read CTRL_REG1
	uint8_t tempSetting = IIC_Read(CTRL_REG1);
     42e:	86 e2       	ldi	r24, 0x26	; 38
     430:	64 df       	rcall	.-312    	; 0x2fa <_Z8IIC_Readh>
	
	tempSetting &= 0b11000111; //Clear out old OS bits
     432:	87 7c       	andi	r24, 0xC7	; 199
}

void setOversampleRate(uint8_t sampleRate)
{
	if(sampleRate > 7) sampleRate = 7;	//OS cannot be large than 0b.0111
	sampleRate <<= 3;
     434:	cc 0f       	add	r28, r28
     436:	cc 0f       	add	r28, r28
     438:	cc 0f       	add	r28, r28
	
	//read CTRL_REG1
	uint8_t tempSetting = IIC_Read(CTRL_REG1);
	
	tempSetting &= 0b11000111; //Clear out old OS bits
	tempSetting |= sampleRate; //Mask in new OS bits
     43a:	68 2f       	mov	r22, r24
     43c:	6c 2b       	or	r22, r28
	
	IIC_Write(CTRL_REG1,tempSetting);
     43e:	86 e2       	ldi	r24, 0x26	; 38
     440:	67 df       	rcall	.-306    	; 0x310 <_Z9IIC_Writehh>
	
}
     442:	cf 91       	pop	r28
     444:	08 95       	ret

00000446 <_Z14altimeter_initv>:
float pressure = 0.;
float temperature = 0.;

void altimeter_init()
{
	i2c_init();
     446:	f3 de       	rcall	.-538    	; 0x22e <i2c_init>
	
	if(IIC_Read(WHO_AM_I) == 196)
     448:	8c e0       	ldi	r24, 0x0C	; 12
     44a:	57 df       	rcall	.-338    	; 0x2fa <_Z8IIC_Readh>
     44c:	84 3c       	cpi	r24, 0xC4	; 196
     44e:	21 f4       	brne	.+8      	; 0x458 <_Z14altimeter_initv+0x12>
	{
		debug_println("Altimeter connected correctly!");
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	92 e0       	ldi	r25, 0x02	; 2
     454:	11 d0       	rcall	.+34     	; 0x478 <_Z13debug_printlnPKc>
     456:	03 c0       	rjmp	.+6      	; 0x45e <_Z14altimeter_initv+0x18>
	}
	else
	{
		debug_println("Altimeter not connected!");
     458:	8f e1       	ldi	r24, 0x1F	; 31
     45a:	92 e0       	ldi	r25, 0x02	; 2
     45c:	0d d0       	rcall	.+26     	; 0x478 <_Z13debug_printlnPKc>
	}
	setModeAltimeter();
     45e:	db df       	rcall	.-74     	; 0x416 <_Z16setModeAltimeterv>
	setOversampleRate(7);
     460:	87 e0       	ldi	r24, 0x07	; 7
     462:	e0 df       	rcall	.-64     	; 0x424 <_Z17setOversampleRateh>
	enableEventFlags();
     464:	43 df       	rcall	.-378    	; 0x2ec <_Z16enableEventFlagsv>
	debug_println("Altimeter initialized!");
     466:	88 e3       	ldi	r24, 0x38	; 56
     468:	92 e0       	ldi	r25, 0x02	; 2
     46a:	06 c0       	rjmp	.+12     	; 0x478 <_Z13debug_printlnPKc>
     46c:	08 95       	ret

0000046e <_Z11debug_printPKc>:
	{
		char string[10]; 
		itoa(debugNum,string,10);
		debug_print(string);		
	}
}
     46e:	bc 01       	movw	r22, r24
     470:	80 e0       	ldi	r24, 0x00	; 0
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	09 c2       	rjmp	.+1042   	; 0x888 <_Z15USART_putstringiPKc>
     476:	08 95       	ret

00000478 <_Z13debug_printlnPKc>:
     478:	bc 01       	movw	r22, r24
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	04 d2       	rcall	.+1032   	; 0x888 <_Z15USART_putstringiPKc>
     480:	6f e4       	ldi	r22, 0x4F	; 79
     482:	72 e0       	ldi	r23, 0x02	; 2
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	ff c1       	rjmp	.+1022   	; 0x888 <_Z15USART_putstringiPKc>
     48a:	08 95       	ret

0000048c <_Z12debug_printff>:

void debug_printf(float debugNum)
{
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	cd b7       	in	r28, 0x3d	; 61
     496:	de b7       	in	r29, 0x3e	; 62
     498:	64 97       	sbiw	r28, 0x14	; 20
     49a:	0f b6       	in	r0, 0x3f	; 63
     49c:	f8 94       	cli
     49e:	de bf       	out	0x3e, r29	; 62
     4a0:	0f be       	out	0x3f, r0	; 63
     4a2:	cd bf       	out	0x3d, r28	; 61
	if(DEBUG_ENABLE == true)
	{
		char string[20];
		dtostrf(debugNum,10,5,string);
     4a4:	8e 01       	movw	r16, r28
     4a6:	0f 5f       	subi	r16, 0xFF	; 255
     4a8:	1f 4f       	sbci	r17, 0xFF	; 255
     4aa:	25 e0       	ldi	r18, 0x05	; 5
     4ac:	4a e0       	ldi	r20, 0x0A	; 10
     4ae:	8a d3       	rcall	.+1812   	; 0xbc4 <dtostrf>
		debug_print(string);
     4b0:	c8 01       	movw	r24, r16
     4b2:	dd df       	rcall	.-70     	; 0x46e <_Z11debug_printPKc>
	}
}
     4b4:	64 96       	adiw	r28, 0x14	; 20
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	f8 94       	cli
     4ba:	de bf       	out	0x3e, r29	; 62
     4bc:	0f be       	out	0x3f, r0	; 63
     4be:	cd bf       	out	0x3d, r28	; 61
     4c0:	df 91       	pop	r29
     4c2:	cf 91       	pop	r28
     4c4:	1f 91       	pop	r17
     4c6:	0f 91       	pop	r16
     4c8:	08 95       	ret

000004ca <__vector_9>:

volatile uint8_t portHistory = 0x00;     // default is low

//Pin Change Interrupt for reading Channel Values
ISR(PCINT0_vect)
{
     4ca:	1f 92       	push	r1
     4cc:	0f 92       	push	r0
     4ce:	0f b6       	in	r0, 0x3f	; 63
     4d0:	0f 92       	push	r0
     4d2:	11 24       	eor	r1, r1
     4d4:	0b b6       	in	r0, 0x3b	; 59
     4d6:	0f 92       	push	r0
     4d8:	2f 93       	push	r18
     4da:	3f 93       	push	r19
     4dc:	4f 93       	push	r20
     4de:	5f 93       	push	r21
     4e0:	6f 93       	push	r22
     4e2:	7f 93       	push	r23
     4e4:	8f 93       	push	r24
     4e6:	9f 93       	push	r25
     4e8:	af 93       	push	r26
     4ea:	bf 93       	push	r27
     4ec:	cf 93       	push	r28
     4ee:	ef 93       	push	r30
     4f0:	ff 93       	push	r31
	uint8_t changedBits;
	
	//determine which pin on RX_PORT changed:
	changedBits = RX_PORT ^ portHistory;
     4f2:	83 b1       	in	r24, 0x03	; 3
     4f4:	c0 91 6c 02 	lds	r28, 0x026C
     4f8:	c8 27       	eor	r28, r24
	portHistory = RX_PORT;
     4fa:	83 b1       	in	r24, 0x03	; 3
     4fc:	80 93 6c 02 	sts	0x026C, r24
	
	
	//Now, operate for that pin:
	
	if(changedBits & (1 << THROTTLE_IN_PIN))	//if the pin assigned to throttle has changed (high->low or low->high)
     500:	c0 ff       	sbrs	r28, 0
     502:	1c c0       	rjmp	.+56     	; 0x53c <__vector_9+0x72>
	{
		if(RX_PORT & (1<<THROTTLE_IN_PIN))	//if the pin is high
     504:	18 9b       	sbis	0x03, 0	; 3
     506:	0a c0       	rjmp	.+20     	; 0x51c <__vector_9+0x52>
		{
			ulThrottleStart = micros();	//note the current time
     508:	0d d1       	rcall	.+538    	; 0x724 <_Z6microsv>
     50a:	60 93 81 02 	sts	0x0281, r22
     50e:	70 93 82 02 	sts	0x0282, r23
     512:	80 93 83 02 	sts	0x0283, r24
     516:	90 93 84 02 	sts	0x0284, r25
     51a:	10 c0       	rjmp	.+32     	; 0x53c <__vector_9+0x72>
		}
		else	//if the pin has gone low
		{
			unThrottleInShared = (uint16_t)(micros()-ulThrottleStart);		//we are interested in how long it was high for
     51c:	03 d1       	rcall	.+518    	; 0x724 <_Z6microsv>
     51e:	20 91 81 02 	lds	r18, 0x0281
     522:	30 91 82 02 	lds	r19, 0x0282
     526:	62 1b       	sub	r22, r18
     528:	73 0b       	sbc	r23, r19
     52a:	70 93 91 02 	sts	0x0291, r23
     52e:	60 93 90 02 	sts	0x0290, r22
			rxUpdateFlagsShared |= THROTTLE_FLAG;		//and we need to let our code know that there is new data for the throttle
     532:	80 91 85 02 	lds	r24, 0x0285
     536:	81 60       	ori	r24, 0x01	; 1
     538:	80 93 85 02 	sts	0x0285, r24
		}
	}
	
	if(changedBits & (1 << AILERON_IN_PIN))
     53c:	c1 ff       	sbrs	r28, 1
     53e:	1c c0       	rjmp	.+56     	; 0x578 <__vector_9+0xae>
	{
		if(RX_PORT & (1<<AILERON_IN_PIN))
     540:	19 9b       	sbis	0x03, 1	; 3
     542:	0a c0       	rjmp	.+20     	; 0x558 <__vector_9+0x8e>
		{
			ulAileronStart = micros();
     544:	ef d0       	rcall	.+478    	; 0x724 <_Z6microsv>
     546:	60 93 7d 02 	sts	0x027D, r22
     54a:	70 93 7e 02 	sts	0x027E, r23
     54e:	80 93 7f 02 	sts	0x027F, r24
     552:	90 93 80 02 	sts	0x0280, r25
     556:	10 c0       	rjmp	.+32     	; 0x578 <__vector_9+0xae>
		}
		else
		{
			unAileronInShared = (uint16_t)(micros()-ulAileronStart);
     558:	e5 d0       	rcall	.+458    	; 0x724 <_Z6microsv>
     55a:	20 91 7d 02 	lds	r18, 0x027D
     55e:	30 91 7e 02 	lds	r19, 0x027E
     562:	62 1b       	sub	r22, r18
     564:	73 0b       	sbc	r23, r19
     566:	70 93 8f 02 	sts	0x028F, r23
     56a:	60 93 8e 02 	sts	0x028E, r22
			rxUpdateFlagsShared |= AILERON_FLAG;
     56e:	80 91 85 02 	lds	r24, 0x0285
     572:	82 60       	ori	r24, 0x02	; 2
     574:	80 93 85 02 	sts	0x0285, r24
		}
	}
	
	if(changedBits & (1 << ELEVATOR_IN_PIN))
     578:	c2 ff       	sbrs	r28, 2
     57a:	1c c0       	rjmp	.+56     	; 0x5b4 <__vector_9+0xea>
	{
		if(RX_PORT & (1<<ELEVATOR_IN_PIN))
     57c:	1a 9b       	sbis	0x03, 2	; 3
     57e:	0a c0       	rjmp	.+20     	; 0x594 <__vector_9+0xca>
		{
			ulElevatorStart = micros();
     580:	d1 d0       	rcall	.+418    	; 0x724 <_Z6microsv>
     582:	60 93 79 02 	sts	0x0279, r22
     586:	70 93 7a 02 	sts	0x027A, r23
     58a:	80 93 7b 02 	sts	0x027B, r24
     58e:	90 93 7c 02 	sts	0x027C, r25
     592:	10 c0       	rjmp	.+32     	; 0x5b4 <__vector_9+0xea>
		}
		else
		{
			unElevatorInShared = (uint16_t)(micros()-ulElevatorStart);
     594:	c7 d0       	rcall	.+398    	; 0x724 <_Z6microsv>
     596:	20 91 79 02 	lds	r18, 0x0279
     59a:	30 91 7a 02 	lds	r19, 0x027A
     59e:	62 1b       	sub	r22, r18
     5a0:	73 0b       	sbc	r23, r19
     5a2:	70 93 8d 02 	sts	0x028D, r23
     5a6:	60 93 8c 02 	sts	0x028C, r22
			rxUpdateFlagsShared |= ELEVATOR_FLAG;
     5aa:	80 91 85 02 	lds	r24, 0x0285
     5ae:	84 60       	ori	r24, 0x04	; 4
     5b0:	80 93 85 02 	sts	0x0285, r24
		}
	}
	
	if(changedBits & (1 << RUDDER_IN_PIN))
     5b4:	c3 ff       	sbrs	r28, 3
     5b6:	1c c0       	rjmp	.+56     	; 0x5f0 <__vector_9+0x126>
	{
		if(RX_PORT & (1<<RUDDER_IN_PIN))
     5b8:	1b 9b       	sbis	0x03, 3	; 3
     5ba:	0a c0       	rjmp	.+20     	; 0x5d0 <__vector_9+0x106>
		{
			ulRudderStart = micros();
     5bc:	b3 d0       	rcall	.+358    	; 0x724 <_Z6microsv>
     5be:	60 93 75 02 	sts	0x0275, r22
     5c2:	70 93 76 02 	sts	0x0276, r23
     5c6:	80 93 77 02 	sts	0x0277, r24
     5ca:	90 93 78 02 	sts	0x0278, r25
     5ce:	10 c0       	rjmp	.+32     	; 0x5f0 <__vector_9+0x126>
		}
		else
		{
			unRudderInShared = (uint16_t)(micros()-ulRudderStart);
     5d0:	a9 d0       	rcall	.+338    	; 0x724 <_Z6microsv>
     5d2:	20 91 75 02 	lds	r18, 0x0275
     5d6:	30 91 76 02 	lds	r19, 0x0276
     5da:	62 1b       	sub	r22, r18
     5dc:	73 0b       	sbc	r23, r19
     5de:	70 93 8b 02 	sts	0x028B, r23
     5e2:	60 93 8a 02 	sts	0x028A, r22
			rxUpdateFlagsShared |= RUDDER_FLAG;
     5e6:	80 91 85 02 	lds	r24, 0x0285
     5ea:	88 60       	ori	r24, 0x08	; 8
     5ec:	80 93 85 02 	sts	0x0285, r24
		}
	}
	
	if(changedBits & (1 << GEAR_IN_PIN))
     5f0:	c4 ff       	sbrs	r28, 4
     5f2:	1c c0       	rjmp	.+56     	; 0x62c <__vector_9+0x162>
	{
		if(RX_PORT & (1<<GEAR_IN_PIN))
     5f4:	1c 9b       	sbis	0x03, 4	; 3
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__vector_9+0x142>
		{
			ulGearStart = micros();
     5f8:	95 d0       	rcall	.+298    	; 0x724 <_Z6microsv>
     5fa:	60 93 71 02 	sts	0x0271, r22
     5fe:	70 93 72 02 	sts	0x0272, r23
     602:	80 93 73 02 	sts	0x0273, r24
     606:	90 93 74 02 	sts	0x0274, r25
     60a:	10 c0       	rjmp	.+32     	; 0x62c <__vector_9+0x162>
		}
		else
		{
			unGearInShared = (uint16_t)(micros()-ulGearStart);
     60c:	8b d0       	rcall	.+278    	; 0x724 <_Z6microsv>
     60e:	20 91 71 02 	lds	r18, 0x0271
     612:	30 91 72 02 	lds	r19, 0x0272
     616:	62 1b       	sub	r22, r18
     618:	73 0b       	sbc	r23, r19
     61a:	70 93 89 02 	sts	0x0289, r23
     61e:	60 93 88 02 	sts	0x0288, r22
			rxUpdateFlagsShared |= GEAR_FLAG;
     622:	80 91 85 02 	lds	r24, 0x0285
     626:	80 61       	ori	r24, 0x10	; 16
     628:	80 93 85 02 	sts	0x0285, r24
		}
	}
	
	if(changedBits & (1 << AUX_IN_PIN))
     62c:	c5 ff       	sbrs	r28, 5
     62e:	1c c0       	rjmp	.+56     	; 0x668 <__vector_9+0x19e>
	{
		if(RX_PORT & (1<<AUX_IN_PIN))
     630:	1d 9b       	sbis	0x03, 5	; 3
     632:	0a c0       	rjmp	.+20     	; 0x648 <__vector_9+0x17e>
		{
			ulAuxStart = micros();
     634:	77 d0       	rcall	.+238    	; 0x724 <_Z6microsv>
     636:	60 93 6d 02 	sts	0x026D, r22
     63a:	70 93 6e 02 	sts	0x026E, r23
     63e:	80 93 6f 02 	sts	0x026F, r24
     642:	90 93 70 02 	sts	0x0270, r25
     646:	10 c0       	rjmp	.+32     	; 0x668 <__vector_9+0x19e>
		}
		else
		{
			unAuxInShared = (uint16_t)(micros()-ulAuxStart);
     648:	6d d0       	rcall	.+218    	; 0x724 <_Z6microsv>
     64a:	20 91 6d 02 	lds	r18, 0x026D
     64e:	30 91 6e 02 	lds	r19, 0x026E
     652:	62 1b       	sub	r22, r18
     654:	73 0b       	sbc	r23, r19
     656:	70 93 87 02 	sts	0x0287, r23
     65a:	60 93 86 02 	sts	0x0286, r22
			rxUpdateFlagsShared |= AUX_FLAG;
     65e:	80 91 85 02 	lds	r24, 0x0285
     662:	80 62       	ori	r24, 0x20	; 32
     664:	80 93 85 02 	sts	0x0285, r24
		}
	}
}
     668:	ff 91       	pop	r31
     66a:	ef 91       	pop	r30
     66c:	cf 91       	pop	r28
     66e:	bf 91       	pop	r27
     670:	af 91       	pop	r26
     672:	9f 91       	pop	r25
     674:	8f 91       	pop	r24
     676:	7f 91       	pop	r23
     678:	6f 91       	pop	r22
     67a:	5f 91       	pop	r21
     67c:	4f 91       	pop	r20
     67e:	3f 91       	pop	r19
     680:	2f 91       	pop	r18
     682:	0f 90       	pop	r0
     684:	0b be       	out	0x3b, r0	; 59
     686:	0f 90       	pop	r0
     688:	0f be       	out	0x3f, r0	; 63
     68a:	0f 90       	pop	r0
     68c:	1f 90       	pop	r1
     68e:	18 95       	reti

00000690 <__vector_23>:
	m = timer0_millis;
	SREG = oldSREG;
	sei();

	return m;
}
     690:	1f 92       	push	r1
     692:	0f 92       	push	r0
     694:	0f b6       	in	r0, 0x3f	; 63
     696:	0f 92       	push	r0
     698:	11 24       	eor	r1, r1
     69a:	2f 93       	push	r18
     69c:	3f 93       	push	r19
     69e:	8f 93       	push	r24
     6a0:	9f 93       	push	r25
     6a2:	af 93       	push	r26
     6a4:	bf 93       	push	r27
     6a6:	80 91 93 02 	lds	r24, 0x0293
     6aa:	90 91 94 02 	lds	r25, 0x0294
     6ae:	a0 91 95 02 	lds	r26, 0x0295
     6b2:	b0 91 96 02 	lds	r27, 0x0296
     6b6:	30 91 92 02 	lds	r19, 0x0292
     6ba:	23 e0       	ldi	r18, 0x03	; 3
     6bc:	23 0f       	add	r18, r19
     6be:	2d 37       	cpi	r18, 0x7D	; 125
     6c0:	20 f4       	brcc	.+8      	; 0x6ca <__vector_23+0x3a>
     6c2:	01 96       	adiw	r24, 0x01	; 1
     6c4:	a1 1d       	adc	r26, r1
     6c6:	b1 1d       	adc	r27, r1
     6c8:	05 c0       	rjmp	.+10     	; 0x6d4 <__vector_23+0x44>
     6ca:	26 e8       	ldi	r18, 0x86	; 134
     6cc:	23 0f       	add	r18, r19
     6ce:	02 96       	adiw	r24, 0x02	; 2
     6d0:	a1 1d       	adc	r26, r1
     6d2:	b1 1d       	adc	r27, r1
     6d4:	20 93 92 02 	sts	0x0292, r18
     6d8:	80 93 93 02 	sts	0x0293, r24
     6dc:	90 93 94 02 	sts	0x0294, r25
     6e0:	a0 93 95 02 	sts	0x0295, r26
     6e4:	b0 93 96 02 	sts	0x0296, r27
     6e8:	80 91 97 02 	lds	r24, 0x0297
     6ec:	90 91 98 02 	lds	r25, 0x0298
     6f0:	a0 91 99 02 	lds	r26, 0x0299
     6f4:	b0 91 9a 02 	lds	r27, 0x029A
     6f8:	01 96       	adiw	r24, 0x01	; 1
     6fa:	a1 1d       	adc	r26, r1
     6fc:	b1 1d       	adc	r27, r1
     6fe:	80 93 97 02 	sts	0x0297, r24
     702:	90 93 98 02 	sts	0x0298, r25
     706:	a0 93 99 02 	sts	0x0299, r26
     70a:	b0 93 9a 02 	sts	0x029A, r27
     70e:	bf 91       	pop	r27
     710:	af 91       	pop	r26
     712:	9f 91       	pop	r25
     714:	8f 91       	pop	r24
     716:	3f 91       	pop	r19
     718:	2f 91       	pop	r18
     71a:	0f 90       	pop	r0
     71c:	0f be       	out	0x3f, r0	; 63
     71e:	0f 90       	pop	r0
     720:	1f 90       	pop	r1
     722:	18 95       	reti

00000724 <_Z6microsv>:

long  micros() {

	unsigned long m;
	uint8_t oldSREG = SREG, t;
     724:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
     726:	f8 94       	cli
	m = timer0_overflow_count;
     728:	80 91 97 02 	lds	r24, 0x0297
     72c:	90 91 98 02 	lds	r25, 0x0298
     730:	a0 91 99 02 	lds	r26, 0x0299
     734:	b0 91 9a 02 	lds	r27, 0x029A
	t = TCNT0;
     738:	26 b5       	in	r18, 0x26	; 38
  
#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
     73a:	a8 9b       	sbis	0x15, 0	; 21
     73c:	02 c0       	rjmp	.+4      	; 0x742 <_Z6microsv+0x1e>
     73e:	2f 3f       	cpi	r18, 0xFF	; 255
     740:	a9 f4       	brne	.+42     	; 0x76c <_Z6microsv+0x48>
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
     742:	3f bf       	out	0x3f, r19	; 63
	
	sei();
     744:	78 94       	sei
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
     746:	ba 2f       	mov	r27, r26
     748:	a9 2f       	mov	r26, r25
     74a:	98 2f       	mov	r25, r24
     74c:	88 27       	eor	r24, r24
     74e:	82 0f       	add	r24, r18
     750:	91 1d       	adc	r25, r1
     752:	a1 1d       	adc	r26, r1
     754:	b1 1d       	adc	r27, r1
     756:	bc 01       	movw	r22, r24
     758:	cd 01       	movw	r24, r26
     75a:	66 0f       	add	r22, r22
     75c:	77 1f       	adc	r23, r23
     75e:	88 1f       	adc	r24, r24
     760:	99 1f       	adc	r25, r25
     762:	66 0f       	add	r22, r22
     764:	77 1f       	adc	r23, r23
     766:	88 1f       	adc	r24, r24
     768:	99 1f       	adc	r25, r25
     76a:	08 95       	ret
	m = timer0_overflow_count;
	t = TCNT0;
  
#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
		m++;
     76c:	01 96       	adiw	r24, 0x01	; 1
     76e:	a1 1d       	adc	r26, r1
     770:	b1 1d       	adc	r27, r1
     772:	e7 cf       	rjmp	.-50     	; 0x742 <_Z6microsv+0x1e>

00000774 <_Z10initTimersv>:


void initTimers()
{
	// enable timer overflow interrupt for Timer0
	TIMSK0=(1<<TOIE0);
     774:	81 e0       	ldi	r24, 0x01	; 1
     776:	80 93 6e 00 	sts	0x006E, r24
	
	//set timer to zero
	TCNT0=0x00;
     77a:	16 bc       	out	0x26, r1	; 38

	// start timer0 with /1024 prescaler
	TCCR0B = (1<<CS01) | (1<<CS00);
     77c:	83 e0       	ldi	r24, 0x03	; 3
     77e:	85 bd       	out	0x25, r24	; 37
     780:	08 95       	ret

00000782 <_Z10USART_initii>:
	{
		while(!(UCSR3A & (1<<RXC3)));
		return UDR3;
	}
	
}
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
     786:	ec 01       	movw	r28, r24
     788:	cb 01       	movw	r24, r22
     78a:	aa 27       	eor	r26, r26
     78c:	97 fd       	sbrc	r25, 7
     78e:	a0 95       	com	r26
     790:	ba 2f       	mov	r27, r26
     792:	88 0f       	add	r24, r24
     794:	99 1f       	adc	r25, r25
     796:	aa 1f       	adc	r26, r26
     798:	bb 1f       	adc	r27, r27
     79a:	88 0f       	add	r24, r24
     79c:	99 1f       	adc	r25, r25
     79e:	aa 1f       	adc	r26, r26
     7a0:	bb 1f       	adc	r27, r27
     7a2:	9c 01       	movw	r18, r24
     7a4:	ad 01       	movw	r20, r26
     7a6:	22 0f       	add	r18, r18
     7a8:	33 1f       	adc	r19, r19
     7aa:	44 1f       	adc	r20, r20
     7ac:	55 1f       	adc	r21, r21
     7ae:	22 0f       	add	r18, r18
     7b0:	33 1f       	adc	r19, r19
     7b2:	44 1f       	adc	r20, r20
     7b4:	55 1f       	adc	r21, r21
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	74 e2       	ldi	r23, 0x24	; 36
     7ba:	84 ef       	ldi	r24, 0xF4	; 244
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	e0 d1       	rcall	.+960    	; 0xb80 <__udivmodsi4>
     7c0:	21 50       	subi	r18, 0x01	; 1
     7c2:	31 09       	sbc	r19, r1
     7c4:	20 97       	sbiw	r28, 0x00	; 0
     7c6:	59 f4       	brne	.+22     	; 0x7de <_Z10USART_initii+0x5c>
     7c8:	30 93 c5 00 	sts	0x00C5, r19
     7cc:	20 93 c4 00 	sts	0x00C4, r18
     7d0:	88 e1       	ldi	r24, 0x18	; 24
     7d2:	80 93 c1 00 	sts	0x00C1, r24
     7d6:	86 e0       	ldi	r24, 0x06	; 6
     7d8:	80 93 c2 00 	sts	0x00C2, r24
     7dc:	28 c0       	rjmp	.+80     	; 0x82e <_Z10USART_initii+0xac>
     7de:	c1 30       	cpi	r28, 0x01	; 1
     7e0:	d1 05       	cpc	r29, r1
     7e2:	59 f4       	brne	.+22     	; 0x7fa <_Z10USART_initii+0x78>
     7e4:	30 93 cd 00 	sts	0x00CD, r19
     7e8:	20 93 cc 00 	sts	0x00CC, r18
     7ec:	88 e1       	ldi	r24, 0x18	; 24
     7ee:	80 93 c9 00 	sts	0x00C9, r24
     7f2:	86 e0       	ldi	r24, 0x06	; 6
     7f4:	80 93 ca 00 	sts	0x00CA, r24
     7f8:	1a c0       	rjmp	.+52     	; 0x82e <_Z10USART_initii+0xac>
     7fa:	c2 30       	cpi	r28, 0x02	; 2
     7fc:	d1 05       	cpc	r29, r1
     7fe:	59 f4       	brne	.+22     	; 0x816 <_Z10USART_initii+0x94>
     800:	30 93 d5 00 	sts	0x00D5, r19
     804:	20 93 d4 00 	sts	0x00D4, r18
     808:	88 e1       	ldi	r24, 0x18	; 24
     80a:	80 93 d1 00 	sts	0x00D1, r24
     80e:	86 e0       	ldi	r24, 0x06	; 6
     810:	80 93 d2 00 	sts	0x00D2, r24
     814:	0c c0       	rjmp	.+24     	; 0x82e <_Z10USART_initii+0xac>
     816:	23 97       	sbiw	r28, 0x03	; 3
     818:	51 f4       	brne	.+20     	; 0x82e <_Z10USART_initii+0xac>
     81a:	30 93 35 01 	sts	0x0135, r19
     81e:	20 93 34 01 	sts	0x0134, r18
     822:	88 e1       	ldi	r24, 0x18	; 24
     824:	80 93 31 01 	sts	0x0131, r24
     828:	86 e0       	ldi	r24, 0x06	; 6
     82a:	80 93 32 01 	sts	0x0132, r24
     82e:	df 91       	pop	r29
     830:	cf 91       	pop	r28
     832:	08 95       	ret

00000834 <_Z10USART_sendih>:
     834:	00 97       	sbiw	r24, 0x00	; 0
     836:	41 f4       	brne	.+16     	; 0x848 <_Z10USART_sendih+0x14>
     838:	e0 ec       	ldi	r30, 0xC0	; 192
     83a:	f0 e0       	ldi	r31, 0x00	; 0
     83c:	80 81       	ld	r24, Z
     83e:	85 ff       	sbrs	r24, 5
     840:	fd cf       	rjmp	.-6      	; 0x83c <_Z10USART_sendih+0x8>
     842:	60 93 c6 00 	sts	0x00C6, r22
     846:	08 95       	ret
     848:	81 30       	cpi	r24, 0x01	; 1
     84a:	91 05       	cpc	r25, r1
     84c:	41 f4       	brne	.+16     	; 0x85e <_Z10USART_sendih+0x2a>
     84e:	e8 ec       	ldi	r30, 0xC8	; 200
     850:	f0 e0       	ldi	r31, 0x00	; 0
     852:	80 81       	ld	r24, Z
     854:	85 ff       	sbrs	r24, 5
     856:	fd cf       	rjmp	.-6      	; 0x852 <_Z10USART_sendih+0x1e>
     858:	60 93 ce 00 	sts	0x00CE, r22
     85c:	08 95       	ret
     85e:	82 30       	cpi	r24, 0x02	; 2
     860:	91 05       	cpc	r25, r1
     862:	41 f4       	brne	.+16     	; 0x874 <_Z10USART_sendih+0x40>
     864:	e0 ed       	ldi	r30, 0xD0	; 208
     866:	f0 e0       	ldi	r31, 0x00	; 0
     868:	80 81       	ld	r24, Z
     86a:	85 ff       	sbrs	r24, 5
     86c:	fd cf       	rjmp	.-6      	; 0x868 <_Z10USART_sendih+0x34>
     86e:	60 93 d6 00 	sts	0x00D6, r22
     872:	08 95       	ret
     874:	03 97       	sbiw	r24, 0x03	; 3
     876:	39 f4       	brne	.+14     	; 0x886 <_Z10USART_sendih+0x52>
     878:	e0 e3       	ldi	r30, 0x30	; 48
     87a:	f1 e0       	ldi	r31, 0x01	; 1
     87c:	80 81       	ld	r24, Z
     87e:	85 ff       	sbrs	r24, 5
     880:	fd cf       	rjmp	.-6      	; 0x87c <_Z10USART_sendih+0x48>
     882:	60 93 36 01 	sts	0x0136, r22
     886:	08 95       	ret

00000888 <_Z15USART_putstringiPKc>:

	//return the received string
	return(string);
}*/

void USART_putstring(int usartNum, const char* StringPtr){
     888:	0f 93       	push	r16
     88a:	1f 93       	push	r17
     88c:	cf 93       	push	r28
     88e:	df 93       	push	r29
     890:	8c 01       	movw	r16, r24
     892:	eb 01       	movw	r28, r22
	
	while(*StringPtr != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
     894:	68 81       	ld	r22, Y
     896:	66 23       	and	r22, r22
     898:	31 f0       	breq	.+12     	; 0x8a6 <_Z15USART_putstringiPKc+0x1e>
     89a:	21 96       	adiw	r28, 0x01	; 1
		USART_send(usartNum, *StringPtr);    //Using the simple send function we send one char at a time
     89c:	c8 01       	movw	r24, r16
     89e:	ca df       	rcall	.-108    	; 0x834 <_Z10USART_sendih>
	return(string);
}*/

void USART_putstring(int usartNum, const char* StringPtr){
	
	while(*StringPtr != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
     8a0:	69 91       	ld	r22, Y+
     8a2:	61 11       	cpse	r22, r1
     8a4:	fb cf       	rjmp	.-10     	; 0x89c <_Z15USART_putstringiPKc+0x14>
		USART_send(usartNum, *StringPtr);    //Using the simple send function we send one char at a time
	StringPtr++;}        //We increment the pointer so we can read the next char
	
}
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	1f 91       	pop	r17
     8ac:	0f 91       	pop	r16
     8ae:	08 95       	ret

000008b0 <_Z10initialisev>:
    }
}

void initialise()
{
	USART_init(USART_PC,9600);
     8b0:	60 e8       	ldi	r22, 0x80	; 128
     8b2:	75 e2       	ldi	r23, 0x25	; 37
     8b4:	80 e0       	ldi	r24, 0x00	; 0
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	64 df       	rcall	.-312    	; 0x782 <_Z10USART_initii>
	initTimers();
     8ba:	5c df       	rcall	.-328    	; 0x774 <_Z10initTimersv>
	//gps_init();
	//rx_init();
	//quad_output_init();
	altimeter_init();
     8bc:	c4 dd       	rcall	.-1144   	; 0x446 <_Z14altimeter_initv>
	
	debug_println("Initialization complete!");
     8be:	82 e5       	ldi	r24, 0x52	; 82
     8c0:	92 e0       	ldi	r25, 0x02	; 2
     8c2:	da cd       	rjmp	.-1100   	; 0x478 <_Z13debug_printlnPKc>
     8c4:	08 95       	ret

000008c6 <main>:
float compass_get_heading();	//returns current heading, formatted as degrees relative to North (0-360)


int main(void)
{
	initialise();
     8c6:	f4 df       	rcall	.-24     	; 0x8b0 <_Z10initialisev>

    while(1)
    {
		//_delay_ms(1000);
		//debug_printf(mpl_getAlt(altimeter_get_status()));
		debug_printf(altimeter_get_metres());
     8c8:	3e dd       	rcall	.-1412   	; 0x346 <_Z20altimeter_get_metresv>
     8ca:	e0 dd       	rcall	.-1088   	; 0x48c <_Z12debug_printff>
		debug_print("\n\r");
     8cc:	8f e4       	ldi	r24, 0x4F	; 79
     8ce:	92 e0       	ldi	r25, 0x02	; 2
     8d0:	ce dd       	rcall	.-1124   	; 0x46e <_Z11debug_printPKc>
     8d2:	fa cf       	rjmp	.-12     	; 0x8c8 <main+0x2>

000008d4 <__subsf3>:
     8d4:	50 58       	subi	r21, 0x80	; 128

000008d6 <__addsf3>:
     8d6:	bb 27       	eor	r27, r27
     8d8:	aa 27       	eor	r26, r26
     8da:	0e d0       	rcall	.+28     	; 0x8f8 <__addsf3x>
     8dc:	b4 c0       	rjmp	.+360    	; 0xa46 <__fp_round>
     8de:	a5 d0       	rcall	.+330    	; 0xa2a <__fp_pscA>
     8e0:	30 f0       	brcs	.+12     	; 0x8ee <__addsf3+0x18>
     8e2:	aa d0       	rcall	.+340    	; 0xa38 <__fp_pscB>
     8e4:	20 f0       	brcs	.+8      	; 0x8ee <__addsf3+0x18>
     8e6:	31 f4       	brne	.+12     	; 0x8f4 <__addsf3+0x1e>
     8e8:	9f 3f       	cpi	r25, 0xFF	; 255
     8ea:	11 f4       	brne	.+4      	; 0x8f0 <__addsf3+0x1a>
     8ec:	1e f4       	brtc	.+6      	; 0x8f4 <__addsf3+0x1e>
     8ee:	9a c0       	rjmp	.+308    	; 0xa24 <__fp_nan>
     8f0:	0e f4       	brtc	.+2      	; 0x8f4 <__addsf3+0x1e>
     8f2:	e0 95       	com	r30
     8f4:	e7 fb       	bst	r30, 7
     8f6:	90 c0       	rjmp	.+288    	; 0xa18 <__fp_inf>

000008f8 <__addsf3x>:
     8f8:	e9 2f       	mov	r30, r25
     8fa:	b6 d0       	rcall	.+364    	; 0xa68 <__fp_split3>
     8fc:	80 f3       	brcs	.-32     	; 0x8de <__addsf3+0x8>
     8fe:	ba 17       	cp	r27, r26
     900:	62 07       	cpc	r22, r18
     902:	73 07       	cpc	r23, r19
     904:	84 07       	cpc	r24, r20
     906:	95 07       	cpc	r25, r21
     908:	18 f0       	brcs	.+6      	; 0x910 <__addsf3x+0x18>
     90a:	71 f4       	brne	.+28     	; 0x928 <__addsf3x+0x30>
     90c:	9e f5       	brtc	.+102    	; 0x974 <__addsf3x+0x7c>
     90e:	ce c0       	rjmp	.+412    	; 0xaac <__fp_zero>
     910:	0e f4       	brtc	.+2      	; 0x914 <__addsf3x+0x1c>
     912:	e0 95       	com	r30
     914:	0b 2e       	mov	r0, r27
     916:	ba 2f       	mov	r27, r26
     918:	a0 2d       	mov	r26, r0
     91a:	0b 01       	movw	r0, r22
     91c:	b9 01       	movw	r22, r18
     91e:	90 01       	movw	r18, r0
     920:	0c 01       	movw	r0, r24
     922:	ca 01       	movw	r24, r20
     924:	a0 01       	movw	r20, r0
     926:	11 24       	eor	r1, r1
     928:	ff 27       	eor	r31, r31
     92a:	59 1b       	sub	r21, r25
     92c:	99 f0       	breq	.+38     	; 0x954 <__addsf3x+0x5c>
     92e:	59 3f       	cpi	r21, 0xF9	; 249
     930:	50 f4       	brcc	.+20     	; 0x946 <__addsf3x+0x4e>
     932:	50 3e       	cpi	r21, 0xE0	; 224
     934:	68 f1       	brcs	.+90     	; 0x990 <__addsf3x+0x98>
     936:	1a 16       	cp	r1, r26
     938:	f0 40       	sbci	r31, 0x00	; 0
     93a:	a2 2f       	mov	r26, r18
     93c:	23 2f       	mov	r18, r19
     93e:	34 2f       	mov	r19, r20
     940:	44 27       	eor	r20, r20
     942:	58 5f       	subi	r21, 0xF8	; 248
     944:	f3 cf       	rjmp	.-26     	; 0x92c <__addsf3x+0x34>
     946:	46 95       	lsr	r20
     948:	37 95       	ror	r19
     94a:	27 95       	ror	r18
     94c:	a7 95       	ror	r26
     94e:	f0 40       	sbci	r31, 0x00	; 0
     950:	53 95       	inc	r21
     952:	c9 f7       	brne	.-14     	; 0x946 <__addsf3x+0x4e>
     954:	7e f4       	brtc	.+30     	; 0x974 <__addsf3x+0x7c>
     956:	1f 16       	cp	r1, r31
     958:	ba 0b       	sbc	r27, r26
     95a:	62 0b       	sbc	r22, r18
     95c:	73 0b       	sbc	r23, r19
     95e:	84 0b       	sbc	r24, r20
     960:	ba f0       	brmi	.+46     	; 0x990 <__addsf3x+0x98>
     962:	91 50       	subi	r25, 0x01	; 1
     964:	a1 f0       	breq	.+40     	; 0x98e <__addsf3x+0x96>
     966:	ff 0f       	add	r31, r31
     968:	bb 1f       	adc	r27, r27
     96a:	66 1f       	adc	r22, r22
     96c:	77 1f       	adc	r23, r23
     96e:	88 1f       	adc	r24, r24
     970:	c2 f7       	brpl	.-16     	; 0x962 <__addsf3x+0x6a>
     972:	0e c0       	rjmp	.+28     	; 0x990 <__addsf3x+0x98>
     974:	ba 0f       	add	r27, r26
     976:	62 1f       	adc	r22, r18
     978:	73 1f       	adc	r23, r19
     97a:	84 1f       	adc	r24, r20
     97c:	48 f4       	brcc	.+18     	; 0x990 <__addsf3x+0x98>
     97e:	87 95       	ror	r24
     980:	77 95       	ror	r23
     982:	67 95       	ror	r22
     984:	b7 95       	ror	r27
     986:	f7 95       	ror	r31
     988:	9e 3f       	cpi	r25, 0xFE	; 254
     98a:	08 f0       	brcs	.+2      	; 0x98e <__addsf3x+0x96>
     98c:	b3 cf       	rjmp	.-154    	; 0x8f4 <__addsf3+0x1e>
     98e:	93 95       	inc	r25
     990:	88 0f       	add	r24, r24
     992:	08 f0       	brcs	.+2      	; 0x996 <__addsf3x+0x9e>
     994:	99 27       	eor	r25, r25
     996:	ee 0f       	add	r30, r30
     998:	97 95       	ror	r25
     99a:	87 95       	ror	r24
     99c:	08 95       	ret

0000099e <__floatunsisf>:
     99e:	e8 94       	clt
     9a0:	09 c0       	rjmp	.+18     	; 0x9b4 <__floatsisf+0x12>

000009a2 <__floatsisf>:
     9a2:	97 fb       	bst	r25, 7
     9a4:	3e f4       	brtc	.+14     	; 0x9b4 <__floatsisf+0x12>
     9a6:	90 95       	com	r25
     9a8:	80 95       	com	r24
     9aa:	70 95       	com	r23
     9ac:	61 95       	neg	r22
     9ae:	7f 4f       	sbci	r23, 0xFF	; 255
     9b0:	8f 4f       	sbci	r24, 0xFF	; 255
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	99 23       	and	r25, r25
     9b6:	a9 f0       	breq	.+42     	; 0x9e2 <__floatsisf+0x40>
     9b8:	f9 2f       	mov	r31, r25
     9ba:	96 e9       	ldi	r25, 0x96	; 150
     9bc:	bb 27       	eor	r27, r27
     9be:	93 95       	inc	r25
     9c0:	f6 95       	lsr	r31
     9c2:	87 95       	ror	r24
     9c4:	77 95       	ror	r23
     9c6:	67 95       	ror	r22
     9c8:	b7 95       	ror	r27
     9ca:	f1 11       	cpse	r31, r1
     9cc:	f8 cf       	rjmp	.-16     	; 0x9be <__floatsisf+0x1c>
     9ce:	fa f4       	brpl	.+62     	; 0xa0e <__floatsisf+0x6c>
     9d0:	bb 0f       	add	r27, r27
     9d2:	11 f4       	brne	.+4      	; 0x9d8 <__floatsisf+0x36>
     9d4:	60 ff       	sbrs	r22, 0
     9d6:	1b c0       	rjmp	.+54     	; 0xa0e <__floatsisf+0x6c>
     9d8:	6f 5f       	subi	r22, 0xFF	; 255
     9da:	7f 4f       	sbci	r23, 0xFF	; 255
     9dc:	8f 4f       	sbci	r24, 0xFF	; 255
     9de:	9f 4f       	sbci	r25, 0xFF	; 255
     9e0:	16 c0       	rjmp	.+44     	; 0xa0e <__floatsisf+0x6c>
     9e2:	88 23       	and	r24, r24
     9e4:	11 f0       	breq	.+4      	; 0x9ea <__floatsisf+0x48>
     9e6:	96 e9       	ldi	r25, 0x96	; 150
     9e8:	11 c0       	rjmp	.+34     	; 0xa0c <__floatsisf+0x6a>
     9ea:	77 23       	and	r23, r23
     9ec:	21 f0       	breq	.+8      	; 0x9f6 <__floatsisf+0x54>
     9ee:	9e e8       	ldi	r25, 0x8E	; 142
     9f0:	87 2f       	mov	r24, r23
     9f2:	76 2f       	mov	r23, r22
     9f4:	05 c0       	rjmp	.+10     	; 0xa00 <__floatsisf+0x5e>
     9f6:	66 23       	and	r22, r22
     9f8:	71 f0       	breq	.+28     	; 0xa16 <__floatsisf+0x74>
     9fa:	96 e8       	ldi	r25, 0x86	; 134
     9fc:	86 2f       	mov	r24, r22
     9fe:	70 e0       	ldi	r23, 0x00	; 0
     a00:	60 e0       	ldi	r22, 0x00	; 0
     a02:	2a f0       	brmi	.+10     	; 0xa0e <__floatsisf+0x6c>
     a04:	9a 95       	dec	r25
     a06:	66 0f       	add	r22, r22
     a08:	77 1f       	adc	r23, r23
     a0a:	88 1f       	adc	r24, r24
     a0c:	da f7       	brpl	.-10     	; 0xa04 <__floatsisf+0x62>
     a0e:	88 0f       	add	r24, r24
     a10:	96 95       	lsr	r25
     a12:	87 95       	ror	r24
     a14:	97 f9       	bld	r25, 7
     a16:	08 95       	ret

00000a18 <__fp_inf>:
     a18:	97 f9       	bld	r25, 7
     a1a:	9f 67       	ori	r25, 0x7F	; 127
     a1c:	80 e8       	ldi	r24, 0x80	; 128
     a1e:	70 e0       	ldi	r23, 0x00	; 0
     a20:	60 e0       	ldi	r22, 0x00	; 0
     a22:	08 95       	ret

00000a24 <__fp_nan>:
     a24:	9f ef       	ldi	r25, 0xFF	; 255
     a26:	80 ec       	ldi	r24, 0xC0	; 192
     a28:	08 95       	ret

00000a2a <__fp_pscA>:
     a2a:	00 24       	eor	r0, r0
     a2c:	0a 94       	dec	r0
     a2e:	16 16       	cp	r1, r22
     a30:	17 06       	cpc	r1, r23
     a32:	18 06       	cpc	r1, r24
     a34:	09 06       	cpc	r0, r25
     a36:	08 95       	ret

00000a38 <__fp_pscB>:
     a38:	00 24       	eor	r0, r0
     a3a:	0a 94       	dec	r0
     a3c:	12 16       	cp	r1, r18
     a3e:	13 06       	cpc	r1, r19
     a40:	14 06       	cpc	r1, r20
     a42:	05 06       	cpc	r0, r21
     a44:	08 95       	ret

00000a46 <__fp_round>:
     a46:	09 2e       	mov	r0, r25
     a48:	03 94       	inc	r0
     a4a:	00 0c       	add	r0, r0
     a4c:	11 f4       	brne	.+4      	; 0xa52 <__fp_round+0xc>
     a4e:	88 23       	and	r24, r24
     a50:	52 f0       	brmi	.+20     	; 0xa66 <__fp_round+0x20>
     a52:	bb 0f       	add	r27, r27
     a54:	40 f4       	brcc	.+16     	; 0xa66 <__fp_round+0x20>
     a56:	bf 2b       	or	r27, r31
     a58:	11 f4       	brne	.+4      	; 0xa5e <__fp_round+0x18>
     a5a:	60 ff       	sbrs	r22, 0
     a5c:	04 c0       	rjmp	.+8      	; 0xa66 <__fp_round+0x20>
     a5e:	6f 5f       	subi	r22, 0xFF	; 255
     a60:	7f 4f       	sbci	r23, 0xFF	; 255
     a62:	8f 4f       	sbci	r24, 0xFF	; 255
     a64:	9f 4f       	sbci	r25, 0xFF	; 255
     a66:	08 95       	ret

00000a68 <__fp_split3>:
     a68:	57 fd       	sbrc	r21, 7
     a6a:	90 58       	subi	r25, 0x80	; 128
     a6c:	44 0f       	add	r20, r20
     a6e:	55 1f       	adc	r21, r21
     a70:	59 f0       	breq	.+22     	; 0xa88 <__fp_splitA+0x10>
     a72:	5f 3f       	cpi	r21, 0xFF	; 255
     a74:	71 f0       	breq	.+28     	; 0xa92 <__fp_splitA+0x1a>
     a76:	47 95       	ror	r20

00000a78 <__fp_splitA>:
     a78:	88 0f       	add	r24, r24
     a7a:	97 fb       	bst	r25, 7
     a7c:	99 1f       	adc	r25, r25
     a7e:	61 f0       	breq	.+24     	; 0xa98 <__fp_splitA+0x20>
     a80:	9f 3f       	cpi	r25, 0xFF	; 255
     a82:	79 f0       	breq	.+30     	; 0xaa2 <__fp_splitA+0x2a>
     a84:	87 95       	ror	r24
     a86:	08 95       	ret
     a88:	12 16       	cp	r1, r18
     a8a:	13 06       	cpc	r1, r19
     a8c:	14 06       	cpc	r1, r20
     a8e:	55 1f       	adc	r21, r21
     a90:	f2 cf       	rjmp	.-28     	; 0xa76 <__fp_split3+0xe>
     a92:	46 95       	lsr	r20
     a94:	f1 df       	rcall	.-30     	; 0xa78 <__fp_splitA>
     a96:	08 c0       	rjmp	.+16     	; 0xaa8 <__fp_splitA+0x30>
     a98:	16 16       	cp	r1, r22
     a9a:	17 06       	cpc	r1, r23
     a9c:	18 06       	cpc	r1, r24
     a9e:	99 1f       	adc	r25, r25
     aa0:	f1 cf       	rjmp	.-30     	; 0xa84 <__fp_splitA+0xc>
     aa2:	86 95       	lsr	r24
     aa4:	71 05       	cpc	r23, r1
     aa6:	61 05       	cpc	r22, r1
     aa8:	08 94       	sec
     aaa:	08 95       	ret

00000aac <__fp_zero>:
     aac:	e8 94       	clt

00000aae <__fp_szero>:
     aae:	bb 27       	eor	r27, r27
     ab0:	66 27       	eor	r22, r22
     ab2:	77 27       	eor	r23, r23
     ab4:	cb 01       	movw	r24, r22
     ab6:	97 f9       	bld	r25, 7
     ab8:	08 95       	ret

00000aba <__mulsf3>:
     aba:	0b d0       	rcall	.+22     	; 0xad2 <__mulsf3x>
     abc:	c4 cf       	rjmp	.-120    	; 0xa46 <__fp_round>
     abe:	b5 df       	rcall	.-150    	; 0xa2a <__fp_pscA>
     ac0:	28 f0       	brcs	.+10     	; 0xacc <__mulsf3+0x12>
     ac2:	ba df       	rcall	.-140    	; 0xa38 <__fp_pscB>
     ac4:	18 f0       	brcs	.+6      	; 0xacc <__mulsf3+0x12>
     ac6:	95 23       	and	r25, r21
     ac8:	09 f0       	breq	.+2      	; 0xacc <__mulsf3+0x12>
     aca:	a6 cf       	rjmp	.-180    	; 0xa18 <__fp_inf>
     acc:	ab cf       	rjmp	.-170    	; 0xa24 <__fp_nan>
     ace:	11 24       	eor	r1, r1
     ad0:	ee cf       	rjmp	.-36     	; 0xaae <__fp_szero>

00000ad2 <__mulsf3x>:
     ad2:	ca df       	rcall	.-108    	; 0xa68 <__fp_split3>
     ad4:	a0 f3       	brcs	.-24     	; 0xabe <__mulsf3+0x4>

00000ad6 <__mulsf3_pse>:
     ad6:	95 9f       	mul	r25, r21
     ad8:	d1 f3       	breq	.-12     	; 0xace <__mulsf3+0x14>
     ada:	95 0f       	add	r25, r21
     adc:	50 e0       	ldi	r21, 0x00	; 0
     ade:	55 1f       	adc	r21, r21
     ae0:	62 9f       	mul	r22, r18
     ae2:	f0 01       	movw	r30, r0
     ae4:	72 9f       	mul	r23, r18
     ae6:	bb 27       	eor	r27, r27
     ae8:	f0 0d       	add	r31, r0
     aea:	b1 1d       	adc	r27, r1
     aec:	63 9f       	mul	r22, r19
     aee:	aa 27       	eor	r26, r26
     af0:	f0 0d       	add	r31, r0
     af2:	b1 1d       	adc	r27, r1
     af4:	aa 1f       	adc	r26, r26
     af6:	64 9f       	mul	r22, r20
     af8:	66 27       	eor	r22, r22
     afa:	b0 0d       	add	r27, r0
     afc:	a1 1d       	adc	r26, r1
     afe:	66 1f       	adc	r22, r22
     b00:	82 9f       	mul	r24, r18
     b02:	22 27       	eor	r18, r18
     b04:	b0 0d       	add	r27, r0
     b06:	a1 1d       	adc	r26, r1
     b08:	62 1f       	adc	r22, r18
     b0a:	73 9f       	mul	r23, r19
     b0c:	b0 0d       	add	r27, r0
     b0e:	a1 1d       	adc	r26, r1
     b10:	62 1f       	adc	r22, r18
     b12:	83 9f       	mul	r24, r19
     b14:	a0 0d       	add	r26, r0
     b16:	61 1d       	adc	r22, r1
     b18:	22 1f       	adc	r18, r18
     b1a:	74 9f       	mul	r23, r20
     b1c:	33 27       	eor	r19, r19
     b1e:	a0 0d       	add	r26, r0
     b20:	61 1d       	adc	r22, r1
     b22:	23 1f       	adc	r18, r19
     b24:	84 9f       	mul	r24, r20
     b26:	60 0d       	add	r22, r0
     b28:	21 1d       	adc	r18, r1
     b2a:	82 2f       	mov	r24, r18
     b2c:	76 2f       	mov	r23, r22
     b2e:	6a 2f       	mov	r22, r26
     b30:	11 24       	eor	r1, r1
     b32:	9f 57       	subi	r25, 0x7F	; 127
     b34:	50 40       	sbci	r21, 0x00	; 0
     b36:	8a f0       	brmi	.+34     	; 0xb5a <__mulsf3_pse+0x84>
     b38:	e1 f0       	breq	.+56     	; 0xb72 <__mulsf3_pse+0x9c>
     b3a:	88 23       	and	r24, r24
     b3c:	4a f0       	brmi	.+18     	; 0xb50 <__mulsf3_pse+0x7a>
     b3e:	ee 0f       	add	r30, r30
     b40:	ff 1f       	adc	r31, r31
     b42:	bb 1f       	adc	r27, r27
     b44:	66 1f       	adc	r22, r22
     b46:	77 1f       	adc	r23, r23
     b48:	88 1f       	adc	r24, r24
     b4a:	91 50       	subi	r25, 0x01	; 1
     b4c:	50 40       	sbci	r21, 0x00	; 0
     b4e:	a9 f7       	brne	.-22     	; 0xb3a <__mulsf3_pse+0x64>
     b50:	9e 3f       	cpi	r25, 0xFE	; 254
     b52:	51 05       	cpc	r21, r1
     b54:	70 f0       	brcs	.+28     	; 0xb72 <__mulsf3_pse+0x9c>
     b56:	60 cf       	rjmp	.-320    	; 0xa18 <__fp_inf>
     b58:	aa cf       	rjmp	.-172    	; 0xaae <__fp_szero>
     b5a:	5f 3f       	cpi	r21, 0xFF	; 255
     b5c:	ec f3       	brlt	.-6      	; 0xb58 <__mulsf3_pse+0x82>
     b5e:	98 3e       	cpi	r25, 0xE8	; 232
     b60:	dc f3       	brlt	.-10     	; 0xb58 <__mulsf3_pse+0x82>
     b62:	86 95       	lsr	r24
     b64:	77 95       	ror	r23
     b66:	67 95       	ror	r22
     b68:	b7 95       	ror	r27
     b6a:	f7 95       	ror	r31
     b6c:	e7 95       	ror	r30
     b6e:	9f 5f       	subi	r25, 0xFF	; 255
     b70:	c1 f7       	brne	.-16     	; 0xb62 <__mulsf3_pse+0x8c>
     b72:	fe 2b       	or	r31, r30
     b74:	88 0f       	add	r24, r24
     b76:	91 1d       	adc	r25, r1
     b78:	96 95       	lsr	r25
     b7a:	87 95       	ror	r24
     b7c:	97 f9       	bld	r25, 7
     b7e:	08 95       	ret

00000b80 <__udivmodsi4>:
     b80:	a1 e2       	ldi	r26, 0x21	; 33
     b82:	1a 2e       	mov	r1, r26
     b84:	aa 1b       	sub	r26, r26
     b86:	bb 1b       	sub	r27, r27
     b88:	fd 01       	movw	r30, r26
     b8a:	0d c0       	rjmp	.+26     	; 0xba6 <__udivmodsi4_ep>

00000b8c <__udivmodsi4_loop>:
     b8c:	aa 1f       	adc	r26, r26
     b8e:	bb 1f       	adc	r27, r27
     b90:	ee 1f       	adc	r30, r30
     b92:	ff 1f       	adc	r31, r31
     b94:	a2 17       	cp	r26, r18
     b96:	b3 07       	cpc	r27, r19
     b98:	e4 07       	cpc	r30, r20
     b9a:	f5 07       	cpc	r31, r21
     b9c:	20 f0       	brcs	.+8      	; 0xba6 <__udivmodsi4_ep>
     b9e:	a2 1b       	sub	r26, r18
     ba0:	b3 0b       	sbc	r27, r19
     ba2:	e4 0b       	sbc	r30, r20
     ba4:	f5 0b       	sbc	r31, r21

00000ba6 <__udivmodsi4_ep>:
     ba6:	66 1f       	adc	r22, r22
     ba8:	77 1f       	adc	r23, r23
     baa:	88 1f       	adc	r24, r24
     bac:	99 1f       	adc	r25, r25
     bae:	1a 94       	dec	r1
     bb0:	69 f7       	brne	.-38     	; 0xb8c <__udivmodsi4_loop>
     bb2:	60 95       	com	r22
     bb4:	70 95       	com	r23
     bb6:	80 95       	com	r24
     bb8:	90 95       	com	r25
     bba:	9b 01       	movw	r18, r22
     bbc:	ac 01       	movw	r20, r24
     bbe:	bd 01       	movw	r22, r26
     bc0:	cf 01       	movw	r24, r30
     bc2:	08 95       	ret

00000bc4 <dtostrf>:
     bc4:	ef 92       	push	r14
     bc6:	0f 93       	push	r16
     bc8:	1f 93       	push	r17
     bca:	cf 93       	push	r28
     bcc:	df 93       	push	r29
     bce:	e8 01       	movw	r28, r16
     bd0:	47 ff       	sbrs	r20, 7
     bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <dtostrf+0x14>
     bd4:	34 e1       	ldi	r19, 0x14	; 20
     bd6:	01 c0       	rjmp	.+2      	; 0xbda <dtostrf+0x16>
     bd8:	34 e0       	ldi	r19, 0x04	; 4
     bda:	e4 2f       	mov	r30, r20
     bdc:	ff 27       	eor	r31, r31
     bde:	e7 fd       	sbrc	r30, 7
     be0:	f0 95       	com	r31
     be2:	f7 ff       	sbrs	r31, 7
     be4:	03 c0       	rjmp	.+6      	; 0xbec <dtostrf+0x28>
     be6:	f1 95       	neg	r31
     be8:	e1 95       	neg	r30
     bea:	f1 09       	sbc	r31, r1
     bec:	e3 2e       	mov	r14, r19
     bee:	02 2f       	mov	r16, r18
     bf0:	2e 2f       	mov	r18, r30
     bf2:	ae 01       	movw	r20, r28
     bf4:	07 d0       	rcall	.+14     	; 0xc04 <dtoa_prf>
     bf6:	ce 01       	movw	r24, r28
     bf8:	df 91       	pop	r29
     bfa:	cf 91       	pop	r28
     bfc:	1f 91       	pop	r17
     bfe:	0f 91       	pop	r16
     c00:	ef 90       	pop	r14
     c02:	08 95       	ret

00000c04 <dtoa_prf>:
     c04:	6f 92       	push	r6
     c06:	7f 92       	push	r7
     c08:	9f 92       	push	r9
     c0a:	af 92       	push	r10
     c0c:	bf 92       	push	r11
     c0e:	cf 92       	push	r12
     c10:	df 92       	push	r13
     c12:	ef 92       	push	r14
     c14:	ff 92       	push	r15
     c16:	0f 93       	push	r16
     c18:	1f 93       	push	r17
     c1a:	cf 93       	push	r28
     c1c:	df 93       	push	r29
     c1e:	cd b7       	in	r28, 0x3d	; 61
     c20:	de b7       	in	r29, 0x3e	; 62
     c22:	29 97       	sbiw	r28, 0x09	; 9
     c24:	0f b6       	in	r0, 0x3f	; 63
     c26:	f8 94       	cli
     c28:	de bf       	out	0x3e, r29	; 62
     c2a:	0f be       	out	0x3f, r0	; 63
     c2c:	cd bf       	out	0x3d, r28	; 61
     c2e:	6a 01       	movw	r12, r20
     c30:	b2 2e       	mov	r11, r18
     c32:	10 2f       	mov	r17, r16
     c34:	0c 33       	cpi	r16, 0x3C	; 60
     c36:	20 f4       	brcc	.+8      	; 0xc40 <dtoa_prf+0x3c>
     c38:	ff 24       	eor	r15, r15
     c3a:	f3 94       	inc	r15
     c3c:	f0 0e       	add	r15, r16
     c3e:	02 c0       	rjmp	.+4      	; 0xc44 <dtoa_prf+0x40>
     c40:	4c e3       	ldi	r20, 0x3C	; 60
     c42:	f4 2e       	mov	r15, r20
     c44:	0f 2d       	mov	r16, r15
     c46:	27 e0       	ldi	r18, 0x07	; 7
     c48:	ae 01       	movw	r20, r28
     c4a:	4f 5f       	subi	r20, 0xFF	; 255
     c4c:	5f 4f       	sbci	r21, 0xFF	; 255
     c4e:	57 d1       	rcall	.+686    	; 0xefe <__ftoa_engine>
     c50:	79 81       	ldd	r23, Y+1	; 0x01
     c52:	27 2f       	mov	r18, r23
     c54:	29 70       	andi	r18, 0x09	; 9
     c56:	21 30       	cpi	r18, 0x01	; 1
     c58:	31 f0       	breq	.+12     	; 0xc66 <dtoa_prf+0x62>
     c5a:	e1 fc       	sbrc	r14, 1
     c5c:	06 c0       	rjmp	.+12     	; 0xc6a <dtoa_prf+0x66>
     c5e:	e0 fc       	sbrc	r14, 0
     c60:	06 c0       	rjmp	.+12     	; 0xc6e <dtoa_prf+0x6a>
     c62:	60 e0       	ldi	r22, 0x00	; 0
     c64:	05 c0       	rjmp	.+10     	; 0xc70 <dtoa_prf+0x6c>
     c66:	6d e2       	ldi	r22, 0x2D	; 45
     c68:	03 c0       	rjmp	.+6      	; 0xc70 <dtoa_prf+0x6c>
     c6a:	6b e2       	ldi	r22, 0x2B	; 43
     c6c:	01 c0       	rjmp	.+2      	; 0xc70 <dtoa_prf+0x6c>
     c6e:	60 e2       	ldi	r22, 0x20	; 32
     c70:	ae 2d       	mov	r26, r14
     c72:	a0 71       	andi	r26, 0x10	; 16
     c74:	73 ff       	sbrs	r23, 3
     c76:	36 c0       	rjmp	.+108    	; 0xce4 <dtoa_prf+0xe0>
     c78:	66 23       	and	r22, r22
     c7a:	11 f0       	breq	.+4      	; 0xc80 <dtoa_prf+0x7c>
     c7c:	84 e0       	ldi	r24, 0x04	; 4
     c7e:	01 c0       	rjmp	.+2      	; 0xc82 <dtoa_prf+0x7e>
     c80:	83 e0       	ldi	r24, 0x03	; 3
     c82:	8b 15       	cp	r24, r11
     c84:	10 f4       	brcc	.+4      	; 0xc8a <dtoa_prf+0x86>
     c86:	b8 1a       	sub	r11, r24
     c88:	01 c0       	rjmp	.+2      	; 0xc8c <dtoa_prf+0x88>
     c8a:	b1 2c       	mov	r11, r1
     c8c:	a1 11       	cpse	r26, r1
     c8e:	0b c0       	rjmp	.+22     	; 0xca6 <dtoa_prf+0xa2>
     c90:	f6 01       	movw	r30, r12
     c92:	8b 2d       	mov	r24, r11
     c94:	90 e2       	ldi	r25, 0x20	; 32
     c96:	88 23       	and	r24, r24
     c98:	19 f0       	breq	.+6      	; 0xca0 <dtoa_prf+0x9c>
     c9a:	91 93       	st	Z+, r25
     c9c:	81 50       	subi	r24, 0x01	; 1
     c9e:	fb cf       	rjmp	.-10     	; 0xc96 <dtoa_prf+0x92>
     ca0:	cb 0c       	add	r12, r11
     ca2:	d1 1c       	adc	r13, r1
     ca4:	b1 2c       	mov	r11, r1
     ca6:	66 23       	and	r22, r22
     ca8:	31 f0       	breq	.+12     	; 0xcb6 <dtoa_prf+0xb2>
     caa:	f6 01       	movw	r30, r12
     cac:	60 83       	st	Z, r22
     cae:	96 01       	movw	r18, r12
     cb0:	2f 5f       	subi	r18, 0xFF	; 255
     cb2:	3f 4f       	sbci	r19, 0xFF	; 255
     cb4:	69 01       	movw	r12, r18
     cb6:	c6 01       	movw	r24, r12
     cb8:	03 96       	adiw	r24, 0x03	; 3
     cba:	e2 fe       	sbrs	r14, 2
     cbc:	05 c0       	rjmp	.+10     	; 0xcc8 <dtoa_prf+0xc4>
     cbe:	2e e4       	ldi	r18, 0x4E	; 78
     cc0:	f6 01       	movw	r30, r12
     cc2:	20 83       	st	Z, r18
     cc4:	31 e4       	ldi	r19, 0x41	; 65
     cc6:	04 c0       	rjmp	.+8      	; 0xcd0 <dtoa_prf+0xcc>
     cc8:	2e e6       	ldi	r18, 0x6E	; 110
     cca:	f6 01       	movw	r30, r12
     ccc:	20 83       	st	Z, r18
     cce:	31 e6       	ldi	r19, 0x61	; 97
     cd0:	31 83       	std	Z+1, r19	; 0x01
     cd2:	22 83       	std	Z+2, r18	; 0x02
     cd4:	fc 01       	movw	r30, r24
     cd6:	2b 2d       	mov	r18, r11
     cd8:	30 e2       	ldi	r19, 0x20	; 32
     cda:	22 23       	and	r18, r18
     cdc:	f1 f1       	breq	.+124    	; 0xd5a <dtoa_prf+0x156>
     cde:	31 93       	st	Z+, r19
     ce0:	21 50       	subi	r18, 0x01	; 1
     ce2:	fb cf       	rjmp	.-10     	; 0xcda <dtoa_prf+0xd6>
     ce4:	72 ff       	sbrs	r23, 2
     ce6:	40 c0       	rjmp	.+128    	; 0xd68 <dtoa_prf+0x164>
     ce8:	66 23       	and	r22, r22
     cea:	11 f0       	breq	.+4      	; 0xcf0 <dtoa_prf+0xec>
     cec:	84 e0       	ldi	r24, 0x04	; 4
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <dtoa_prf+0xee>
     cf0:	83 e0       	ldi	r24, 0x03	; 3
     cf2:	8b 15       	cp	r24, r11
     cf4:	10 f4       	brcc	.+4      	; 0xcfa <dtoa_prf+0xf6>
     cf6:	b8 1a       	sub	r11, r24
     cf8:	01 c0       	rjmp	.+2      	; 0xcfc <dtoa_prf+0xf8>
     cfa:	b1 2c       	mov	r11, r1
     cfc:	a1 11       	cpse	r26, r1
     cfe:	0b c0       	rjmp	.+22     	; 0xd16 <dtoa_prf+0x112>
     d00:	f6 01       	movw	r30, r12
     d02:	8b 2d       	mov	r24, r11
     d04:	90 e2       	ldi	r25, 0x20	; 32
     d06:	88 23       	and	r24, r24
     d08:	19 f0       	breq	.+6      	; 0xd10 <dtoa_prf+0x10c>
     d0a:	91 93       	st	Z+, r25
     d0c:	81 50       	subi	r24, 0x01	; 1
     d0e:	fb cf       	rjmp	.-10     	; 0xd06 <dtoa_prf+0x102>
     d10:	cb 0c       	add	r12, r11
     d12:	d1 1c       	adc	r13, r1
     d14:	b1 2c       	mov	r11, r1
     d16:	66 23       	and	r22, r22
     d18:	31 f0       	breq	.+12     	; 0xd26 <dtoa_prf+0x122>
     d1a:	f6 01       	movw	r30, r12
     d1c:	60 83       	st	Z, r22
     d1e:	96 01       	movw	r18, r12
     d20:	2f 5f       	subi	r18, 0xFF	; 255
     d22:	3f 4f       	sbci	r19, 0xFF	; 255
     d24:	69 01       	movw	r12, r18
     d26:	c6 01       	movw	r24, r12
     d28:	03 96       	adiw	r24, 0x03	; 3
     d2a:	e2 fe       	sbrs	r14, 2
     d2c:	07 c0       	rjmp	.+14     	; 0xd3c <dtoa_prf+0x138>
     d2e:	29 e4       	ldi	r18, 0x49	; 73
     d30:	f6 01       	movw	r30, r12
     d32:	20 83       	st	Z, r18
     d34:	2e e4       	ldi	r18, 0x4E	; 78
     d36:	21 83       	std	Z+1, r18	; 0x01
     d38:	26 e4       	ldi	r18, 0x46	; 70
     d3a:	06 c0       	rjmp	.+12     	; 0xd48 <dtoa_prf+0x144>
     d3c:	29 e6       	ldi	r18, 0x69	; 105
     d3e:	f6 01       	movw	r30, r12
     d40:	20 83       	st	Z, r18
     d42:	2e e6       	ldi	r18, 0x6E	; 110
     d44:	21 83       	std	Z+1, r18	; 0x01
     d46:	26 e6       	ldi	r18, 0x66	; 102
     d48:	22 83       	std	Z+2, r18	; 0x02
     d4a:	fc 01       	movw	r30, r24
     d4c:	2b 2d       	mov	r18, r11
     d4e:	30 e2       	ldi	r19, 0x20	; 32
     d50:	22 23       	and	r18, r18
     d52:	19 f0       	breq	.+6      	; 0xd5a <dtoa_prf+0x156>
     d54:	31 93       	st	Z+, r19
     d56:	21 50       	subi	r18, 0x01	; 1
     d58:	fb cf       	rjmp	.-10     	; 0xd50 <dtoa_prf+0x14c>
     d5a:	fc 01       	movw	r30, r24
     d5c:	eb 0d       	add	r30, r11
     d5e:	f1 1d       	adc	r31, r1
     d60:	10 82       	st	Z, r1
     d62:	8e ef       	ldi	r24, 0xFE	; 254
     d64:	9f ef       	ldi	r25, 0xFF	; 255
     d66:	b7 c0       	rjmp	.+366    	; 0xed6 <dtoa_prf+0x2d2>
     d68:	b1 e0       	ldi	r27, 0x01	; 1
     d6a:	61 11       	cpse	r22, r1
     d6c:	01 c0       	rjmp	.+2      	; 0xd70 <dtoa_prf+0x16c>
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	4b 2f       	mov	r20, r27
     d72:	50 e0       	ldi	r21, 0x00	; 0
     d74:	18 16       	cp	r1, r24
     d76:	19 06       	cpc	r1, r25
     d78:	24 f4       	brge	.+8      	; 0xd82 <dtoa_prf+0x17e>
     d7a:	9c 01       	movw	r18, r24
     d7c:	2f 5f       	subi	r18, 0xFF	; 255
     d7e:	3f 4f       	sbci	r19, 0xFF	; 255
     d80:	02 c0       	rjmp	.+4      	; 0xd86 <dtoa_prf+0x182>
     d82:	21 e0       	ldi	r18, 0x01	; 1
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	24 0f       	add	r18, r20
     d88:	35 1f       	adc	r19, r21
     d8a:	11 23       	and	r17, r17
     d8c:	29 f0       	breq	.+10     	; 0xd98 <dtoa_prf+0x194>
     d8e:	41 2f       	mov	r20, r17
     d90:	50 e0       	ldi	r21, 0x00	; 0
     d92:	4f 5f       	subi	r20, 0xFF	; 255
     d94:	5f 4f       	sbci	r21, 0xFF	; 255
     d96:	02 c0       	rjmp	.+4      	; 0xd9c <dtoa_prf+0x198>
     d98:	40 e0       	ldi	r20, 0x00	; 0
     d9a:	50 e0       	ldi	r21, 0x00	; 0
     d9c:	42 0f       	add	r20, r18
     d9e:	53 1f       	adc	r21, r19
     da0:	2b 2d       	mov	r18, r11
     da2:	30 e0       	ldi	r19, 0x00	; 0
     da4:	42 17       	cp	r20, r18
     da6:	53 07       	cpc	r21, r19
     da8:	14 f4       	brge	.+4      	; 0xdae <dtoa_prf+0x1aa>
     daa:	b4 1a       	sub	r11, r20
     dac:	01 c0       	rjmp	.+2      	; 0xdb0 <dtoa_prf+0x1ac>
     dae:	b1 2c       	mov	r11, r1
     db0:	2e 2d       	mov	r18, r14
     db2:	28 71       	andi	r18, 0x18	; 24
     db4:	59 f4       	brne	.+22     	; 0xdcc <dtoa_prf+0x1c8>
     db6:	f6 01       	movw	r30, r12
     db8:	2b 2d       	mov	r18, r11
     dba:	30 e2       	ldi	r19, 0x20	; 32
     dbc:	22 23       	and	r18, r18
     dbe:	19 f0       	breq	.+6      	; 0xdc6 <dtoa_prf+0x1c2>
     dc0:	31 93       	st	Z+, r19
     dc2:	21 50       	subi	r18, 0x01	; 1
     dc4:	fb cf       	rjmp	.-10     	; 0xdbc <dtoa_prf+0x1b8>
     dc6:	cb 0c       	add	r12, r11
     dc8:	d1 1c       	adc	r13, r1
     dca:	b1 2c       	mov	r11, r1
     dcc:	bb 23       	and	r27, r27
     dce:	31 f0       	breq	.+12     	; 0xddc <dtoa_prf+0x1d8>
     dd0:	f6 01       	movw	r30, r12
     dd2:	60 83       	st	Z, r22
     dd4:	96 01       	movw	r18, r12
     dd6:	2f 5f       	subi	r18, 0xFF	; 255
     dd8:	3f 4f       	sbci	r19, 0xFF	; 255
     dda:	69 01       	movw	r12, r18
     ddc:	a1 11       	cpse	r26, r1
     dde:	0b c0       	rjmp	.+22     	; 0xdf6 <dtoa_prf+0x1f2>
     de0:	f6 01       	movw	r30, r12
     de2:	2b 2d       	mov	r18, r11
     de4:	30 e3       	ldi	r19, 0x30	; 48
     de6:	22 23       	and	r18, r18
     de8:	19 f0       	breq	.+6      	; 0xdf0 <dtoa_prf+0x1ec>
     dea:	31 93       	st	Z+, r19
     dec:	21 50       	subi	r18, 0x01	; 1
     dee:	fb cf       	rjmp	.-10     	; 0xde6 <dtoa_prf+0x1e2>
     df0:	cb 0c       	add	r12, r11
     df2:	d1 1c       	adc	r13, r1
     df4:	b1 2c       	mov	r11, r1
     df6:	f8 0e       	add	r15, r24
     df8:	0a 81       	ldd	r16, Y+2	; 0x02
     dfa:	37 2f       	mov	r19, r23
     dfc:	30 71       	andi	r19, 0x10	; 16
     dfe:	a3 2e       	mov	r10, r19
     e00:	74 ff       	sbrs	r23, 4
     e02:	03 c0       	rjmp	.+6      	; 0xe0a <dtoa_prf+0x206>
     e04:	01 33       	cpi	r16, 0x31	; 49
     e06:	09 f4       	brne	.+2      	; 0xe0a <dtoa_prf+0x206>
     e08:	fa 94       	dec	r15
     e0a:	1f 14       	cp	r1, r15
     e0c:	2c f4       	brge	.+10     	; 0xe18 <dtoa_prf+0x214>
     e0e:	2f 2d       	mov	r18, r15
     e10:	29 30       	cpi	r18, 0x09	; 9
     e12:	18 f0       	brcs	.+6      	; 0xe1a <dtoa_prf+0x216>
     e14:	28 e0       	ldi	r18, 0x08	; 8
     e16:	01 c0       	rjmp	.+2      	; 0xe1a <dtoa_prf+0x216>
     e18:	21 e0       	ldi	r18, 0x01	; 1
     e1a:	68 2f       	mov	r22, r24
     e1c:	39 2f       	mov	r19, r25
     e1e:	97 ff       	sbrs	r25, 7
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <dtoa_prf+0x222>
     e22:	60 e0       	ldi	r22, 0x00	; 0
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	46 2f       	mov	r20, r22
     e28:	53 2f       	mov	r21, r19
     e2a:	61 2c       	mov	r6, r1
     e2c:	71 2c       	mov	r7, r1
     e2e:	3e e2       	ldi	r19, 0x2E	; 46
     e30:	93 2e       	mov	r9, r19
     e32:	bc 01       	movw	r22, r24
     e34:	62 1b       	sub	r22, r18
     e36:	71 09       	sbc	r23, r1
     e38:	9b 01       	movw	r18, r22
     e3a:	dc 01       	movw	r26, r24
     e3c:	a4 1b       	sub	r26, r20
     e3e:	b5 0b       	sbc	r27, r21
     e40:	e1 e0       	ldi	r30, 0x01	; 1
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	ec 0f       	add	r30, r28
     e46:	fd 1f       	adc	r31, r29
     e48:	ae 0f       	add	r26, r30
     e4a:	bf 1f       	adc	r27, r31
     e4c:	e1 2e       	mov	r14, r17
     e4e:	f1 2c       	mov	r15, r1
     e50:	f1 94       	neg	r15
     e52:	e1 94       	neg	r14
     e54:	f1 08       	sbc	r15, r1
     e56:	4f 3f       	cpi	r20, 0xFF	; 255
     e58:	ff ef       	ldi	r31, 0xFF	; 255
     e5a:	5f 07       	cpc	r21, r31
     e5c:	31 f4       	brne	.+12     	; 0xe6a <dtoa_prf+0x266>
     e5e:	f6 01       	movw	r30, r12
     e60:	90 82       	st	Z, r9
     e62:	b6 01       	movw	r22, r12
     e64:	6f 5f       	subi	r22, 0xFF	; 255
     e66:	7f 4f       	sbci	r23, 0xFF	; 255
     e68:	6b 01       	movw	r12, r22
     e6a:	84 17       	cp	r24, r20
     e6c:	95 07       	cpc	r25, r21
     e6e:	4c f0       	brlt	.+18     	; 0xe82 <dtoa_prf+0x27e>
     e70:	24 17       	cp	r18, r20
     e72:	35 07       	cpc	r19, r21
     e74:	34 f4       	brge	.+12     	; 0xe82 <dtoa_prf+0x27e>
     e76:	bd 01       	movw	r22, r26
     e78:	66 0d       	add	r22, r6
     e7a:	77 1d       	adc	r23, r7
     e7c:	fb 01       	movw	r30, r22
     e7e:	11 81       	ldd	r17, Z+1	; 0x01
     e80:	01 c0       	rjmp	.+2      	; 0xe84 <dtoa_prf+0x280>
     e82:	10 e3       	ldi	r17, 0x30	; 48
     e84:	41 50       	subi	r20, 0x01	; 1
     e86:	51 09       	sbc	r21, r1
     e88:	ff ef       	ldi	r31, 0xFF	; 255
     e8a:	6f 1a       	sub	r6, r31
     e8c:	7f 0a       	sbc	r7, r31
     e8e:	b6 01       	movw	r22, r12
     e90:	6f 5f       	subi	r22, 0xFF	; 255
     e92:	7f 4f       	sbci	r23, 0xFF	; 255
     e94:	4e 15       	cp	r20, r14
     e96:	5f 05       	cpc	r21, r15
     e98:	24 f0       	brlt	.+8      	; 0xea2 <dtoa_prf+0x29e>
     e9a:	f6 01       	movw	r30, r12
     e9c:	10 83       	st	Z, r17
     e9e:	6b 01       	movw	r12, r22
     ea0:	da cf       	rjmp	.-76     	; 0xe56 <dtoa_prf+0x252>
     ea2:	48 17       	cp	r20, r24
     ea4:	59 07       	cpc	r21, r25
     ea6:	39 f4       	brne	.+14     	; 0xeb6 <dtoa_prf+0x2b2>
     ea8:	06 33       	cpi	r16, 0x36	; 54
     eaa:	20 f4       	brcc	.+8      	; 0xeb4 <dtoa_prf+0x2b0>
     eac:	05 33       	cpi	r16, 0x35	; 53
     eae:	19 f4       	brne	.+6      	; 0xeb6 <dtoa_prf+0x2b2>
     eb0:	a1 10       	cpse	r10, r1
     eb2:	01 c0       	rjmp	.+2      	; 0xeb6 <dtoa_prf+0x2b2>
     eb4:	11 e3       	ldi	r17, 0x31	; 49
     eb6:	f6 01       	movw	r30, r12
     eb8:	10 83       	st	Z, r17
     eba:	fb 01       	movw	r30, r22
     ebc:	8b 2d       	mov	r24, r11
     ebe:	90 e2       	ldi	r25, 0x20	; 32
     ec0:	88 23       	and	r24, r24
     ec2:	19 f0       	breq	.+6      	; 0xeca <dtoa_prf+0x2c6>
     ec4:	91 93       	st	Z+, r25
     ec6:	81 50       	subi	r24, 0x01	; 1
     ec8:	fb cf       	rjmp	.-10     	; 0xec0 <dtoa_prf+0x2bc>
     eca:	fb 01       	movw	r30, r22
     ecc:	eb 0d       	add	r30, r11
     ece:	f1 1d       	adc	r31, r1
     ed0:	10 82       	st	Z, r1
     ed2:	80 e0       	ldi	r24, 0x00	; 0
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	29 96       	adiw	r28, 0x09	; 9
     ed8:	0f b6       	in	r0, 0x3f	; 63
     eda:	f8 94       	cli
     edc:	de bf       	out	0x3e, r29	; 62
     ede:	0f be       	out	0x3f, r0	; 63
     ee0:	cd bf       	out	0x3d, r28	; 61
     ee2:	df 91       	pop	r29
     ee4:	cf 91       	pop	r28
     ee6:	1f 91       	pop	r17
     ee8:	0f 91       	pop	r16
     eea:	ff 90       	pop	r15
     eec:	ef 90       	pop	r14
     eee:	df 90       	pop	r13
     ef0:	cf 90       	pop	r12
     ef2:	bf 90       	pop	r11
     ef4:	af 90       	pop	r10
     ef6:	9f 90       	pop	r9
     ef8:	7f 90       	pop	r7
     efa:	6f 90       	pop	r6
     efc:	08 95       	ret

00000efe <__ftoa_engine>:
     efe:	28 30       	cpi	r18, 0x08	; 8
     f00:	08 f0       	brcs	.+2      	; 0xf04 <__ftoa_engine+0x6>
     f02:	27 e0       	ldi	r18, 0x07	; 7
     f04:	33 27       	eor	r19, r19
     f06:	da 01       	movw	r26, r20
     f08:	99 0f       	add	r25, r25
     f0a:	31 1d       	adc	r19, r1
     f0c:	87 fd       	sbrc	r24, 7
     f0e:	91 60       	ori	r25, 0x01	; 1
     f10:	00 96       	adiw	r24, 0x00	; 0
     f12:	61 05       	cpc	r22, r1
     f14:	71 05       	cpc	r23, r1
     f16:	39 f4       	brne	.+14     	; 0xf26 <__ftoa_engine+0x28>
     f18:	32 60       	ori	r19, 0x02	; 2
     f1a:	2e 5f       	subi	r18, 0xFE	; 254
     f1c:	3d 93       	st	X+, r19
     f1e:	30 e3       	ldi	r19, 0x30	; 48
     f20:	2a 95       	dec	r18
     f22:	e1 f7       	brne	.-8      	; 0xf1c <__ftoa_engine+0x1e>
     f24:	08 95       	ret
     f26:	9f 3f       	cpi	r25, 0xFF	; 255
     f28:	30 f0       	brcs	.+12     	; 0xf36 <__ftoa_engine+0x38>
     f2a:	80 38       	cpi	r24, 0x80	; 128
     f2c:	71 05       	cpc	r23, r1
     f2e:	61 05       	cpc	r22, r1
     f30:	09 f0       	breq	.+2      	; 0xf34 <__ftoa_engine+0x36>
     f32:	3c 5f       	subi	r19, 0xFC	; 252
     f34:	3c 5f       	subi	r19, 0xFC	; 252
     f36:	3d 93       	st	X+, r19
     f38:	91 30       	cpi	r25, 0x01	; 1
     f3a:	08 f0       	brcs	.+2      	; 0xf3e <__ftoa_engine+0x40>
     f3c:	80 68       	ori	r24, 0x80	; 128
     f3e:	91 1d       	adc	r25, r1
     f40:	df 93       	push	r29
     f42:	cf 93       	push	r28
     f44:	1f 93       	push	r17
     f46:	0f 93       	push	r16
     f48:	ff 92       	push	r15
     f4a:	ef 92       	push	r14
     f4c:	19 2f       	mov	r17, r25
     f4e:	98 7f       	andi	r25, 0xF8	; 248
     f50:	96 95       	lsr	r25
     f52:	e9 2f       	mov	r30, r25
     f54:	96 95       	lsr	r25
     f56:	96 95       	lsr	r25
     f58:	e9 0f       	add	r30, r25
     f5a:	ff 27       	eor	r31, r31
     f5c:	e2 5c       	subi	r30, 0xC2	; 194
     f5e:	fe 4f       	sbci	r31, 0xFE	; 254
     f60:	99 27       	eor	r25, r25
     f62:	33 27       	eor	r19, r19
     f64:	ee 24       	eor	r14, r14
     f66:	ff 24       	eor	r15, r15
     f68:	a7 01       	movw	r20, r14
     f6a:	e7 01       	movw	r28, r14
     f6c:	05 90       	lpm	r0, Z+
     f6e:	08 94       	sec
     f70:	07 94       	ror	r0
     f72:	28 f4       	brcc	.+10     	; 0xf7e <__ftoa_engine+0x80>
     f74:	36 0f       	add	r19, r22
     f76:	e7 1e       	adc	r14, r23
     f78:	f8 1e       	adc	r15, r24
     f7a:	49 1f       	adc	r20, r25
     f7c:	51 1d       	adc	r21, r1
     f7e:	66 0f       	add	r22, r22
     f80:	77 1f       	adc	r23, r23
     f82:	88 1f       	adc	r24, r24
     f84:	99 1f       	adc	r25, r25
     f86:	06 94       	lsr	r0
     f88:	a1 f7       	brne	.-24     	; 0xf72 <__ftoa_engine+0x74>
     f8a:	05 90       	lpm	r0, Z+
     f8c:	07 94       	ror	r0
     f8e:	28 f4       	brcc	.+10     	; 0xf9a <__ftoa_engine+0x9c>
     f90:	e7 0e       	add	r14, r23
     f92:	f8 1e       	adc	r15, r24
     f94:	49 1f       	adc	r20, r25
     f96:	56 1f       	adc	r21, r22
     f98:	c1 1d       	adc	r28, r1
     f9a:	77 0f       	add	r23, r23
     f9c:	88 1f       	adc	r24, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	66 1f       	adc	r22, r22
     fa2:	06 94       	lsr	r0
     fa4:	a1 f7       	brne	.-24     	; 0xf8e <__ftoa_engine+0x90>
     fa6:	05 90       	lpm	r0, Z+
     fa8:	07 94       	ror	r0
     faa:	28 f4       	brcc	.+10     	; 0xfb6 <__ftoa_engine+0xb8>
     fac:	f8 0e       	add	r15, r24
     fae:	49 1f       	adc	r20, r25
     fb0:	56 1f       	adc	r21, r22
     fb2:	c7 1f       	adc	r28, r23
     fb4:	d1 1d       	adc	r29, r1
     fb6:	88 0f       	add	r24, r24
     fb8:	99 1f       	adc	r25, r25
     fba:	66 1f       	adc	r22, r22
     fbc:	77 1f       	adc	r23, r23
     fbe:	06 94       	lsr	r0
     fc0:	a1 f7       	brne	.-24     	; 0xfaa <__ftoa_engine+0xac>
     fc2:	05 90       	lpm	r0, Z+
     fc4:	07 94       	ror	r0
     fc6:	20 f4       	brcc	.+8      	; 0xfd0 <__ftoa_engine+0xd2>
     fc8:	49 0f       	add	r20, r25
     fca:	56 1f       	adc	r21, r22
     fcc:	c7 1f       	adc	r28, r23
     fce:	d8 1f       	adc	r29, r24
     fd0:	99 0f       	add	r25, r25
     fd2:	66 1f       	adc	r22, r22
     fd4:	77 1f       	adc	r23, r23
     fd6:	88 1f       	adc	r24, r24
     fd8:	06 94       	lsr	r0
     fda:	a9 f7       	brne	.-22     	; 0xfc6 <__ftoa_engine+0xc8>
     fdc:	84 91       	lpm	r24, Z
     fde:	10 95       	com	r17
     fe0:	17 70       	andi	r17, 0x07	; 7
     fe2:	41 f0       	breq	.+16     	; 0xff4 <__ftoa_engine+0xf6>
     fe4:	d6 95       	lsr	r29
     fe6:	c7 95       	ror	r28
     fe8:	57 95       	ror	r21
     fea:	47 95       	ror	r20
     fec:	f7 94       	ror	r15
     fee:	e7 94       	ror	r14
     ff0:	1a 95       	dec	r17
     ff2:	c1 f7       	brne	.-16     	; 0xfe4 <__ftoa_engine+0xe6>
     ff4:	e4 ee       	ldi	r30, 0xE4	; 228
     ff6:	f0 e0       	ldi	r31, 0x00	; 0
     ff8:	68 94       	set
     ffa:	15 90       	lpm	r1, Z+
     ffc:	15 91       	lpm	r17, Z+
     ffe:	35 91       	lpm	r19, Z+
    1000:	65 91       	lpm	r22, Z+
    1002:	95 91       	lpm	r25, Z+
    1004:	05 90       	lpm	r0, Z+
    1006:	7f e2       	ldi	r23, 0x2F	; 47
    1008:	73 95       	inc	r23
    100a:	e1 18       	sub	r14, r1
    100c:	f1 0a       	sbc	r15, r17
    100e:	43 0b       	sbc	r20, r19
    1010:	56 0b       	sbc	r21, r22
    1012:	c9 0b       	sbc	r28, r25
    1014:	d0 09       	sbc	r29, r0
    1016:	c0 f7       	brcc	.-16     	; 0x1008 <__ftoa_engine+0x10a>
    1018:	e1 0c       	add	r14, r1
    101a:	f1 1e       	adc	r15, r17
    101c:	43 1f       	adc	r20, r19
    101e:	56 1f       	adc	r21, r22
    1020:	c9 1f       	adc	r28, r25
    1022:	d0 1d       	adc	r29, r0
    1024:	7e f4       	brtc	.+30     	; 0x1044 <__ftoa_engine+0x146>
    1026:	70 33       	cpi	r23, 0x30	; 48
    1028:	11 f4       	brne	.+4      	; 0x102e <__ftoa_engine+0x130>
    102a:	8a 95       	dec	r24
    102c:	e6 cf       	rjmp	.-52     	; 0xffa <__ftoa_engine+0xfc>
    102e:	e8 94       	clt
    1030:	01 50       	subi	r16, 0x01	; 1
    1032:	30 f0       	brcs	.+12     	; 0x1040 <__ftoa_engine+0x142>
    1034:	08 0f       	add	r16, r24
    1036:	0a f4       	brpl	.+2      	; 0x103a <__ftoa_engine+0x13c>
    1038:	00 27       	eor	r16, r16
    103a:	02 17       	cp	r16, r18
    103c:	08 f4       	brcc	.+2      	; 0x1040 <__ftoa_engine+0x142>
    103e:	20 2f       	mov	r18, r16
    1040:	23 95       	inc	r18
    1042:	02 2f       	mov	r16, r18
    1044:	7a 33       	cpi	r23, 0x3A	; 58
    1046:	28 f0       	brcs	.+10     	; 0x1052 <__ftoa_engine+0x154>
    1048:	79 e3       	ldi	r23, 0x39	; 57
    104a:	7d 93       	st	X+, r23
    104c:	2a 95       	dec	r18
    104e:	e9 f7       	brne	.-6      	; 0x104a <__ftoa_engine+0x14c>
    1050:	10 c0       	rjmp	.+32     	; 0x1072 <__ftoa_engine+0x174>
    1052:	7d 93       	st	X+, r23
    1054:	2a 95       	dec	r18
    1056:	89 f6       	brne	.-94     	; 0xffa <__ftoa_engine+0xfc>
    1058:	06 94       	lsr	r0
    105a:	97 95       	ror	r25
    105c:	67 95       	ror	r22
    105e:	37 95       	ror	r19
    1060:	17 95       	ror	r17
    1062:	17 94       	ror	r1
    1064:	e1 18       	sub	r14, r1
    1066:	f1 0a       	sbc	r15, r17
    1068:	43 0b       	sbc	r20, r19
    106a:	56 0b       	sbc	r21, r22
    106c:	c9 0b       	sbc	r28, r25
    106e:	d0 09       	sbc	r29, r0
    1070:	98 f0       	brcs	.+38     	; 0x1098 <__ftoa_engine+0x19a>
    1072:	23 95       	inc	r18
    1074:	7e 91       	ld	r23, -X
    1076:	73 95       	inc	r23
    1078:	7a 33       	cpi	r23, 0x3A	; 58
    107a:	08 f0       	brcs	.+2      	; 0x107e <__ftoa_engine+0x180>
    107c:	70 e3       	ldi	r23, 0x30	; 48
    107e:	7c 93       	st	X, r23
    1080:	20 13       	cpse	r18, r16
    1082:	b8 f7       	brcc	.-18     	; 0x1072 <__ftoa_engine+0x174>
    1084:	7e 91       	ld	r23, -X
    1086:	70 61       	ori	r23, 0x10	; 16
    1088:	7d 93       	st	X+, r23
    108a:	30 f0       	brcs	.+12     	; 0x1098 <__ftoa_engine+0x19a>
    108c:	83 95       	inc	r24
    108e:	71 e3       	ldi	r23, 0x31	; 49
    1090:	7d 93       	st	X+, r23
    1092:	70 e3       	ldi	r23, 0x30	; 48
    1094:	2a 95       	dec	r18
    1096:	e1 f7       	brne	.-8      	; 0x1090 <__ftoa_engine+0x192>
    1098:	11 24       	eor	r1, r1
    109a:	ef 90       	pop	r14
    109c:	ff 90       	pop	r15
    109e:	0f 91       	pop	r16
    10a0:	1f 91       	pop	r17
    10a2:	cf 91       	pop	r28
    10a4:	df 91       	pop	r29
    10a6:	99 27       	eor	r25, r25
    10a8:	87 fd       	sbrc	r24, 7
    10aa:	90 95       	com	r25
    10ac:	08 95       	ret

000010ae <_exit>:
    10ae:	f8 94       	cli

000010b0 <__stop_program>:
    10b0:	ff cf       	rjmp	.-2      	; 0x10b0 <__stop_program>
