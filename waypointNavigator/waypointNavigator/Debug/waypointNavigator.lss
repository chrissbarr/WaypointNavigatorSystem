
waypointNavigator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002ce  00800200  00002cde  00002d72  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002cde  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000188  008004ce  008004ce  00003040  2**0
                  ALLOC
  3 .stab         00000024  00000000  00000000  00003040  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000001e  00000000  00000000  00003064  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000005c  00000000  00000000  00003082  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000490  00000000  00000000  000030e0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000640f  00000000  00000000  00003570  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000018c4  00000000  00000000  0000997f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002be6  00000000  00000000  0000b243  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000f24  00000000  00000000  0000de2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001d44  00000000  00000000  0000ed50  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00003bc1  00000000  00000000  00010a94  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000003b8  00000000  00000000  00014655  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	33 c1       	rjmp	.+614    	; 0x268 <__ctors_end>
       2:	00 00       	nop
       4:	62 c1       	rjmp	.+708    	; 0x2ca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c1       	rjmp	.+704    	; 0x2ca <__bad_interrupt>
       a:	00 00       	nop
       c:	5e c1       	rjmp	.+700    	; 0x2ca <__bad_interrupt>
       e:	00 00       	nop
      10:	5c c1       	rjmp	.+696    	; 0x2ca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c1       	rjmp	.+692    	; 0x2ca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c1       	rjmp	.+688    	; 0x2ca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	56 c1       	rjmp	.+684    	; 0x2ca <__bad_interrupt>
      1e:	00 00       	nop
      20:	54 c1       	rjmp	.+680    	; 0x2ca <__bad_interrupt>
      22:	00 00       	nop
      24:	0c 94 56 08 	jmp	0x10ac	; 0x10ac <__vector_9>
      28:	50 c1       	rjmp	.+672    	; 0x2ca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c1       	rjmp	.+668    	; 0x2ca <__bad_interrupt>
      2e:	00 00       	nop
      30:	4c c1       	rjmp	.+664    	; 0x2ca <__bad_interrupt>
      32:	00 00       	nop
      34:	4a c1       	rjmp	.+660    	; 0x2ca <__bad_interrupt>
      36:	00 00       	nop
      38:	48 c1       	rjmp	.+656    	; 0x2ca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c1       	rjmp	.+652    	; 0x2ca <__bad_interrupt>
      3e:	00 00       	nop
      40:	44 c1       	rjmp	.+648    	; 0x2ca <__bad_interrupt>
      42:	00 00       	nop
      44:	42 c1       	rjmp	.+644    	; 0x2ca <__bad_interrupt>
      46:	00 00       	nop
      48:	40 c1       	rjmp	.+640    	; 0x2ca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3e c1       	rjmp	.+636    	; 0x2ca <__bad_interrupt>
      4e:	00 00       	nop
      50:	3c c1       	rjmp	.+632    	; 0x2ca <__bad_interrupt>
      52:	00 00       	nop
      54:	3a c1       	rjmp	.+628    	; 0x2ca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c1       	rjmp	.+624    	; 0x2ca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 39 09 	jmp	0x1272	; 0x1272 <__vector_23>
      60:	34 c1       	rjmp	.+616    	; 0x2ca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c1       	rjmp	.+612    	; 0x2ca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c1       	rjmp	.+608    	; 0x2ca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c1       	rjmp	.+604    	; 0x2ca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c1       	rjmp	.+600    	; 0x2ca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c1       	rjmp	.+596    	; 0x2ca <__bad_interrupt>
      76:	00 00       	nop
      78:	28 c1       	rjmp	.+592    	; 0x2ca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	26 c1       	rjmp	.+588    	; 0x2ca <__bad_interrupt>
      7e:	00 00       	nop
      80:	24 c1       	rjmp	.+584    	; 0x2ca <__bad_interrupt>
      82:	00 00       	nop
      84:	22 c1       	rjmp	.+580    	; 0x2ca <__bad_interrupt>
      86:	00 00       	nop
      88:	20 c1       	rjmp	.+576    	; 0x2ca <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1e c1       	rjmp	.+572    	; 0x2ca <__bad_interrupt>
      8e:	00 00       	nop
      90:	1c c1       	rjmp	.+568    	; 0x2ca <__bad_interrupt>
      92:	00 00       	nop
      94:	1a c1       	rjmp	.+564    	; 0x2ca <__bad_interrupt>
      96:	00 00       	nop
      98:	18 c1       	rjmp	.+560    	; 0x2ca <__bad_interrupt>
      9a:	00 00       	nop
      9c:	16 c1       	rjmp	.+556    	; 0x2ca <__bad_interrupt>
      9e:	00 00       	nop
      a0:	14 c1       	rjmp	.+552    	; 0x2ca <__bad_interrupt>
      a2:	00 00       	nop
      a4:	12 c1       	rjmp	.+548    	; 0x2ca <__bad_interrupt>
      a6:	00 00       	nop
      a8:	10 c1       	rjmp	.+544    	; 0x2ca <__bad_interrupt>
      aa:	00 00       	nop
      ac:	0e c1       	rjmp	.+540    	; 0x2ca <__bad_interrupt>
      ae:	00 00       	nop
      b0:	0c c1       	rjmp	.+536    	; 0x2ca <__bad_interrupt>
      b2:	00 00       	nop
      b4:	0a c1       	rjmp	.+532    	; 0x2ca <__bad_interrupt>
      b6:	00 00       	nop
      b8:	08 c1       	rjmp	.+528    	; 0x2ca <__bad_interrupt>
      ba:	00 00       	nop
      bc:	06 c1       	rjmp	.+524    	; 0x2ca <__bad_interrupt>
      be:	00 00       	nop
      c0:	04 c1       	rjmp	.+520    	; 0x2ca <__bad_interrupt>
      c2:	00 00       	nop
      c4:	02 c1       	rjmp	.+516    	; 0x2ca <__bad_interrupt>
      c6:	00 00       	nop
      c8:	00 c1       	rjmp	.+512    	; 0x2ca <__bad_interrupt>
      ca:	00 00       	nop
      cc:	fe c0       	rjmp	.+508    	; 0x2ca <__bad_interrupt>
      ce:	00 00       	nop
      d0:	fc c0       	rjmp	.+504    	; 0x2ca <__bad_interrupt>
      d2:	00 00       	nop
      d4:	fa c0       	rjmp	.+500    	; 0x2ca <__bad_interrupt>
      d6:	00 00       	nop
      d8:	f8 c0       	rjmp	.+496    	; 0x2ca <__bad_interrupt>
      da:	00 00       	nop
      dc:	f6 c0       	rjmp	.+492    	; 0x2ca <__bad_interrupt>
      de:	00 00       	nop
      e0:	f4 c0       	rjmp	.+488    	; 0x2ca <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 05       	cpc	r19, r15
     112:	a8 4c       	sbci	r26, 0xC8	; 200
     114:	cd b2       	in	r12, 0x1d	; 29
     116:	d4 4e       	sbci	r29, 0xE4	; 228
     118:	b9 38       	cpi	r27, 0x89	; 137
     11a:	36 a9       	ldd	r19, Z+54	; 0x36
     11c:	02 0c       	add	r0, r2
     11e:	50 b9       	out	0x00, r21	; 0
     120:	91 86       	std	Z+9, r9	; 0x09
     122:	88 08       	sbc	r8, r8
     124:	3c a6       	std	Y+44, r3	; 0x2c
     126:	aa aa       	std	Y+50, r10	; 0x32
     128:	2a be       	out	0x3a, r2	; 58
     12a:	00 00       	nop
     12c:	00 80       	ld	r0, Z
     12e:	3f 00       	.word	0x003f	; ????

00000130 <__trampolines_end>:
     130:	4e 41       	sbci	r20, 0x1E	; 30
     132:	4e 49       	sbci	r20, 0x9E	; 158

00000133 <pstr_inity>:
     133:	49 4e 49 54 59                                      INITY

00000138 <pstr_inf>:
     138:	49 4e 46                                            INF

0000013b <pwr_m10>:
     13b:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     14b:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000153 <pwr_p10>:
     153:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     163:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
     173:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     183:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     193:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     1a3:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     1b3:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     1c3:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     1d3:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     1e3:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     1f3:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     203:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     213:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     223:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     233:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     243:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     253:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     263:	3d 27 00                                            ='.

00000266 <__ctors_start>:
     266:	4c 08       	sbc	r4, r12

00000268 <__ctors_end>:
     268:	11 24       	eor	r1, r1
     26a:	1f be       	out	0x3f, r1	; 63
     26c:	cf ef       	ldi	r28, 0xFF	; 255
     26e:	d1 e2       	ldi	r29, 0x21	; 33
     270:	de bf       	out	0x3e, r29	; 62
     272:	cd bf       	out	0x3d, r28	; 61
     274:	00 e0       	ldi	r16, 0x00	; 0
     276:	0c bf       	out	0x3c, r16	; 60

00000278 <__do_copy_data>:
     278:	14 e0       	ldi	r17, 0x04	; 4
     27a:	a0 e0       	ldi	r26, 0x00	; 0
     27c:	b2 e0       	ldi	r27, 0x02	; 2
     27e:	ee ed       	ldi	r30, 0xDE	; 222
     280:	fc e2       	ldi	r31, 0x2C	; 44
     282:	00 e0       	ldi	r16, 0x00	; 0
     284:	0b bf       	out	0x3b, r16	; 59
     286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
     288:	07 90       	elpm	r0, Z+
     28a:	0d 92       	st	X+, r0
     28c:	ae 3c       	cpi	r26, 0xCE	; 206
     28e:	b1 07       	cpc	r27, r17
     290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
     292:	26 e0       	ldi	r18, 0x06	; 6
     294:	ae ec       	ldi	r26, 0xCE	; 206
     296:	b4 e0       	ldi	r27, 0x04	; 4
     298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
     29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
     29c:	a6 35       	cpi	r26, 0x56	; 86
     29e:	b2 07       	cpc	r27, r18
     2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>

000002a2 <__do_global_ctors>:
     2a2:	12 e0       	ldi	r17, 0x02	; 2
     2a4:	c8 e6       	ldi	r28, 0x68	; 104
     2a6:	d2 e0       	ldi	r29, 0x02	; 2
     2a8:	00 e0       	ldi	r16, 0x00	; 0
     2aa:	06 c0       	rjmp	.+12     	; 0x2b8 <__do_global_ctors+0x16>
     2ac:	22 97       	sbiw	r28, 0x02	; 2
     2ae:	01 09       	sbc	r16, r1
     2b0:	fe 01       	movw	r30, r28
     2b2:	0b bf       	out	0x3b, r16	; 59
     2b4:	0e 94 ec 11 	call	0x23d8	; 0x23d8 <__tablejump_elpm__>
     2b8:	c6 36       	cpi	r28, 0x66	; 102
     2ba:	d1 07       	cpc	r29, r17
     2bc:	80 e0       	ldi	r24, 0x00	; 0
     2be:	08 07       	cpc	r16, r24
     2c0:	a9 f7       	brne	.-22     	; 0x2ac <__do_global_ctors+0xa>
     2c2:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <main>
     2c6:	0c 94 6d 16 	jmp	0x2cda	; 0x2cda <_exit>

000002ca <__bad_interrupt>:
     2ca:	9a ce       	rjmp	.-716    	; 0x0 <__vectors>

000002cc <i2c_delay_T2>:
;*************************************************************************
	.stabs	"",100,0,0,i2c_delay_T2
	.stabs	"i2cmaster.S",100,0,0,i2c_delay_T2
	.func i2c_delay_T2	; delay 5.0 microsec with 4 Mhz crystal	
i2c_delay_T2:        ; 4 cycles
	rjmp 1f      ; 2   "
     2cc:	00 c0       	rjmp	.+0      	; 0x2ce <i2c_delay_T2+0x2>
1:	rjmp 2f      ; 2   "
     2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <i2c_delay_T2+0x4>
2:	rjmp 3f      ; 2   "
     2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <i2c_delay_T2+0x6>
3:	rjmp 4f      ; 2   "
     2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <i2c_delay_T2+0x8>
4:	rjmp 5f      ; 2   "
     2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <i2c_delay_T2+0xa>
5: 	rjmp 6f      ; 2   "
     2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <i2c_delay_T2+0xc>
6:	nop          ; 1   "
     2d8:	00 00       	nop
	ret          ; 3   "
     2da:	08 95       	ret

000002dc <i2c_init>:
; extern void i2c_init(void)
;*************************************************************************
	.global i2c_init
	.func i2c_init
i2c_init:
	cbi SDA_DDR,SDA		;release SDA
     2dc:	51 98       	cbi	0x0a, 1	; 10
	cbi SCL_DDR,SCL		;release SCL
     2de:	50 98       	cbi	0x0a, 0	; 10
	cbi SDA_OUT,SDA
     2e0:	59 98       	cbi	0x0b, 1	; 11
	cbi SCL_OUT,SCL
     2e2:	58 98       	cbi	0x0b, 0	; 11
	ret
     2e4:	08 95       	ret

000002e6 <i2c_start>:
;*************************************************************************

	.global i2c_start
	.func   i2c_start
i2c_start:
	sbi 	SDA_DDR,SDA	;force SDA low
     2e6:	51 9a       	sbi	0x0a, 1	; 10
	rcall 	i2c_delay_T2	;delay T/2
     2e8:	f1 df       	rcall	.-30     	; 0x2cc <i2c_delay_T2>
	
	rcall 	i2c_write	;write address
     2ea:	1d c0       	rjmp	.+58     	; 0x326 <i2c_write>
	ret
     2ec:	08 95       	ret

000002ee <i2c_rep_start>:
;*************************************************************************

	.global i2c_rep_start
	.func	i2c_rep_start
i2c_rep_start:
	sbi	SCL_DDR,SCL	;force SCL low
     2ee:	50 9a       	sbi	0x0a, 0	; 10
	rcall 	i2c_delay_T2	;delay  T/2
     2f0:	ed df       	rcall	.-38     	; 0x2cc <i2c_delay_T2>
	cbi	SDA_DDR,SDA	;release SDA
     2f2:	51 98       	cbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     2f4:	eb df       	rcall	.-42     	; 0x2cc <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     2f6:	50 98       	cbi	0x0a, 0	; 10
	rcall 	i2c_delay_T2	;delay  T/2
     2f8:	e9 df       	rcall	.-46     	; 0x2cc <i2c_delay_T2>
	sbi 	SDA_DDR,SDA	;force SDA low
     2fa:	51 9a       	sbi	0x0a, 1	; 10
	rcall 	i2c_delay_T2	;delay	T/2
     2fc:	e7 df       	rcall	.-50     	; 0x2cc <i2c_delay_T2>
	
	rcall	i2c_write	;write address
     2fe:	13 c0       	rjmp	.+38     	; 0x326 <i2c_write>
	ret
     300:	08 95       	ret

00000302 <i2c_start_wait>:
;*************************************************************************

	.global i2c_start_wait
	.func   i2c_start_wait
i2c_start_wait:
	mov	__tmp_reg__,r24
     302:	08 2e       	mov	r0, r24

00000304 <i2c_start_wait1>:
i2c_start_wait1:
	sbi 	SDA_DDR,SDA	;force SDA low
     304:	51 9a       	sbi	0x0a, 1	; 10
	rcall 	i2c_delay_T2	;delay T/2
     306:	e2 df       	rcall	.-60     	; 0x2cc <i2c_delay_T2>
	mov	r24,__tmp_reg__
     308:	80 2d       	mov	r24, r0
	rcall 	i2c_write	;write address
     30a:	0d d0       	rcall	.+26     	; 0x326 <i2c_write>
	tst	r24		;if device not busy -> done
     30c:	88 23       	and	r24, r24
	breq	i2c_start_wait_done
     30e:	11 f0       	breq	.+4      	; 0x314 <i2c_start_wait_done>
	rcall	i2c_stop	;terminate write operation
     310:	02 d0       	rcall	.+4      	; 0x316 <i2c_stop>
	rjmp	i2c_start_wait1	;device busy, poll ack again
     312:	f8 cf       	rjmp	.-16     	; 0x304 <i2c_start_wait1>

00000314 <i2c_start_wait_done>:
i2c_start_wait_done:
	ret
     314:	08 95       	ret

00000316 <i2c_stop>:
;*************************************************************************

	.global	i2c_stop
	.func	i2c_stop
i2c_stop:
	sbi	SCL_DDR,SCL	;force SCL low
     316:	50 9a       	sbi	0x0a, 0	; 10
	sbi	SDA_DDR,SDA	;force SDA low
     318:	51 9a       	sbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     31a:	d8 df       	rcall	.-80     	; 0x2cc <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     31c:	50 98       	cbi	0x0a, 0	; 10
	rcall	i2c_delay_T2	;delay T/2
     31e:	d6 df       	rcall	.-84     	; 0x2cc <i2c_delay_T2>
	cbi	SDA_DDR,SDA	;release SDA
     320:	51 98       	cbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     322:	d4 cf       	rjmp	.-88     	; 0x2cc <i2c_delay_T2>
	ret
     324:	08 95       	ret

00000326 <i2c_write>:
;	data = r24,  return = r25(=0):r24
;*************************************************************************
	.global i2c_write
	.func	i2c_write
i2c_write:
	sec			;set carry flag
     326:	08 94       	sec
	rol 	r24		;shift in carry and out bit one
     328:	88 1f       	adc	r24, r24
	rjmp	i2c_write_first
     32a:	01 c0       	rjmp	.+2      	; 0x32e <i2c_write_first>

0000032c <i2c_write_bit>:
i2c_write_bit:
	lsl	r24		;if transmit register empty
     32c:	88 0f       	add	r24, r24

0000032e <i2c_write_first>:
i2c_write_first:
	breq	i2c_get_ack
     32e:	59 f0       	breq	.+22     	; 0x346 <i2c_get_ack>
	sbi	SCL_DDR,SCL	;force SCL low
     330:	50 9a       	sbi	0x0a, 0	; 10
	brcc	i2c_write_low
     332:	18 f4       	brcc	.+6      	; 0x33a <i2c_write_low>
	nop
     334:	00 00       	nop
	cbi	SDA_DDR,SDA	;release SDA
     336:	51 98       	cbi	0x0a, 1	; 10
	rjmp	i2c_write_high
     338:	02 c0       	rjmp	.+4      	; 0x33e <i2c_write_high>

0000033a <i2c_write_low>:
i2c_write_low:
	sbi	SDA_DDR,SDA	;force SDA low
     33a:	51 9a       	sbi	0x0a, 1	; 10
	rjmp	i2c_write_high
     33c:	00 c0       	rjmp	.+0      	; 0x33e <i2c_write_high>

0000033e <i2c_write_high>:
i2c_write_high:
	rcall 	i2c_delay_T2	;delay T/2
     33e:	c6 df       	rcall	.-116    	; 0x2cc <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     340:	50 98       	cbi	0x0a, 0	; 10
	rcall	i2c_delay_T2	;delay T/2
     342:	c4 df       	rcall	.-120    	; 0x2cc <i2c_delay_T2>
	rjmp	i2c_write_bit
     344:	f3 cf       	rjmp	.-26     	; 0x32c <i2c_write_bit>

00000346 <i2c_get_ack>:
	
i2c_get_ack:
	sbi	SCL_DDR,SCL	;force SCL low
     346:	50 9a       	sbi	0x0a, 0	; 10
	cbi	SDA_DDR,SDA	;release SDA
     348:	51 98       	cbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     34a:	c0 df       	rcall	.-128    	; 0x2cc <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     34c:	50 98       	cbi	0x0a, 0	; 10

0000034e <i2c_ack_wait>:
i2c_ack_wait:
	sbis	SCL_IN,SCL	;wait SCL high (in case wait states are inserted)
     34e:	48 9b       	sbis	0x09, 0	; 9
	rjmp	i2c_ack_wait
     350:	fe cf       	rjmp	.-4      	; 0x34e <i2c_ack_wait>
	
	clr	r24		;return 0
     352:	88 27       	eor	r24, r24
	sbic	SDA_IN,SDA	;if SDA high -> return 1
     354:	49 99       	sbic	0x09, 1	; 9
	ldi	r24,1
     356:	81 e0       	ldi	r24, 0x01	; 1
	rcall	i2c_delay_T2	;delay T/2
     358:	b9 df       	rcall	.-142    	; 0x2cc <i2c_delay_T2>
	clr	r25
     35a:	99 27       	eor	r25, r25
	ret
     35c:	08 95       	ret

0000035e <i2c_readNak>:
	.global i2c_readAck
	.global i2c_readNak
	.global i2c_read		
	.func	i2c_read
i2c_readNak:
	clr	r24
     35e:	88 27       	eor	r24, r24
	rjmp	i2c_read
     360:	01 c0       	rjmp	.+2      	; 0x364 <i2c_read>

00000362 <i2c_readAck>:
i2c_readAck:
	ldi	r24,0x01
     362:	81 e0       	ldi	r24, 0x01	; 1

00000364 <i2c_read>:
i2c_read:
	ldi	r23,0x01	;data = 0x01
     364:	71 e0       	ldi	r23, 0x01	; 1

00000366 <i2c_read_bit>:
i2c_read_bit:
	sbi	SCL_DDR,SCL	;force SCL low
     366:	50 9a       	sbi	0x0a, 0	; 10
	cbi	SDA_DDR,SDA	;release SDA (from previous ACK)
     368:	51 98       	cbi	0x0a, 1	; 10
	rcall	i2c_delay_T2	;delay T/2
     36a:	b0 df       	rcall	.-160    	; 0x2cc <i2c_delay_T2>
	
	cbi	SCL_DDR,SCL	;release SCL
     36c:	50 98       	cbi	0x0a, 0	; 10
	rcall	i2c_delay_T2	;delay T/2
     36e:	ae df       	rcall	.-164    	; 0x2cc <i2c_delay_T2>

00000370 <i2c_read_stretch>:
	
i2c_read_stretch:
    sbis SCL_IN, SCL        ;loop until SCL is high (allow slave to stretch SCL)
     370:	48 9b       	sbis	0x09, 0	; 9
    rjmp	i2c_read_stretch
     372:	fe cf       	rjmp	.-4      	; 0x370 <i2c_read_stretch>
    	
	clc			;clear carry flag
     374:	88 94       	clc
	sbic	SDA_IN,SDA	;if SDA is high
     376:	49 99       	sbic	0x09, 1	; 9
	sec			;  set carry flag
     378:	08 94       	sec
	
	rol	r23		;store bit
     37a:	77 1f       	adc	r23, r23
	brcc	i2c_read_bit	;while receive register not full
     37c:	a0 f7       	brcc	.-24     	; 0x366 <i2c_read_bit>

0000037e <i2c_put_ack>:
	
i2c_put_ack:
	sbi	SCL_DDR,SCL	;force SCL low	
     37e:	50 9a       	sbi	0x0a, 0	; 10
	cpi	r24,1
     380:	81 30       	cpi	r24, 0x01	; 1
	breq	i2c_put_ack_low	;if (ack=0)
     382:	11 f0       	breq	.+4      	; 0x388 <i2c_put_ack_low>
	cbi	SDA_DDR,SDA	;      release SDA
     384:	51 98       	cbi	0x0a, 1	; 10
	rjmp	i2c_put_ack_high
     386:	01 c0       	rjmp	.+2      	; 0x38a <i2c_put_ack_high>

00000388 <i2c_put_ack_low>:
i2c_put_ack_low:                ;else
	sbi	SDA_DDR,SDA	;      force SDA low
     388:	51 9a       	sbi	0x0a, 1	; 10

0000038a <i2c_put_ack_high>:
i2c_put_ack_high:
	rcall	i2c_delay_T2	;delay T/2
     38a:	a0 df       	rcall	.-192    	; 0x2cc <i2c_delay_T2>
	cbi	SCL_DDR,SCL	;release SCL
     38c:	50 98       	cbi	0x0a, 0	; 10

0000038e <i2c_put_ack_wait>:
i2c_put_ack_wait:
	sbis	SCL_IN,SCL	;wait SCL high
     38e:	48 9b       	sbis	0x09, 0	; 9
	rjmp	i2c_put_ack_wait
     390:	fe cf       	rjmp	.-4      	; 0x38e <i2c_put_ack_wait>
	rcall	i2c_delay_T2	;delay T/2
     392:	9c df       	rcall	.-200    	; 0x2cc <i2c_delay_T2>
	mov	r24,r23
     394:	87 2f       	mov	r24, r23
	clr	r25
     396:	99 27       	eor	r25, r25
	ret
     398:	08 95       	ret

0000039a <_Z16enableEventFlagsv>:

//Enables the pressure and temp measurement event flags so that we can
//test against them. This is recommended in datasheet during setup.
void enableEventFlags()
{
	i2c_start_wait(MPL3115a2+I2C_WRITE);
     39a:	80 ec       	ldi	r24, 0xC0	; 192
     39c:	b2 df       	rcall	.-156    	; 0x302 <i2c_start_wait>
	i2c_write(PT_DATA_CFG);
     39e:	83 e1       	ldi	r24, 0x13	; 19
     3a0:	c2 df       	rcall	.-124    	; 0x326 <i2c_write>
	i2c_write(0x07);
     3a2:	87 e0       	ldi	r24, 0x07	; 7
     3a4:	c0 cf       	rjmp	.-128    	; 0x326 <i2c_write>
     3a6:	08 95       	ret

000003a8 <_Z8IIC_Readh>:
}

byte IIC_Read(byte regAddr)
{
     3a8:	cf 93       	push	r28
     3aa:	c8 2f       	mov	r28, r24
	// This function reads one byte over IIC
	
	i2c_rep_start(MPL3115a2+I2C_WRITE);
     3ac:	80 ec       	ldi	r24, 0xC0	; 192
     3ae:	9f df       	rcall	.-194    	; 0x2ee <i2c_rep_start>
	i2c_write(regAddr);
     3b0:	8c 2f       	mov	r24, r28
     3b2:	b9 df       	rcall	.-142    	; 0x326 <i2c_write>
	
	i2c_rep_start(MPL3115a2+I2C_READ);
     3b4:	81 ec       	ldi	r24, 0xC1	; 193
     3b6:	9b df       	rcall	.-202    	; 0x2ee <i2c_rep_start>
	return i2c_readNak();
     3b8:	d2 df       	rcall	.-92     	; 0x35e <i2c_readNak>
}
     3ba:	cf 91       	pop	r28
     3bc:	08 95       	ret

000003be <_Z9IIC_Writehh>:

void IIC_Write(byte regAddr, byte value)
{
     3be:	cf 93       	push	r28
     3c0:	df 93       	push	r29
     3c2:	d8 2f       	mov	r29, r24
     3c4:	c6 2f       	mov	r28, r22
	i2c_start_wait(MPL3115a2+I2C_WRITE);
     3c6:	80 ec       	ldi	r24, 0xC0	; 192
     3c8:	9c df       	rcall	.-200    	; 0x302 <i2c_start_wait>
	i2c_write(regAddr);
     3ca:	8d 2f       	mov	r24, r29
     3cc:	ac df       	rcall	.-168    	; 0x326 <i2c_write>
	i2c_write(value);
     3ce:	8c 2f       	mov	r24, r28
     3d0:	aa df       	rcall	.-172    	; 0x326 <i2c_write>
	i2c_stop();
     3d2:	a1 df       	rcall	.-190    	; 0x316 <i2c_stop>
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	08 95       	ret

000003da <_Z24altimeter_toggle_oneShotv>:
}

void altimeter_toggle_oneShot(void) 
{ 
	//read CTRL_REG1
	uint8_t tempSetting = IIC_Read(CTRL_REG1);
     3da:	86 e2       	ldi	r24, 0x26	; 38
     3dc:	e5 df       	rcall	.-54     	; 0x3a8 <_Z8IIC_Readh>
	
	//Clear OST bit
	tempSetting &= ~(1<<1);
     3de:	68 2f       	mov	r22, r24
     3e0:	6d 7f       	andi	r22, 0xFD	; 253
	IIC_Write(CTRL_REG1,tempSetting);
     3e2:	86 e2       	ldi	r24, 0x26	; 38
     3e4:	ec df       	rcall	.-40     	; 0x3be <_Z9IIC_Writehh>
	
	//read CTRL_REG1
	tempSetting = IIC_Read(CTRL_REG1);
     3e6:	86 e2       	ldi	r24, 0x26	; 38
     3e8:	df df       	rcall	.-66     	; 0x3a8 <_Z8IIC_Readh>
	
	//set OST bit
	tempSetting |= (1<<1);
     3ea:	68 2f       	mov	r22, r24
     3ec:	62 60       	ori	r22, 0x02	; 2
	IIC_Write(CTRL_REG1,tempSetting); 
     3ee:	86 e2       	ldi	r24, 0x26	; 38
     3f0:	e6 cf       	rjmp	.-52     	; 0x3be <_Z9IIC_Writehh>
     3f2:	08 95       	ret

000003f4 <_Z20altimeter_get_metresv>:
	
	return start_height;
}

float altimeter_get_metres(void)
{
     3f4:	cf 92       	push	r12
     3f6:	df 92       	push	r13
     3f8:	ef 92       	push	r14
     3fa:	ff 92       	push	r15
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
	float altitude = -999;
			
	//if(working)
	//{
		altimeter_toggle_oneShot();
     400:	ec df       	rcall	.-40     	; 0x3da <_Z24altimeter_toggle_oneShotv>
		
		int counter = 0;
		
		while((IIC_Read(STATUS) & (1<<1)) == 0)
     402:	ca e5       	ldi	r28, 0x5A	; 90
     404:	d2 e0       	ldi	r29, 0x02	; 2
     406:	0a c0       	rjmp	.+20     	; 0x41c <_Z20altimeter_get_metresv+0x28>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     408:	8f e9       	ldi	r24, 0x9F	; 159
     40a:	9f e0       	ldi	r25, 0x0F	; 15
     40c:	01 97       	sbiw	r24, 0x01	; 1
     40e:	f1 f7       	brne	.-4      	; 0x40c <_Z20altimeter_get_metresv+0x18>
     410:	00 c0       	rjmp	.+0      	; 0x412 <_Z20altimeter_get_metresv+0x1e>
     412:	00 00       	nop
     414:	21 97       	sbiw	r28, 0x01	; 1
		{
			_delay_ms(1);
			if(counter++>600) return (-999);
     416:	20 97       	sbiw	r28, 0x00	; 0
     418:	09 f4       	brne	.+2      	; 0x41c <_Z20altimeter_get_metresv+0x28>
     41a:	49 c0       	rjmp	.+146    	; 0x4ae <_Z20altimeter_get_metresv+0xba>
	//{
		altimeter_toggle_oneShot();
		
		int counter = 0;
		
		while((IIC_Read(STATUS) & (1<<1)) == 0)
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	c4 df       	rcall	.-120    	; 0x3a8 <_Z8IIC_Readh>
     420:	81 ff       	sbrs	r24, 1
     422:	f2 cf       	rjmp	.-28     	; 0x408 <_Z20altimeter_get_metresv+0x14>
		}
		
		//if(counter >= 600) return (-999);
		//_delay_ms(100);
		
		i2c_start_wait(MPL3115a2+I2C_WRITE);
     424:	80 ec       	ldi	r24, 0xC0	; 192
     426:	6d df       	rcall	.-294    	; 0x302 <i2c_start_wait>
		i2c_write(OUT_P_MSB);
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	7d df       	rcall	.-262    	; 0x326 <i2c_write>
		i2c_rep_start(MPL3115a2+I2C_READ);
     42c:	81 ec       	ldi	r24, 0xC1	; 193
     42e:	5f df       	rcall	.-322    	; 0x2ee <i2c_rep_start>
		
		int8_t msbA,csbA,lsbA = 0x00;
		
		msbA = i2c_readAck();
     430:	98 df       	rcall	.-208    	; 0x362 <i2c_readAck>
     432:	f8 2e       	mov	r15, r24
		csbA = i2c_readAck();
     434:	96 df       	rcall	.-212    	; 0x362 <i2c_readAck>
     436:	d8 2f       	mov	r29, r24
		lsbA = i2c_readNak();
     438:	92 df       	rcall	.-220    	; 0x35e <i2c_readNak>
     43a:	c8 2f       	mov	r28, r24
		i2c_stop();
     43c:	6c df       	rcall	.-296    	; 0x316 <i2c_stop>
		
		altimeter_toggle_oneShot();
     43e:	cd df       	rcall	.-102    	; 0x3da <_Z24altimeter_toggle_oneShotv>
		
		float tempcsb = (lsbA>>4)/16.0;
		
		altitude = (float)( (msbA << 8) | csbA) + tempcsb;
     440:	4f 2d       	mov	r20, r15
     442:	55 27       	eor	r21, r21
     444:	47 fd       	sbrc	r20, 7
     446:	50 95       	com	r21
     448:	74 2f       	mov	r23, r20
     44a:	66 27       	eor	r22, r22
     44c:	2d 2f       	mov	r18, r29
     44e:	33 27       	eor	r19, r19
     450:	27 fd       	sbrc	r18, 7
     452:	30 95       	com	r19
     454:	62 2b       	or	r22, r18
     456:	73 2b       	or	r23, r19
     458:	88 27       	eor	r24, r24
     45a:	77 fd       	sbrc	r23, 7
     45c:	80 95       	com	r24
     45e:	98 2f       	mov	r25, r24
     460:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__floatsisf>
     464:	6b 01       	movw	r12, r22
     466:	7c 01       	movw	r14, r24
		lsbA = i2c_readNak();
		i2c_stop();
		
		altimeter_toggle_oneShot();
		
		float tempcsb = (lsbA>>4)/16.0;
     468:	6c 2f       	mov	r22, r28
     46a:	77 27       	eor	r23, r23
     46c:	67 fd       	sbrc	r22, 7
     46e:	70 95       	com	r23
     470:	75 95       	asr	r23
     472:	67 95       	ror	r22
     474:	75 95       	asr	r23
     476:	67 95       	ror	r22
     478:	75 95       	asr	r23
     47a:	67 95       	ror	r22
     47c:	75 95       	asr	r23
     47e:	67 95       	ror	r22
     480:	88 27       	eor	r24, r24
     482:	77 fd       	sbrc	r23, 7
     484:	80 95       	com	r24
     486:	98 2f       	mov	r25, r24
     488:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__floatsisf>
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	40 e8       	ldi	r20, 0x80	; 128
     492:	5d e3       	ldi	r21, 0x3D	; 61
     494:	0e 94 04 11 	call	0x2208	; 0x2208 <__mulsf3>
     498:	9b 01       	movw	r18, r22
     49a:	ac 01       	movw	r20, r24
		
		altitude = (float)( (msbA << 8) | csbA) + tempcsb;
     49c:	c7 01       	movw	r24, r14
     49e:	b6 01       	movw	r22, r12
     4a0:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__addsf3>
	//}
	
	return altitude;
     4a4:	56 2f       	mov	r21, r22
     4a6:	47 2f       	mov	r20, r23
     4a8:	38 2f       	mov	r19, r24
     4aa:	29 2f       	mov	r18, r25
     4ac:	04 c0       	rjmp	.+8      	; 0x4b6 <_Z20altimeter_get_metresv+0xc2>
		int counter = 0;
		
		while((IIC_Read(STATUS) & (1<<1)) == 0)
		{
			_delay_ms(1);
			if(counter++>600) return (-999);
     4ae:	50 e0       	ldi	r21, 0x00	; 0
     4b0:	40 ec       	ldi	r20, 0xC0	; 192
     4b2:	39 e7       	ldi	r19, 0x79	; 121
     4b4:	24 ec       	ldi	r18, 0xC4	; 196
		
		altitude = (float)( (msbA << 8) | csbA) + tempcsb;
	//}
	
	return altitude;
}
     4b6:	65 2f       	mov	r22, r21
     4b8:	74 2f       	mov	r23, r20
     4ba:	83 2f       	mov	r24, r19
     4bc:	92 2f       	mov	r25, r18
     4be:	df 91       	pop	r29
     4c0:	cf 91       	pop	r28
     4c2:	ff 90       	pop	r15
     4c4:	ef 90       	pop	r14
     4c6:	df 90       	pop	r13
     4c8:	cf 90       	pop	r12
     4ca:	08 95       	ret

000004cc <_Z22altimeter_start_heightv>:
	working = success;
	return success;	
}

float altimeter_start_height()
{
     4cc:	4f 92       	push	r4
     4ce:	5f 92       	push	r5
     4d0:	6f 92       	push	r6
     4d2:	7f 92       	push	r7
     4d4:	8f 92       	push	r8
     4d6:	9f 92       	push	r9
     4d8:	af 92       	push	r10
     4da:	bf 92       	push	r11
     4dc:	cf 92       	push	r12
     4de:	df 92       	push	r13
     4e0:	ef 92       	push	r14
     4e2:	ff 92       	push	r15
	float start_height = 0;
	float start_height_samples = 0;
	
	debug_println("Determining Altimeter Start height, sampling for 2s...");
     4e4:	80 e1       	ldi	r24, 0x10	; 16
     4e6:	92 e0       	ldi	r25, 0x02	; 2
     4e8:	68 d2       	rcall	.+1232   	; 0x9ba <_Z13debug_printlnPKc>
}

float altimeter_start_height()
{
	float start_height = 0;
	float start_height_samples = 0;
     4ea:	41 2c       	mov	r4, r1
     4ec:	51 2c       	mov	r5, r1
     4ee:	32 01       	movw	r6, r4
	return success;	
}

float altimeter_start_height()
{
	float start_height = 0;
     4f0:	53 01       	movw	r10, r6
     4f2:	42 01       	movw	r8, r4
	float start_height_samples = 0;
	
	debug_println("Determining Altimeter Start height, sampling for 2s...");
	//sample the current height for 1 second
	while(millis()<2000)
     4f4:	1d c0       	rjmp	.+58     	; 0x530 <_Z22altimeter_start_heightv+0x64>
	{
		float temp_height = altimeter_get_metres();
     4f6:	7e df       	rcall	.-260    	; 0x3f4 <_Z20altimeter_get_metresv>
     4f8:	6b 01       	movw	r12, r22
     4fa:	7c 01       	movw	r14, r24
		
		//make sure recorded value isn't in error
		if(temp_height!=-999)
     4fc:	20 e0       	ldi	r18, 0x00	; 0
     4fe:	30 ec       	ldi	r19, 0xC0	; 192
     500:	49 e7       	ldi	r20, 0x79	; 121
     502:	54 ec       	ldi	r21, 0xC4	; 196
     504:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__cmpsf2>
     508:	88 23       	and	r24, r24
     50a:	91 f0       	breq	.+36     	; 0x530 <_Z22altimeter_start_heightv+0x64>
		{
			start_height += temp_height;
     50c:	a7 01       	movw	r20, r14
     50e:	96 01       	movw	r18, r12
     510:	c5 01       	movw	r24, r10
     512:	b4 01       	movw	r22, r8
     514:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__addsf3>
     518:	4b 01       	movw	r8, r22
     51a:	5c 01       	movw	r10, r24
			start_height_samples += 1;
     51c:	20 e0       	ldi	r18, 0x00	; 0
     51e:	30 e0       	ldi	r19, 0x00	; 0
     520:	40 e8       	ldi	r20, 0x80	; 128
     522:	5f e3       	ldi	r21, 0x3F	; 63
     524:	c3 01       	movw	r24, r6
     526:	b2 01       	movw	r22, r4
     528:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__addsf3>
     52c:	2b 01       	movw	r4, r22
     52e:	3c 01       	movw	r6, r24
	float start_height = 0;
	float start_height_samples = 0;
	
	debug_println("Determining Altimeter Start height, sampling for 2s...");
	//sample the current height for 1 second
	while(millis()<2000)
     530:	ea d6       	rcall	.+3540   	; 0x1306 <_Z6millisv>
     532:	60 3d       	cpi	r22, 0xD0	; 208
     534:	77 40       	sbci	r23, 0x07	; 7
     536:	81 05       	cpc	r24, r1
     538:	91 05       	cpc	r25, r1
     53a:	ec f2       	brlt	.-70     	; 0x4f6 <_Z22altimeter_start_heightv+0x2a>
		}
		
	}
	
	//average the height
	start_height = start_height / start_height_samples;
     53c:	a3 01       	movw	r20, r6
     53e:	92 01       	movw	r18, r4
     540:	c5 01       	movw	r24, r10
     542:	b4 01       	movw	r22, r8
     544:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <__divsf3>
     548:	6b 01       	movw	r12, r22
     54a:	7c 01       	movw	r14, r24
	debug_print("Starting height initialised to: ");
     54c:	87 e4       	ldi	r24, 0x47	; 71
     54e:	92 e0       	ldi	r25, 0x02	; 2
     550:	2f d2       	rcall	.+1118   	; 0x9b0 <_Z11debug_printPKc>
	debug_printf(start_height);
     552:	c7 01       	movw	r24, r14
     554:	b6 01       	movw	r22, r12
     556:	57 d2       	rcall	.+1198   	; 0xa06 <_Z12debug_printff>
	debug_println(" m");
     558:	88 e6       	ldi	r24, 0x68	; 104
     55a:	92 e0       	ldi	r25, 0x02	; 2
     55c:	2e d2       	rcall	.+1116   	; 0x9ba <_Z13debug_printlnPKc>
	
	return start_height;
}
     55e:	c7 01       	movw	r24, r14
     560:	b6 01       	movw	r22, r12
     562:	ff 90       	pop	r15
     564:	ef 90       	pop	r14
     566:	df 90       	pop	r13
     568:	cf 90       	pop	r12
     56a:	bf 90       	pop	r11
     56c:	af 90       	pop	r10
     56e:	9f 90       	pop	r9
     570:	8f 90       	pop	r8
     572:	7f 90       	pop	r7
     574:	6f 90       	pop	r6
     576:	5f 90       	pop	r5
     578:	4f 90       	pop	r4
     57a:	08 95       	ret

0000057c <_Z16setModeAltimeterv>:
}

void setModeAltimeter()
{
	//read CTRL_REG1
	uint8_t tempSetting = IIC_Read(CTRL_REG1);
     57c:	86 e2       	ldi	r24, 0x26	; 38
     57e:	14 df       	rcall	.-472    	; 0x3a8 <_Z8IIC_Readh>
	
	tempSetting |= (1<<7);	//set ALT bit
     580:	68 2f       	mov	r22, r24
     582:	60 68       	ori	r22, 0x80	; 128
	
	IIC_Write(CTRL_REG1,tempSetting);
     584:	86 e2       	ldi	r24, 0x26	; 38
     586:	1b cf       	rjmp	.-458    	; 0x3be <_Z9IIC_Writehh>
     588:	08 95       	ret

0000058a <_Z17setOversampleRateh>:
}

void setOversampleRate(uint8_t sampleRate)
{
     58a:	cf 93       	push	r28
     58c:	c8 2f       	mov	r28, r24
     58e:	88 30       	cpi	r24, 0x08	; 8
     590:	08 f0       	brcs	.+2      	; 0x594 <_Z17setOversampleRateh+0xa>
     592:	c7 e0       	ldi	r28, 0x07	; 7
	if(sampleRate > 7) sampleRate = 7;	//OS cannot be large than 0b.0111
	sampleRate <<= 3;
	
	//read CTRL_REG1
	uint8_t tempSetting = IIC_Read(CTRL_REG1);
     594:	86 e2       	ldi	r24, 0x26	; 38
     596:	08 df       	rcall	.-496    	; 0x3a8 <_Z8IIC_Readh>
	
	tempSetting &= 0b11000111; //Clear out old OS bits
     598:	87 7c       	andi	r24, 0xC7	; 199
}

void setOversampleRate(uint8_t sampleRate)
{
	if(sampleRate > 7) sampleRate = 7;	//OS cannot be large than 0b.0111
	sampleRate <<= 3;
     59a:	cc 0f       	add	r28, r28
     59c:	cc 0f       	add	r28, r28
     59e:	cc 0f       	add	r28, r28
	
	//read CTRL_REG1
	uint8_t tempSetting = IIC_Read(CTRL_REG1);
	
	tempSetting &= 0b11000111; //Clear out old OS bits
	tempSetting |= sampleRate; //Mask in new OS bits
     5a0:	68 2f       	mov	r22, r24
     5a2:	6c 2b       	or	r22, r28
	
	IIC_Write(CTRL_REG1,tempSetting);
     5a4:	86 e2       	ldi	r24, 0x26	; 38
     5a6:	0b df       	rcall	.-490    	; 0x3be <_Z9IIC_Writehh>
	
}
     5a8:	cf 91       	pop	r28
     5aa:	08 95       	ret

000005ac <_Z14altimeter_initv>:
float start_height = 0;
bool working;

bool altimeter_init()
{
	i2c_init();
     5ac:	97 de       	rcall	.-722    	; 0x2dc <i2c_init>
	bool success = true;
	
	if(IIC_Read(WHO_AM_I) == 196)
     5ae:	8c e0       	ldi	r24, 0x0C	; 12
     5b0:	fb de       	rcall	.-522    	; 0x3a8 <_Z8IIC_Readh>
     5b2:	84 3c       	cpi	r24, 0xC4	; 196
     5b4:	c9 f4       	brne	.+50     	; 0x5e8 <_Z14altimeter_initv+0x3c>
	{
		debug_println("Altimeter connected correctly!");
     5b6:	8b e6       	ldi	r24, 0x6B	; 107
     5b8:	92 e0       	ldi	r25, 0x02	; 2
     5ba:	ff d1       	rcall	.+1022   	; 0x9ba <_Z13debug_printlnPKc>
		success = false;
	}
	
	if(success)
	{
		setModeAltimeter();
     5bc:	df df       	rcall	.-66     	; 0x57c <_Z16setModeAltimeterv>
		setOversampleRate(7);
     5be:	87 e0       	ldi	r24, 0x07	; 7
     5c0:	e4 df       	rcall	.-56     	; 0x58a <_Z17setOversampleRateh>
		enableEventFlags();
     5c2:	eb de       	rcall	.-554    	; 0x39a <_Z16enableEventFlagsv>
	
		
		start_height = altimeter_start_height();
     5c4:	83 df       	rcall	.-250    	; 0x4cc <_Z22altimeter_start_heightv>
     5c6:	60 93 cf 04 	sts	0x04CF, r22
     5ca:	70 93 d0 04 	sts	0x04D0, r23
     5ce:	80 93 d1 04 	sts	0x04D1, r24
     5d2:	90 93 d2 04 	sts	0x04D2, r25
		
		if(start_height == -999)
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 ec       	ldi	r19, 0xC0	; 192
     5da:	49 e7       	ldi	r20, 0x79	; 121
     5dc:	54 ec       	ldi	r21, 0xC4	; 196
     5de:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__cmpsf2>
     5e2:	88 23       	and	r24, r24
     5e4:	69 f0       	breq	.+26     	; 0x600 <_Z14altimeter_initv+0x54>
     5e6:	07 c0       	rjmp	.+14     	; 0x5f6 <_Z14altimeter_initv+0x4a>
	{
		debug_println("Altimeter connected correctly!");
	}
	else
	{
		debug_println("Altimeter not connected!");
     5e8:	8a e8       	ldi	r24, 0x8A	; 138
     5ea:	92 e0       	ldi	r25, 0x02	; 2
     5ec:	e6 d1       	rcall	.+972    	; 0x9ba <_Z13debug_printlnPKc>
		success = false;
     5ee:	80 e0       	ldi	r24, 0x00	; 0
			debug_println("Altimeter initialised correctly!");
		else
			debug_println("Altimeter failed to initialise!");
	}
	
	working = success;
     5f0:	80 93 ce 04 	sts	0x04CE, r24
     5f4:	08 95       	ret
		
		if(start_height == -999)
			success = false;
			
		if(success)
			debug_println("Altimeter initialised correctly!");
     5f6:	83 ea       	ldi	r24, 0xA3	; 163
     5f8:	92 e0       	ldi	r25, 0x02	; 2
     5fa:	df d1       	rcall	.+958    	; 0x9ba <_Z13debug_printlnPKc>
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	f8 cf       	rjmp	.-16     	; 0x5f0 <_Z14altimeter_initv+0x44>
		else
			debug_println("Altimeter failed to initialise!");
     600:	84 ec       	ldi	r24, 0xC4	; 196
     602:	92 e0       	ldi	r25, 0x02	; 2
     604:	da d1       	rcall	.+948    	; 0x9ba <_Z13debug_printlnPKc>
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	f3 cf       	rjmp	.-26     	; 0x5f0 <_Z14altimeter_initv+0x44>

0000060a <_Z19compass_get_headingv>:
	i2c_write(0x00);
	
	setMagGain(HMC5883_MAGGAIN_1_3);
}

float compass_get_heading(void){
     60a:	4f 92       	push	r4
     60c:	5f 92       	push	r5
     60e:	6f 92       	push	r6
     610:	7f 92       	push	r7
     612:	8f 92       	push	r8
     614:	9f 92       	push	r9
     616:	af 92       	push	r10
     618:	bf 92       	push	r11
     61a:	cf 92       	push	r12
     61c:	df 92       	push	r13
     61e:	ef 92       	push	r14
     620:	ff 92       	push	r15
     622:	cf 93       	push	r28
     624:	df 93       	push	r29

	i2c_start_wait(HMC5883L_WRITE);
     626:	8c e3       	ldi	r24, 0x3C	; 60
     628:	6c de       	rcall	.-808    	; 0x302 <i2c_start_wait>
	i2c_write(0x03); //set pointer to X-axis MSB
     62a:	83 e0       	ldi	r24, 0x03	; 3
     62c:	7c de       	rcall	.-776    	; 0x326 <i2c_write>
	i2c_stop();
     62e:	73 de       	rcall	.-794    	; 0x316 <i2c_stop>

	i2c_rep_start(HMC5883L_READ);
     630:	8d e3       	ldi	r24, 0x3D	; 61
     632:	5d de       	rcall	.-838    	; 0x2ee <i2c_rep_start>

	mag_raw_xhi = i2c_readAck();
     634:	96 de       	rcall	.-724    	; 0x362 <i2c_readAck>
     636:	80 93 eb 04 	sts	0x04EB, r24
	mag_raw_xlo = i2c_readAck();
     63a:	93 de       	rcall	.-730    	; 0x362 <i2c_readAck>
     63c:	80 93 ea 04 	sts	0x04EA, r24
	
	mag_raw_zhi = i2c_readAck();
     640:	90 de       	rcall	.-736    	; 0x362 <i2c_readAck>
     642:	80 93 e9 04 	sts	0x04E9, r24
	mag_raw_zlo = i2c_readAck();
     646:	8d de       	rcall	.-742    	; 0x362 <i2c_readAck>
     648:	80 93 e8 04 	sts	0x04E8, r24
	
	mag_raw_yhi = i2c_readAck();
     64c:	8a de       	rcall	.-748    	; 0x362 <i2c_readAck>
     64e:	80 93 e7 04 	sts	0x04E7, r24
	mag_raw_ylo = i2c_readNak();
     652:	85 de       	rcall	.-758    	; 0x35e <i2c_readNak>
     654:	80 93 e6 04 	sts	0x04E6, r24
	
	i2c_stop();
     658:	5e de       	rcall	.-836    	; 0x316 <i2c_stop>
	
	//shift values to create properly formed integer (low byte first)
	mag_data_x = (int16_t) (mag_raw_xlo | (int16_t)mag_raw_xhi << 8);
     65a:	60 91 eb 04 	lds	r22, 0x04EB
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	76 2f       	mov	r23, r22
     662:	66 27       	eor	r22, r22
     664:	80 91 ea 04 	lds	r24, 0x04EA
     668:	68 2b       	or	r22, r24
     66a:	70 93 e5 04 	sts	0x04E5, r23
     66e:	60 93 e4 04 	sts	0x04E4, r22
	mag_data_y = (int16_t) (mag_raw_ylo | (int16_t)mag_raw_yhi << 8);
     672:	e0 90 e7 04 	lds	r14, 0x04E7
     676:	f1 2c       	mov	r15, r1
     678:	fe 2c       	mov	r15, r14
     67a:	ee 24       	eor	r14, r14
     67c:	80 91 e6 04 	lds	r24, 0x04E6
     680:	e8 2a       	or	r14, r24
     682:	f0 92 e3 04 	sts	0x04E3, r15
     686:	e0 92 e2 04 	sts	0x04E2, r14
	mag_data_z = (int16_t) (mag_raw_zlo | (int16_t)mag_raw_zhi << 8);
     68a:	c0 91 e9 04 	lds	r28, 0x04E9
     68e:	d0 e0       	ldi	r29, 0x00	; 0
     690:	dc 2f       	mov	r29, r28
     692:	cc 27       	eor	r28, r28
     694:	80 91 e8 04 	lds	r24, 0x04E8
     698:	c8 2b       	or	r28, r24
     69a:	d0 93 e1 04 	sts	0x04E1, r29
     69e:	c0 93 e0 04 	sts	0x04E0, r28
	
	mag_proc_x = mag_data_x / _hmc5883_Gauss_LSB_XY * GAUSS_TO_MICROTESLA;
     6a2:	40 90 04 02 	lds	r4, 0x0204
     6a6:	50 90 05 02 	lds	r5, 0x0205
     6aa:	60 90 06 02 	lds	r6, 0x0206
     6ae:	70 90 07 02 	lds	r7, 0x0207
     6b2:	88 27       	eor	r24, r24
     6b4:	77 fd       	sbrc	r23, 7
     6b6:	80 95       	com	r24
     6b8:	98 2f       	mov	r25, r24
     6ba:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__floatsisf>
     6be:	a3 01       	movw	r20, r6
     6c0:	92 01       	movw	r18, r4
     6c2:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <__divsf3>
     6c6:	20 e0       	ldi	r18, 0x00	; 0
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	48 ec       	ldi	r20, 0xC8	; 200
     6cc:	52 e4       	ldi	r21, 0x42	; 66
     6ce:	0e 94 04 11 	call	0x2208	; 0x2208 <__mulsf3>
     6d2:	4b 01       	movw	r8, r22
     6d4:	5c 01       	movw	r10, r24
     6d6:	60 93 dc 04 	sts	0x04DC, r22
     6da:	70 93 dd 04 	sts	0x04DD, r23
     6de:	80 93 de 04 	sts	0x04DE, r24
     6e2:	90 93 df 04 	sts	0x04DF, r25
	mag_proc_y = mag_data_y / _hmc5883_Gauss_LSB_XY * GAUSS_TO_MICROTESLA;
     6e6:	b7 01       	movw	r22, r14
     6e8:	88 27       	eor	r24, r24
     6ea:	77 fd       	sbrc	r23, 7
     6ec:	80 95       	com	r24
     6ee:	98 2f       	mov	r25, r24
     6f0:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__floatsisf>
     6f4:	a3 01       	movw	r20, r6
     6f6:	92 01       	movw	r18, r4
     6f8:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <__divsf3>
     6fc:	20 e0       	ldi	r18, 0x00	; 0
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	48 ec       	ldi	r20, 0xC8	; 200
     702:	52 e4       	ldi	r21, 0x42	; 66
     704:	0e 94 04 11 	call	0x2208	; 0x2208 <__mulsf3>
     708:	6b 01       	movw	r12, r22
     70a:	7c 01       	movw	r14, r24
     70c:	60 93 d8 04 	sts	0x04D8, r22
     710:	70 93 d9 04 	sts	0x04D9, r23
     714:	80 93 da 04 	sts	0x04DA, r24
     718:	90 93 db 04 	sts	0x04DB, r25
	mag_proc_z = mag_data_z / _hmc5883_Gauss_LSB_Z * GAUSS_TO_MICROTESLA;
     71c:	be 01       	movw	r22, r28
     71e:	88 27       	eor	r24, r24
     720:	77 fd       	sbrc	r23, 7
     722:	80 95       	com	r24
     724:	98 2f       	mov	r25, r24
     726:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__floatsisf>
     72a:	20 91 00 02 	lds	r18, 0x0200
     72e:	30 91 01 02 	lds	r19, 0x0201
     732:	40 91 02 02 	lds	r20, 0x0202
     736:	50 91 03 02 	lds	r21, 0x0203
     73a:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <__divsf3>
     73e:	20 e0       	ldi	r18, 0x00	; 0
     740:	30 e0       	ldi	r19, 0x00	; 0
     742:	48 ec       	ldi	r20, 0xC8	; 200
     744:	52 e4       	ldi	r21, 0x42	; 66
     746:	0e 94 04 11 	call	0x2208	; 0x2208 <__mulsf3>
     74a:	60 93 d4 04 	sts	0x04D4, r22
     74e:	70 93 d5 04 	sts	0x04D5, r23
     752:	80 93 d6 04 	sts	0x04D6, r24
     756:	90 93 d7 04 	sts	0x04D7, r25
	//debug_print("X: ");debug_printf(mag_proc_x);debug_print(" ");
	//debug_print("Y: ");debug_printf(mag_proc_y);debug_print(" ");
	//debug_print("Z: ");debug_printf(mag_proc_z);debug_print(" ");debug_println("uT");
	
	//calculate heading
	float heading = atan2(mag_proc_y,mag_proc_x);
     75a:	a5 01       	movw	r20, r10
     75c:	94 01       	movw	r18, r8
     75e:	c7 01       	movw	r24, r14
     760:	b6 01       	movw	r22, r12
     762:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <atan2>
	
	heading += DECLINATION;
     766:	25 e3       	ldi	r18, 0x35	; 53
     768:	3a ef       	ldi	r19, 0xFA	; 250
     76a:	4e e0       	ldi	r20, 0x0E	; 14
     76c:	5e e3       	ldi	r21, 0x3E	; 62
     76e:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__addsf3>
     772:	6b 01       	movw	r12, r22
     774:	7c 01       	movw	r14, r24
	
	if(heading<0)
     776:	20 e0       	ldi	r18, 0x00	; 0
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	a9 01       	movw	r20, r18
     77c:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__cmpsf2>
     780:	88 23       	and	r24, r24
     782:	54 f4       	brge	.+20     	; 0x798 <_Z19compass_get_headingv+0x18e>
		heading+=2*PI;
     784:	2b ed       	ldi	r18, 0xDB	; 219
     786:	3f e0       	ldi	r19, 0x0F	; 15
     788:	49 ec       	ldi	r20, 0xC9	; 201
     78a:	50 e4       	ldi	r21, 0x40	; 64
     78c:	c7 01       	movw	r24, r14
     78e:	b6 01       	movw	r22, r12
     790:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__addsf3>
     794:	6b 01       	movw	r12, r22
     796:	7c 01       	movw	r14, r24
	
	if(heading > 2*PI)
     798:	2b ed       	ldi	r18, 0xDB	; 219
     79a:	3f e0       	ldi	r19, 0x0F	; 15
     79c:	49 ec       	ldi	r20, 0xC9	; 201
     79e:	50 e4       	ldi	r21, 0x40	; 64
     7a0:	c7 01       	movw	r24, r14
     7a2:	b6 01       	movw	r22, r12
     7a4:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__gesf2>
     7a8:	18 16       	cp	r1, r24
     7aa:	54 f4       	brge	.+20     	; 0x7c0 <_Z19compass_get_headingv+0x1b6>
		heading-=2*PI;
     7ac:	2b ed       	ldi	r18, 0xDB	; 219
     7ae:	3f e0       	ldi	r19, 0x0F	; 15
     7b0:	49 ec       	ldi	r20, 0xC9	; 201
     7b2:	50 e4       	ldi	r21, 0x40	; 64
     7b4:	c7 01       	movw	r24, r14
     7b6:	b6 01       	movw	r22, r12
     7b8:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__subsf3>
     7bc:	6b 01       	movw	r12, r22
     7be:	7c 01       	movw	r14, r24
		
	float heading_degrees = heading * 180 / PI;
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	44 e3       	ldi	r20, 0x34	; 52
     7c6:	53 e4       	ldi	r21, 0x43	; 67
     7c8:	c7 01       	movw	r24, r14
     7ca:	b6 01       	movw	r22, r12
     7cc:	0e 94 04 11 	call	0x2208	; 0x2208 <__mulsf3>
     7d0:	2b ed       	ldi	r18, 0xDB	; 219
     7d2:	3f e0       	ldi	r19, 0x0F	; 15
     7d4:	49 e4       	ldi	r20, 0x49	; 73
     7d6:	50 e4       	ldi	r21, 0x40	; 64
     7d8:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <__divsf3>
	
	//debug_print("Heading (degrees): "); debug_printf(heading_degrees);debug_println("");
	
	return heading_degrees;
}
     7dc:	df 91       	pop	r29
     7de:	cf 91       	pop	r28
     7e0:	ff 90       	pop	r15
     7e2:	ef 90       	pop	r14
     7e4:	df 90       	pop	r13
     7e6:	cf 90       	pop	r12
     7e8:	bf 90       	pop	r11
     7ea:	af 90       	pop	r10
     7ec:	9f 90       	pop	r9
     7ee:	8f 90       	pop	r8
     7f0:	7f 90       	pop	r7
     7f2:	6f 90       	pop	r6
     7f4:	5f 90       	pop	r5
     7f6:	4f 90       	pop	r4
     7f8:	08 95       	ret

000007fa <_Z10setMagGain14hmc5883MagGain>:

void setMagGain(hmc5883MagGain gain)
{
     7fa:	cf 93       	push	r28
     7fc:	c8 2f       	mov	r28, r24
	i2c_start(HMC5883L_WRITE);
     7fe:	8c e3       	ldi	r24, 0x3C	; 60
     800:	72 dd       	rcall	.-1308   	; 0x2e6 <i2c_start>
	i2c_write(HMC5883_REGISTER_MAG_CRB_REG_M); // set pointer
     802:	81 e0       	ldi	r24, 0x01	; 1
     804:	90 dd       	rcall	.-1248   	; 0x326 <i2c_write>
	i2c_write((byte)gain); // write gain
     806:	8c 2f       	mov	r24, r28
     808:	8e dd       	rcall	.-1252   	; 0x326 <i2c_write>
	i2c_stop();
     80a:	85 dd       	rcall	.-1270   	; 0x316 <i2c_stop>
	
	_magGain = gain;
     80c:	c0 93 d3 04 	sts	0x04D3, r28
	
	switch(gain)
     810:	c0 38       	cpi	r28, 0x80	; 128
     812:	09 f4       	brne	.+2      	; 0x816 <_Z10setMagGain14hmc5883MagGain+0x1c>
     814:	5f c0       	rjmp	.+190    	; 0x8d4 <_Z10setMagGain14hmc5883MagGain+0xda>
     816:	48 f4       	brcc	.+18     	; 0x82a <_Z10setMagGain14hmc5883MagGain+0x30>
     818:	c0 34       	cpi	r28, 0x40	; 64
     81a:	51 f1       	breq	.+84     	; 0x870 <_Z10setMagGain14hmc5883MagGain+0x76>
     81c:	c0 36       	cpi	r28, 0x60	; 96
     81e:	09 f4       	brne	.+2      	; 0x822 <_Z10setMagGain14hmc5883MagGain+0x28>
     820:	40 c0       	rjmp	.+128    	; 0x8a2 <_Z10setMagGain14hmc5883MagGain+0xa8>
     822:	c0 32       	cpi	r28, 0x20	; 32
     824:	09 f0       	breq	.+2      	; 0x828 <_Z10setMagGain14hmc5883MagGain+0x2e>
     826:	b9 c0       	rjmp	.+370    	; 0x99a <_Z10setMagGain14hmc5883MagGain+0x1a0>
     828:	0a c0       	rjmp	.+20     	; 0x83e <_Z10setMagGain14hmc5883MagGain+0x44>
     82a:	c0 3c       	cpi	r28, 0xC0	; 192
     82c:	09 f4       	brne	.+2      	; 0x830 <_Z10setMagGain14hmc5883MagGain+0x36>
     82e:	84 c0       	rjmp	.+264    	; 0x938 <_Z10setMagGain14hmc5883MagGain+0x13e>
     830:	c0 3e       	cpi	r28, 0xE0	; 224
     832:	09 f4       	brne	.+2      	; 0x836 <_Z10setMagGain14hmc5883MagGain+0x3c>
     834:	9a c0       	rjmp	.+308    	; 0x96a <_Z10setMagGain14hmc5883MagGain+0x170>
     836:	c0 3a       	cpi	r28, 0xA0	; 160
     838:	09 f0       	breq	.+2      	; 0x83c <_Z10setMagGain14hmc5883MagGain+0x42>
     83a:	af c0       	rjmp	.+350    	; 0x99a <_Z10setMagGain14hmc5883MagGain+0x1a0>
     83c:	64 c0       	rjmp	.+200    	; 0x906 <_Z10setMagGain14hmc5883MagGain+0x10c>
	{
		case HMC5883_MAGGAIN_1_3:
			_hmc5883_Gauss_LSB_XY = 1100;
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	90 e8       	ldi	r25, 0x80	; 128
     842:	a9 e8       	ldi	r26, 0x89	; 137
     844:	b4 e4       	ldi	r27, 0x44	; 68
     846:	80 93 04 02 	sts	0x0204, r24
     84a:	90 93 05 02 	sts	0x0205, r25
     84e:	a0 93 06 02 	sts	0x0206, r26
     852:	b0 93 07 02 	sts	0x0207, r27
			_hmc5883_Gauss_LSB_Z  = 980;
     856:	80 e0       	ldi	r24, 0x00	; 0
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	a5 e7       	ldi	r26, 0x75	; 117
     85c:	b4 e4       	ldi	r27, 0x44	; 68
     85e:	80 93 00 02 	sts	0x0200, r24
     862:	90 93 01 02 	sts	0x0201, r25
     866:	a0 93 02 02 	sts	0x0202, r26
     86a:	b0 93 03 02 	sts	0x0203, r27
			break;
     86e:	95 c0       	rjmp	.+298    	; 0x99a <_Z10setMagGain14hmc5883MagGain+0x1a0>
		case HMC5883_MAGGAIN_1_9:
			_hmc5883_Gauss_LSB_XY = 855;
     870:	80 e0       	ldi	r24, 0x00	; 0
     872:	90 ec       	ldi	r25, 0xC0	; 192
     874:	a5 e5       	ldi	r26, 0x55	; 85
     876:	b4 e4       	ldi	r27, 0x44	; 68
     878:	80 93 04 02 	sts	0x0204, r24
     87c:	90 93 05 02 	sts	0x0205, r25
     880:	a0 93 06 02 	sts	0x0206, r26
     884:	b0 93 07 02 	sts	0x0207, r27
			_hmc5883_Gauss_LSB_Z  = 760;
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	ae e3       	ldi	r26, 0x3E	; 62
     88e:	b4 e4       	ldi	r27, 0x44	; 68
     890:	80 93 00 02 	sts	0x0200, r24
     894:	90 93 01 02 	sts	0x0201, r25
     898:	a0 93 02 02 	sts	0x0202, r26
     89c:	b0 93 03 02 	sts	0x0203, r27
			break;
     8a0:	7c c0       	rjmp	.+248    	; 0x99a <_Z10setMagGain14hmc5883MagGain+0x1a0>
		case HMC5883_MAGGAIN_2_5:
			_hmc5883_Gauss_LSB_XY = 670;
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	90 e8       	ldi	r25, 0x80	; 128
     8a6:	a7 e2       	ldi	r26, 0x27	; 39
     8a8:	b4 e4       	ldi	r27, 0x44	; 68
     8aa:	80 93 04 02 	sts	0x0204, r24
     8ae:	90 93 05 02 	sts	0x0205, r25
     8b2:	a0 93 06 02 	sts	0x0206, r26
     8b6:	b0 93 07 02 	sts	0x0207, r27
			_hmc5883_Gauss_LSB_Z  = 600;
     8ba:	80 e0       	ldi	r24, 0x00	; 0
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	a6 e1       	ldi	r26, 0x16	; 22
     8c0:	b4 e4       	ldi	r27, 0x44	; 68
     8c2:	80 93 00 02 	sts	0x0200, r24
     8c6:	90 93 01 02 	sts	0x0201, r25
     8ca:	a0 93 02 02 	sts	0x0202, r26
     8ce:	b0 93 03 02 	sts	0x0203, r27
			break;
     8d2:	63 c0       	rjmp	.+198    	; 0x99a <_Z10setMagGain14hmc5883MagGain+0x1a0>
		case HMC5883_MAGGAIN_4_0:
			_hmc5883_Gauss_LSB_XY = 450;
     8d4:	80 e0       	ldi	r24, 0x00	; 0
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	a1 ee       	ldi	r26, 0xE1	; 225
     8da:	b3 e4       	ldi	r27, 0x43	; 67
     8dc:	80 93 04 02 	sts	0x0204, r24
     8e0:	90 93 05 02 	sts	0x0205, r25
     8e4:	a0 93 06 02 	sts	0x0206, r26
     8e8:	b0 93 07 02 	sts	0x0207, r27
			_hmc5883_Gauss_LSB_Z  = 400;
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	a8 ec       	ldi	r26, 0xC8	; 200
     8f2:	b3 e4       	ldi	r27, 0x43	; 67
     8f4:	80 93 00 02 	sts	0x0200, r24
     8f8:	90 93 01 02 	sts	0x0201, r25
     8fc:	a0 93 02 02 	sts	0x0202, r26
     900:	b0 93 03 02 	sts	0x0203, r27
			break;
     904:	4a c0       	rjmp	.+148    	; 0x99a <_Z10setMagGain14hmc5883MagGain+0x1a0>
		case HMC5883_MAGGAIN_4_7:
			_hmc5883_Gauss_LSB_XY = 400;
     906:	80 e0       	ldi	r24, 0x00	; 0
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	a8 ec       	ldi	r26, 0xC8	; 200
     90c:	b3 e4       	ldi	r27, 0x43	; 67
     90e:	80 93 04 02 	sts	0x0204, r24
     912:	90 93 05 02 	sts	0x0205, r25
     916:	a0 93 06 02 	sts	0x0206, r26
     91a:	b0 93 07 02 	sts	0x0207, r27
			_hmc5883_Gauss_LSB_Z  = 255;
     91e:	80 e0       	ldi	r24, 0x00	; 0
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	af e7       	ldi	r26, 0x7F	; 127
     924:	b3 e4       	ldi	r27, 0x43	; 67
     926:	80 93 00 02 	sts	0x0200, r24
     92a:	90 93 01 02 	sts	0x0201, r25
     92e:	a0 93 02 02 	sts	0x0202, r26
     932:	b0 93 03 02 	sts	0x0203, r27
			break;
     936:	31 c0       	rjmp	.+98     	; 0x99a <_Z10setMagGain14hmc5883MagGain+0x1a0>
		case HMC5883_MAGGAIN_5_6:
			_hmc5883_Gauss_LSB_XY = 330;
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	a5 ea       	ldi	r26, 0xA5	; 165
     93e:	b3 e4       	ldi	r27, 0x43	; 67
     940:	80 93 04 02 	sts	0x0204, r24
     944:	90 93 05 02 	sts	0x0205, r25
     948:	a0 93 06 02 	sts	0x0206, r26
     94c:	b0 93 07 02 	sts	0x0207, r27
			_hmc5883_Gauss_LSB_Z  = 295;
     950:	80 e0       	ldi	r24, 0x00	; 0
     952:	90 e8       	ldi	r25, 0x80	; 128
     954:	a3 e9       	ldi	r26, 0x93	; 147
     956:	b3 e4       	ldi	r27, 0x43	; 67
     958:	80 93 00 02 	sts	0x0200, r24
     95c:	90 93 01 02 	sts	0x0201, r25
     960:	a0 93 02 02 	sts	0x0202, r26
     964:	b0 93 03 02 	sts	0x0203, r27
			break;
     968:	18 c0       	rjmp	.+48     	; 0x99a <_Z10setMagGain14hmc5883MagGain+0x1a0>
		case HMC5883_MAGGAIN_8_1:
			_hmc5883_Gauss_LSB_XY = 230;
     96a:	80 e0       	ldi	r24, 0x00	; 0
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	a6 e6       	ldi	r26, 0x66	; 102
     970:	b3 e4       	ldi	r27, 0x43	; 67
     972:	80 93 04 02 	sts	0x0204, r24
     976:	90 93 05 02 	sts	0x0205, r25
     97a:	a0 93 06 02 	sts	0x0206, r26
     97e:	b0 93 07 02 	sts	0x0207, r27
			_hmc5883_Gauss_LSB_Z  = 205;
     982:	80 e0       	ldi	r24, 0x00	; 0
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	ad e4       	ldi	r26, 0x4D	; 77
     988:	b3 e4       	ldi	r27, 0x43	; 67
     98a:	80 93 00 02 	sts	0x0200, r24
     98e:	90 93 01 02 	sts	0x0201, r25
     992:	a0 93 02 02 	sts	0x0202, r26
     996:	b0 93 03 02 	sts	0x0203, r27
			break;
	}

}
     99a:	cf 91       	pop	r28
     99c:	08 95       	ret

0000099e <_Z13init_HMC5883Lv>:

//bool working;

void init_HMC5883L(void){

	i2c_start(HMC5883L_WRITE);
     99e:	8c e3       	ldi	r24, 0x3C	; 60
     9a0:	a2 dc       	rcall	.-1724   	; 0x2e6 <i2c_start>
	i2c_write(HMC5883_REGISTER_MAG_MR_REG_M);
     9a2:	82 e0       	ldi	r24, 0x02	; 2
     9a4:	c0 dc       	rcall	.-1664   	; 0x326 <i2c_write>
	i2c_write(0x00);
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	be dc       	rcall	.-1668   	; 0x326 <i2c_write>
	
	setMagGain(HMC5883_MAGGAIN_1_3);
     9aa:	80 e2       	ldi	r24, 0x20	; 32
     9ac:	26 cf       	rjmp	.-436    	; 0x7fa <_Z10setMagGain14hmc5883MagGain>
     9ae:	08 95       	ret

000009b0 <_Z11debug_printPKc>:
	{
		char string[16];
		itoa(debugNum,string,16);
		debug_print(string);
	}
}
     9b0:	bc 01       	movw	r22, r24
     9b2:	80 e0       	ldi	r24, 0x00	; 0
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	8d c5       	rjmp	.+2842   	; 0x14d2 <_Z15USART_putstringiPKc>
     9b8:	08 95       	ret

000009ba <_Z13debug_printlnPKc>:
     9ba:	bc 01       	movw	r22, r24
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	88 d5       	rcall	.+2832   	; 0x14d2 <_Z15USART_putstringiPKc>
     9c2:	64 ee       	ldi	r22, 0xE4	; 228
     9c4:	72 e0       	ldi	r23, 0x02	; 2
     9c6:	80 e0       	ldi	r24, 0x00	; 0
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	83 c5       	rjmp	.+2822   	; 0x14d2 <_Z15USART_putstringiPKc>
     9cc:	08 95       	ret

000009ce <_Z12debug_printii>:
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	cd b7       	in	r28, 0x3d	; 61
     9d4:	de b7       	in	r29, 0x3e	; 62
     9d6:	2a 97       	sbiw	r28, 0x0a	; 10
     9d8:	0f b6       	in	r0, 0x3f	; 63
     9da:	f8 94       	cli
     9dc:	de bf       	out	0x3e, r29	; 62
     9de:	0f be       	out	0x3f, r0	; 63
     9e0:	cd bf       	out	0x3d, r28	; 61
     9e2:	4a e0       	ldi	r20, 0x0A	; 10
     9e4:	be 01       	movw	r22, r28
     9e6:	6f 5f       	subi	r22, 0xFF	; 255
     9e8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ea:	0e 94 39 12 	call	0x2472	; 0x2472 <__itoa_ncheck>
     9ee:	ce 01       	movw	r24, r28
     9f0:	01 96       	adiw	r24, 0x01	; 1
     9f2:	de df       	rcall	.-68     	; 0x9b0 <_Z11debug_printPKc>
     9f4:	2a 96       	adiw	r28, 0x0a	; 10
     9f6:	0f b6       	in	r0, 0x3f	; 63
     9f8:	f8 94       	cli
     9fa:	de bf       	out	0x3e, r29	; 62
     9fc:	0f be       	out	0x3f, r0	; 63
     9fe:	cd bf       	out	0x3d, r28	; 61
     a00:	df 91       	pop	r29
     a02:	cf 91       	pop	r28
     a04:	08 95       	ret

00000a06 <_Z12debug_printff>:

void debug_printf(float debugNum)
{
     a06:	0f 93       	push	r16
     a08:	1f 93       	push	r17
     a0a:	cf 93       	push	r28
     a0c:	df 93       	push	r29
     a0e:	cd b7       	in	r28, 0x3d	; 61
     a10:	de b7       	in	r29, 0x3e	; 62
     a12:	64 97       	sbiw	r28, 0x14	; 20
     a14:	0f b6       	in	r0, 0x3f	; 63
     a16:	f8 94       	cli
     a18:	de bf       	out	0x3e, r29	; 62
     a1a:	0f be       	out	0x3f, r0	; 63
     a1c:	cd bf       	out	0x3d, r28	; 61
	if(DEBUG_ENABLE == true)
	{
		char string[20];
		dtostrf(debugNum,10,5,string);
     a1e:	8e 01       	movw	r16, r28
     a20:	0f 5f       	subi	r16, 0xFF	; 255
     a22:	1f 4f       	sbci	r17, 0xFF	; 255
     a24:	25 e0       	ldi	r18, 0x05	; 5
     a26:	4a e0       	ldi	r20, 0x0A	; 10
     a28:	0e 94 f0 11 	call	0x23e0	; 0x23e0 <dtostrf>
		debug_print(string);
     a2c:	c8 01       	movw	r24, r16
     a2e:	c0 df       	rcall	.-128    	; 0x9b0 <_Z11debug_printPKc>
	}
}
     a30:	64 96       	adiw	r28, 0x14	; 20
     a32:	0f b6       	in	r0, 0x3f	; 63
     a34:	f8 94       	cli
     a36:	de bf       	out	0x3e, r29	; 62
     a38:	0f be       	out	0x3f, r0	; 63
     a3a:	cd bf       	out	0x3d, r28	; 61
     a3c:	df 91       	pop	r29
     a3e:	cf 91       	pop	r28
     a40:	1f 91       	pop	r17
     a42:	0f 91       	pop	r16
     a44:	08 95       	ret

00000a46 <_Z10debug_beepv>:


//beep for 50ms, buzzer attached to PORTB.7 (Digital Pin 13, next to GND)
void debug_beep()
{
	sbi(PORTB,7);
     a46:	2f 9a       	sbi	0x05, 7	; 5
     a48:	2f ef       	ldi	r18, 0xFF	; 255
     a4a:	80 e7       	ldi	r24, 0x70	; 112
     a4c:	92 e0       	ldi	r25, 0x02	; 2
     a4e:	21 50       	subi	r18, 0x01	; 1
     a50:	80 40       	sbci	r24, 0x00	; 0
     a52:	90 40       	sbci	r25, 0x00	; 0
     a54:	e1 f7       	brne	.-8      	; 0xa4e <_Z10debug_beepv+0x8>
     a56:	00 c0       	rjmp	.+0      	; 0xa58 <_Z10debug_beepv+0x12>
     a58:	00 00       	nop
	_delay_ms(50);
	cbi(PORTB,7);
     a5a:	2f 98       	cbi	0x05, 7	; 5
     a5c:	08 95       	ret

00000a5e <_Z15debug_beep_longv>:
}

//beep for 250ms, buzzer attached to PORTB.7 (Digital Pin 13, next to GND)
void debug_beep_long()
{
	sbi(PORTB,7);
     a5e:	2f 9a       	sbi	0x05, 7	; 5
     a60:	2f ef       	ldi	r18, 0xFF	; 255
     a62:	84 e3       	ldi	r24, 0x34	; 52
     a64:	9c e0       	ldi	r25, 0x0C	; 12
     a66:	21 50       	subi	r18, 0x01	; 1
     a68:	80 40       	sbci	r24, 0x00	; 0
     a6a:	90 40       	sbci	r25, 0x00	; 0
     a6c:	e1 f7       	brne	.-8      	; 0xa66 <_Z15debug_beep_longv+0x8>
     a6e:	00 c0       	rjmp	.+0      	; 0xa70 <_Z15debug_beep_longv+0x12>
     a70:	00 00       	nop
	_delay_ms(250);
	cbi(PORTB,7);
     a72:	2f 98       	cbi	0x05, 7	; 5
     a74:	08 95       	ret

00000a76 <_Z8get_timePcPi>:
		a[i] = nev[*p_j];
		*p_j = *p_j + 1;
	}
	alt = atof (ptr_a);
	return(alt);
}
     a76:	0f 93       	push	r16
     a78:	1f 93       	push	r17
     a7a:	cf 93       	push	r28
     a7c:	df 93       	push	r29
     a7e:	cd b7       	in	r28, 0x3d	; 61
     a80:	de b7       	in	r29, 0x3e	; 62
     a82:	29 97       	sbiw	r28, 0x09	; 9
     a84:	0f b6       	in	r0, 0x3f	; 63
     a86:	f8 94       	cli
     a88:	de bf       	out	0x3e, r29	; 62
     a8a:	0f be       	out	0x3f, r0	; 63
     a8c:	cd bf       	out	0x3d, r28	; 61
     a8e:	8b 01       	movw	r16, r22
     a90:	fe 01       	movw	r30, r28
     a92:	31 96       	adiw	r30, 0x01	; 1
     a94:	be 01       	movw	r22, r28
     a96:	66 5f       	subi	r22, 0xF6	; 246
     a98:	7f 4f       	sbci	r23, 0xFF	; 255
     a9a:	d8 01       	movw	r26, r16
     a9c:	2d 91       	ld	r18, X+
     a9e:	3c 91       	ld	r19, X
     aa0:	ac 01       	movw	r20, r24
     aa2:	42 0f       	add	r20, r18
     aa4:	53 1f       	adc	r21, r19
     aa6:	da 01       	movw	r26, r20
     aa8:	4c 91       	ld	r20, X
     aaa:	41 93       	st	Z+, r20
     aac:	2f 5f       	subi	r18, 0xFF	; 255
     aae:	3f 4f       	sbci	r19, 0xFF	; 255
     ab0:	d8 01       	movw	r26, r16
     ab2:	2d 93       	st	X+, r18
     ab4:	3c 93       	st	X, r19
     ab6:	e6 17       	cp	r30, r22
     ab8:	f7 07       	cpc	r31, r23
     aba:	79 f7       	brne	.-34     	; 0xa9a <_Z8get_timePcPi+0x24>
     abc:	ce 01       	movw	r24, r28
     abe:	01 96       	adiw	r24, 0x01	; 1
     ac0:	0e 94 10 12 	call	0x2420	; 0x2420 <atof>
     ac4:	29 96       	adiw	r28, 0x09	; 9
     ac6:	0f b6       	in	r0, 0x3f	; 63
     ac8:	f8 94       	cli
     aca:	de bf       	out	0x3e, r29	; 62
     acc:	0f be       	out	0x3f, r0	; 63
     ace:	cd bf       	out	0x3d, r28	; 61
     ad0:	df 91       	pop	r29
     ad2:	cf 91       	pop	r28
     ad4:	1f 91       	pop	r17
     ad6:	0f 91       	pop	r16
     ad8:	08 95       	ret

00000ada <_Z12get_lat_distPc>:
     ada:	cf 93       	push	r28
     adc:	df 93       	push	r29
     ade:	cd b7       	in	r28, 0x3d	; 61
     ae0:	de b7       	in	r29, 0x3e	; 62
     ae2:	2a 97       	sbiw	r28, 0x0a	; 10
     ae4:	0f b6       	in	r0, 0x3f	; 63
     ae6:	f8 94       	cli
     ae8:	de bf       	out	0x3e, r29	; 62
     aea:	0f be       	out	0x3f, r0	; 63
     aec:	cd bf       	out	0x3d, r28	; 61
     aee:	fc 01       	movw	r30, r24
     af0:	83 85       	ldd	r24, Z+11	; 0x0b
     af2:	89 83       	std	Y+1, r24	; 0x01
     af4:	84 85       	ldd	r24, Z+12	; 0x0c
     af6:	8a 83       	std	Y+2, r24	; 0x02
     af8:	85 85       	ldd	r24, Z+13	; 0x0d
     afa:	8b 83       	std	Y+3, r24	; 0x03
     afc:	86 85       	ldd	r24, Z+14	; 0x0e
     afe:	8c 83       	std	Y+4, r24	; 0x04
     b00:	80 89       	ldd	r24, Z+16	; 0x10
     b02:	8d 83       	std	Y+5, r24	; 0x05
     b04:	81 89       	ldd	r24, Z+17	; 0x11
     b06:	8e 83       	std	Y+6, r24	; 0x06
     b08:	82 89       	ldd	r24, Z+18	; 0x12
     b0a:	8f 83       	std	Y+7, r24	; 0x07
     b0c:	18 86       	std	Y+8, r1	; 0x08
     b0e:	ce 01       	movw	r24, r28
     b10:	01 96       	adiw	r24, 0x01	; 1
     b12:	0e 94 10 12 	call	0x2420	; 0x2420 <atof>
     b16:	2a 96       	adiw	r28, 0x0a	; 10
     b18:	0f b6       	in	r0, 0x3f	; 63
     b1a:	f8 94       	cli
     b1c:	de bf       	out	0x3e, r29	; 62
     b1e:	0f be       	out	0x3f, r0	; 63
     b20:	cd bf       	out	0x3d, r28	; 61
     b22:	df 91       	pop	r29
     b24:	cf 91       	pop	r28
     b26:	08 95       	ret

00000b28 <_Z11get_lat_degPc>:
     b28:	cf 93       	push	r28
     b2a:	df 93       	push	r29
     b2c:	cd b7       	in	r28, 0x3d	; 61
     b2e:	de b7       	in	r29, 0x3e	; 62
     b30:	2a 97       	sbiw	r28, 0x0a	; 10
     b32:	0f b6       	in	r0, 0x3f	; 63
     b34:	f8 94       	cli
     b36:	de bf       	out	0x3e, r29	; 62
     b38:	0f be       	out	0x3f, r0	; 63
     b3a:	cd bf       	out	0x3d, r28	; 61
     b3c:	fc 01       	movw	r30, r24
     b3e:	83 85       	ldd	r24, Z+11	; 0x0b
     b40:	89 83       	std	Y+1, r24	; 0x01
     b42:	84 85       	ldd	r24, Z+12	; 0x0c
     b44:	8a 83       	std	Y+2, r24	; 0x02
     b46:	87 85       	ldd	r24, Z+15	; 0x0f
     b48:	8b 83       	std	Y+3, r24	; 0x03
     b4a:	85 85       	ldd	r24, Z+13	; 0x0d
     b4c:	8c 83       	std	Y+4, r24	; 0x04
     b4e:	86 85       	ldd	r24, Z+14	; 0x0e
     b50:	8d 83       	std	Y+5, r24	; 0x05
     b52:	80 89       	ldd	r24, Z+16	; 0x10
     b54:	8e 83       	std	Y+6, r24	; 0x06
     b56:	81 89       	ldd	r24, Z+17	; 0x11
     b58:	8f 83       	std	Y+7, r24	; 0x07
     b5a:	82 89       	ldd	r24, Z+18	; 0x12
     b5c:	88 87       	std	Y+8, r24	; 0x08
     b5e:	19 86       	std	Y+9, r1	; 0x09
     b60:	ce 01       	movw	r24, r28
     b62:	01 96       	adiw	r24, 0x01	; 1
     b64:	0e 94 10 12 	call	0x2420	; 0x2420 <atof>
     b68:	2a 96       	adiw	r28, 0x0a	; 10
     b6a:	0f b6       	in	r0, 0x3f	; 63
     b6c:	f8 94       	cli
     b6e:	de bf       	out	0x3e, r29	; 62
     b70:	0f be       	out	0x3f, r0	; 63
     b72:	cd bf       	out	0x3d, r28	; 61
     b74:	df 91       	pop	r29
     b76:	cf 91       	pop	r28
     b78:	08 95       	ret

00000b7a <_Z7get_latPcPi>:
     b7a:	0f 93       	push	r16
     b7c:	1f 93       	push	r17
     b7e:	cf 93       	push	r28
     b80:	df 93       	push	r29
     b82:	cd b7       	in	r28, 0x3d	; 61
     b84:	de b7       	in	r29, 0x3e	; 62
     b86:	2a 97       	sbiw	r28, 0x0a	; 10
     b88:	0f b6       	in	r0, 0x3f	; 63
     b8a:	f8 94       	cli
     b8c:	de bf       	out	0x3e, r29	; 62
     b8e:	0f be       	out	0x3f, r0	; 63
     b90:	cd bf       	out	0x3d, r28	; 61
     b92:	8b 01       	movw	r16, r22
     b94:	db 01       	movw	r26, r22
     b96:	2d 91       	ld	r18, X+
     b98:	3c 91       	ld	r19, X
     b9a:	11 97       	sbiw	r26, 0x01	; 1
     b9c:	2f 5f       	subi	r18, 0xFF	; 255
     b9e:	3f 4f       	sbci	r19, 0xFF	; 255
     ba0:	2d 93       	st	X+, r18
     ba2:	3c 93       	st	X, r19
     ba4:	fe 01       	movw	r30, r28
     ba6:	31 96       	adiw	r30, 0x01	; 1
     ba8:	be 01       	movw	r22, r28
     baa:	65 5f       	subi	r22, 0xF5	; 245
     bac:	7f 4f       	sbci	r23, 0xFF	; 255
     bae:	d8 01       	movw	r26, r16
     bb0:	2d 91       	ld	r18, X+
     bb2:	3c 91       	ld	r19, X
     bb4:	ac 01       	movw	r20, r24
     bb6:	42 0f       	add	r20, r18
     bb8:	53 1f       	adc	r21, r19
     bba:	da 01       	movw	r26, r20
     bbc:	4c 91       	ld	r20, X
     bbe:	41 93       	st	Z+, r20
     bc0:	2f 5f       	subi	r18, 0xFF	; 255
     bc2:	3f 4f       	sbci	r19, 0xFF	; 255
     bc4:	d8 01       	movw	r26, r16
     bc6:	2d 93       	st	X+, r18
     bc8:	3c 93       	st	X, r19
     bca:	e6 17       	cp	r30, r22
     bcc:	f7 07       	cpc	r31, r23
     bce:	79 f7       	brne	.-34     	; 0xbae <_Z7get_latPcPi+0x34>
     bd0:	9b 81       	ldd	r25, Y+3	; 0x03
     bd2:	8c 81       	ldd	r24, Y+4	; 0x04
     bd4:	2d 81       	ldd	r18, Y+5	; 0x05
     bd6:	2b 83       	std	Y+3, r18	; 0x03
     bd8:	9c 83       	std	Y+4, r25	; 0x04
     bda:	8d 83       	std	Y+5, r24	; 0x05
     bdc:	ce 01       	movw	r24, r28
     bde:	01 96       	adiw	r24, 0x01	; 1
     be0:	0e 94 10 12 	call	0x2420	; 0x2420 <atof>
     be4:	2a 96       	adiw	r28, 0x0a	; 10
     be6:	0f b6       	in	r0, 0x3f	; 63
     be8:	f8 94       	cli
     bea:	de bf       	out	0x3e, r29	; 62
     bec:	0f be       	out	0x3f, r0	; 63
     bee:	cd bf       	out	0x3d, r28	; 61
     bf0:	df 91       	pop	r29
     bf2:	cf 91       	pop	r28
     bf4:	1f 91       	pop	r17
     bf6:	0f 91       	pop	r16
     bf8:	08 95       	ret

00000bfa <_Z12get_lon_distPc>:
     bfa:	cf 93       	push	r28
     bfc:	df 93       	push	r29
     bfe:	cd b7       	in	r28, 0x3d	; 61
     c00:	de b7       	in	r29, 0x3e	; 62
     c02:	2b 97       	sbiw	r28, 0x0b	; 11
     c04:	0f b6       	in	r0, 0x3f	; 63
     c06:	f8 94       	cli
     c08:	de bf       	out	0x3e, r29	; 62
     c0a:	0f be       	out	0x3f, r0	; 63
     c0c:	cd bf       	out	0x3d, r28	; 61
     c0e:	fc 01       	movw	r30, r24
     c10:	80 8d       	ldd	r24, Z+24	; 0x18
     c12:	89 83       	std	Y+1, r24	; 0x01
     c14:	81 8d       	ldd	r24, Z+25	; 0x19
     c16:	8a 83       	std	Y+2, r24	; 0x02
     c18:	82 8d       	ldd	r24, Z+26	; 0x1a
     c1a:	8b 83       	std	Y+3, r24	; 0x03
     c1c:	83 8d       	ldd	r24, Z+27	; 0x1b
     c1e:	8c 83       	std	Y+4, r24	; 0x04
     c20:	84 8d       	ldd	r24, Z+28	; 0x1c
     c22:	8d 83       	std	Y+5, r24	; 0x05
     c24:	86 8d       	ldd	r24, Z+30	; 0x1e
     c26:	8e 83       	std	Y+6, r24	; 0x06
     c28:	87 8d       	ldd	r24, Z+31	; 0x1f
     c2a:	8f 83       	std	Y+7, r24	; 0x07
     c2c:	80 a1       	ldd	r24, Z+32	; 0x20
     c2e:	88 87       	std	Y+8, r24	; 0x08
     c30:	19 86       	std	Y+9, r1	; 0x09
     c32:	ce 01       	movw	r24, r28
     c34:	01 96       	adiw	r24, 0x01	; 1
     c36:	0e 94 10 12 	call	0x2420	; 0x2420 <atof>
     c3a:	2b 96       	adiw	r28, 0x0b	; 11
     c3c:	0f b6       	in	r0, 0x3f	; 63
     c3e:	f8 94       	cli
     c40:	de bf       	out	0x3e, r29	; 62
     c42:	0f be       	out	0x3f, r0	; 63
     c44:	cd bf       	out	0x3d, r28	; 61
     c46:	df 91       	pop	r29
     c48:	cf 91       	pop	r28
     c4a:	08 95       	ret

00000c4c <_Z11get_lon_degPc>:
     c4c:	cf 93       	push	r28
     c4e:	df 93       	push	r29
     c50:	cd b7       	in	r28, 0x3d	; 61
     c52:	de b7       	in	r29, 0x3e	; 62
     c54:	2b 97       	sbiw	r28, 0x0b	; 11
     c56:	0f b6       	in	r0, 0x3f	; 63
     c58:	f8 94       	cli
     c5a:	de bf       	out	0x3e, r29	; 62
     c5c:	0f be       	out	0x3f, r0	; 63
     c5e:	cd bf       	out	0x3d, r28	; 61
     c60:	fc 01       	movw	r30, r24
     c62:	81 8d       	ldd	r24, Z+25	; 0x19
     c64:	89 83       	std	Y+1, r24	; 0x01
     c66:	82 8d       	ldd	r24, Z+26	; 0x1a
     c68:	8a 83       	std	Y+2, r24	; 0x02
     c6a:	85 8d       	ldd	r24, Z+29	; 0x1d
     c6c:	8b 83       	std	Y+3, r24	; 0x03
     c6e:	83 8d       	ldd	r24, Z+27	; 0x1b
     c70:	8c 83       	std	Y+4, r24	; 0x04
     c72:	84 8d       	ldd	r24, Z+28	; 0x1c
     c74:	8d 83       	std	Y+5, r24	; 0x05
     c76:	86 8d       	ldd	r24, Z+30	; 0x1e
     c78:	8e 83       	std	Y+6, r24	; 0x06
     c7a:	87 8d       	ldd	r24, Z+31	; 0x1f
     c7c:	8f 83       	std	Y+7, r24	; 0x07
     c7e:	80 a1       	ldd	r24, Z+32	; 0x20
     c80:	88 87       	std	Y+8, r24	; 0x08
     c82:	19 86       	std	Y+9, r1	; 0x09
     c84:	ce 01       	movw	r24, r28
     c86:	01 96       	adiw	r24, 0x01	; 1
     c88:	0e 94 10 12 	call	0x2420	; 0x2420 <atof>
     c8c:	2b 96       	adiw	r28, 0x0b	; 11
     c8e:	0f b6       	in	r0, 0x3f	; 63
     c90:	f8 94       	cli
     c92:	de bf       	out	0x3e, r29	; 62
     c94:	0f be       	out	0x3f, r0	; 63
     c96:	cd bf       	out	0x3d, r28	; 61
     c98:	df 91       	pop	r29
     c9a:	cf 91       	pop	r28
     c9c:	08 95       	ret

00000c9e <_Z7get_lonPcPi>:
     c9e:	0f 93       	push	r16
     ca0:	1f 93       	push	r17
     ca2:	cf 93       	push	r28
     ca4:	df 93       	push	r29
     ca6:	cd b7       	in	r28, 0x3d	; 61
     ca8:	de b7       	in	r29, 0x3e	; 62
     caa:	2b 97       	sbiw	r28, 0x0b	; 11
     cac:	0f b6       	in	r0, 0x3f	; 63
     cae:	f8 94       	cli
     cb0:	de bf       	out	0x3e, r29	; 62
     cb2:	0f be       	out	0x3f, r0	; 63
     cb4:	cd bf       	out	0x3d, r28	; 61
     cb6:	8b 01       	movw	r16, r22
     cb8:	db 01       	movw	r26, r22
     cba:	2d 91       	ld	r18, X+
     cbc:	3c 91       	ld	r19, X
     cbe:	11 97       	sbiw	r26, 0x01	; 1
     cc0:	2d 5f       	subi	r18, 0xFD	; 253
     cc2:	3f 4f       	sbci	r19, 0xFF	; 255
     cc4:	2d 93       	st	X+, r18
     cc6:	3c 93       	st	X, r19
     cc8:	fe 01       	movw	r30, r28
     cca:	31 96       	adiw	r30, 0x01	; 1
     ccc:	be 01       	movw	r22, r28
     cce:	64 5f       	subi	r22, 0xF4	; 244
     cd0:	7f 4f       	sbci	r23, 0xFF	; 255
     cd2:	d8 01       	movw	r26, r16
     cd4:	2d 91       	ld	r18, X+
     cd6:	3c 91       	ld	r19, X
     cd8:	ac 01       	movw	r20, r24
     cda:	42 0f       	add	r20, r18
     cdc:	53 1f       	adc	r21, r19
     cde:	da 01       	movw	r26, r20
     ce0:	4c 91       	ld	r20, X
     ce2:	41 93       	st	Z+, r20
     ce4:	2f 5f       	subi	r18, 0xFF	; 255
     ce6:	3f 4f       	sbci	r19, 0xFF	; 255
     ce8:	d8 01       	movw	r26, r16
     cea:	2d 93       	st	X+, r18
     cec:	3c 93       	st	X, r19
     cee:	e6 17       	cp	r30, r22
     cf0:	f7 07       	cpc	r31, r23
     cf2:	79 f7       	brne	.-34     	; 0xcd2 <_Z7get_lonPcPi+0x34>
     cf4:	9c 81       	ldd	r25, Y+4	; 0x04
     cf6:	8d 81       	ldd	r24, Y+5	; 0x05
     cf8:	2e 81       	ldd	r18, Y+6	; 0x06
     cfa:	2c 83       	std	Y+4, r18	; 0x04
     cfc:	9d 83       	std	Y+5, r25	; 0x05
     cfe:	8e 83       	std	Y+6, r24	; 0x06
     d00:	ce 01       	movw	r24, r28
     d02:	01 96       	adiw	r24, 0x01	; 1
     d04:	0e 94 10 12 	call	0x2420	; 0x2420 <atof>
     d08:	2b 96       	adiw	r28, 0x0b	; 11
     d0a:	0f b6       	in	r0, 0x3f	; 63
     d0c:	f8 94       	cli
     d0e:	de bf       	out	0x3e, r29	; 62
     d10:	0f be       	out	0x3f, r0	; 63
     d12:	cd bf       	out	0x3d, r28	; 61
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	1f 91       	pop	r17
     d1a:	0f 91       	pop	r16
     d1c:	08 95       	ret

00000d1e <_Z7get_fixPcPi>:
     d1e:	cf 93       	push	r28
     d20:	df 93       	push	r29
     d22:	1f 92       	push	r1
     d24:	1f 92       	push	r1
     d26:	cd b7       	in	r28, 0x3d	; 61
     d28:	de b7       	in	r29, 0x3e	; 62
     d2a:	fb 01       	movw	r30, r22
     d2c:	20 81       	ld	r18, Z
     d2e:	31 81       	ldd	r19, Z+1	; 0x01
     d30:	a9 01       	movw	r20, r18
     d32:	4d 5f       	subi	r20, 0xFD	; 253
     d34:	5f 4f       	sbci	r21, 0xFF	; 255
     d36:	51 83       	std	Z+1, r21	; 0x01
     d38:	40 83       	st	Z, r20
     d3a:	dc 01       	movw	r26, r24
     d3c:	a4 0f       	add	r26, r20
     d3e:	b5 1f       	adc	r27, r21
     d40:	4c 91       	ld	r20, X
     d42:	49 83       	std	Y+1, r20	; 0x01
     d44:	a9 01       	movw	r20, r18
     d46:	4c 5f       	subi	r20, 0xFC	; 252
     d48:	5f 4f       	sbci	r21, 0xFF	; 255
     d4a:	51 83       	std	Z+1, r21	; 0x01
     d4c:	40 83       	st	Z, r20
     d4e:	dc 01       	movw	r26, r24
     d50:	a4 0f       	add	r26, r20
     d52:	b5 1f       	adc	r27, r21
     d54:	8c 91       	ld	r24, X
     d56:	8a 83       	std	Y+2, r24	; 0x02
     d58:	2b 5f       	subi	r18, 0xFB	; 251
     d5a:	3f 4f       	sbci	r19, 0xFF	; 255
     d5c:	31 83       	std	Z+1, r19	; 0x01
     d5e:	20 83       	st	Z, r18
     d60:	ce 01       	movw	r24, r28
     d62:	01 96       	adiw	r24, 0x01	; 1
     d64:	0e 94 13 12 	call	0x2426	; 0x2426 <atoi>
     d68:	0f 90       	pop	r0
     d6a:	0f 90       	pop	r0
     d6c:	df 91       	pop	r29
     d6e:	cf 91       	pop	r28
     d70:	08 95       	ret

00000d72 <_Z8get_satsPcPi>:
     d72:	0f 93       	push	r16
     d74:	1f 93       	push	r17
     d76:	cf 93       	push	r28
     d78:	df 93       	push	r29
     d7a:	00 d0       	rcall	.+0      	; 0xd7c <_Z8get_satsPcPi+0xa>
     d7c:	1f 92       	push	r1
     d7e:	cd b7       	in	r28, 0x3d	; 61
     d80:	de b7       	in	r29, 0x3e	; 62
     d82:	8b 01       	movw	r16, r22
     d84:	fe 01       	movw	r30, r28
     d86:	31 96       	adiw	r30, 0x01	; 1
     d88:	be 01       	movw	r22, r28
     d8a:	6b 5f       	subi	r22, 0xFB	; 251
     d8c:	7f 4f       	sbci	r23, 0xFF	; 255
     d8e:	d8 01       	movw	r26, r16
     d90:	2d 91       	ld	r18, X+
     d92:	3c 91       	ld	r19, X
     d94:	ac 01       	movw	r20, r24
     d96:	42 0f       	add	r20, r18
     d98:	53 1f       	adc	r21, r19
     d9a:	da 01       	movw	r26, r20
     d9c:	4c 91       	ld	r20, X
     d9e:	41 93       	st	Z+, r20
     da0:	2f 5f       	subi	r18, 0xFF	; 255
     da2:	3f 4f       	sbci	r19, 0xFF	; 255
     da4:	d8 01       	movw	r26, r16
     da6:	2d 93       	st	X+, r18
     da8:	3c 93       	st	X, r19
     daa:	e6 17       	cp	r30, r22
     dac:	f7 07       	cpc	r31, r23
     dae:	79 f7       	brne	.-34     	; 0xd8e <_Z8get_satsPcPi+0x1c>
     db0:	ce 01       	movw	r24, r28
     db2:	01 96       	adiw	r24, 0x01	; 1
     db4:	0e 94 10 12 	call	0x2420	; 0x2420 <atof>
     db8:	0e 94 65 0f 	call	0x1eca	; 0x1eca <__fixsfsi>
     dbc:	cb 01       	movw	r24, r22
     dbe:	0f 90       	pop	r0
     dc0:	0f 90       	pop	r0
     dc2:	0f 90       	pop	r0
     dc4:	0f 90       	pop	r0
     dc6:	df 91       	pop	r29
     dc8:	cf 91       	pop	r28
     dca:	1f 91       	pop	r17
     dcc:	0f 91       	pop	r16
     dce:	08 95       	ret

00000dd0 <_Z10gps_updatev>:
     dd0:	af 92       	push	r10
     dd2:	bf 92       	push	r11
     dd4:	cf 92       	push	r12
     dd6:	df 92       	push	r13
     dd8:	ef 92       	push	r14
     dda:	ff 92       	push	r15
     ddc:	0f 93       	push	r16
     dde:	1f 93       	push	r17
     de0:	cf 93       	push	r28
     de2:	df 93       	push	r29
     de4:	c1 2c       	mov	r12, r1
     de6:	0f 2e       	mov	r0, r31
     de8:	f3 e3       	ldi	r31, 0x33	; 51
     dea:	af 2e       	mov	r10, r31
     dec:	f5 e0       	ldi	r31, 0x05	; 5
     dee:	bf 2e       	mov	r11, r31
     df0:	f0 2d       	mov	r31, r0
     df2:	cd ee       	ldi	r28, 0xED	; 237
     df4:	d4 e0       	ldi	r29, 0x04	; 4
     df6:	dd 24       	eor	r13, r13
     df8:	d3 94       	inc	r13
     dfa:	0f 2e       	mov	r0, r31
     dfc:	f4 e3       	ldi	r31, 0x34	; 52
     dfe:	ef 2e       	mov	r14, r31
     e00:	f5 e0       	ldi	r31, 0x05	; 5
     e02:	ff 2e       	mov	r15, r31
     e04:	f0 2d       	mov	r31, r0
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	3c d3       	rcall	.+1656   	; 0x1484 <_Z13USART_receivei>
     e0c:	80 93 8a 05 	sts	0x058A, r24
     e10:	90 91 09 02 	lds	r25, 0x0209
     e14:	89 13       	cpse	r24, r25
     e16:	f4 c0       	rjmp	.+488    	; 0x1000 <_Z10gps_updatev+0x230>
     e18:	10 92 89 05 	sts	0x0589, r1
     e1c:	10 92 88 05 	sts	0x0588, r1
     e20:	00 e0       	ldi	r16, 0x00	; 0
     e22:	10 e0       	ldi	r17, 0x00	; 0
     e24:	81 e0       	ldi	r24, 0x01	; 1
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	2d d3       	rcall	.+1626   	; 0x1484 <_Z13USART_receivei>
     e2a:	f8 01       	movw	r30, r16
     e2c:	e7 58       	subi	r30, 0x87	; 135
     e2e:	fa 4f       	sbci	r31, 0xFA	; 250
     e30:	80 83       	st	Z, r24
     e32:	20 91 88 05 	lds	r18, 0x0588
     e36:	30 91 89 05 	lds	r19, 0x0589
     e3a:	2f 5f       	subi	r18, 0xFF	; 255
     e3c:	3f 4f       	sbci	r19, 0xFF	; 255
     e3e:	30 93 89 05 	sts	0x0589, r19
     e42:	20 93 88 05 	sts	0x0588, r18
     e46:	25 30       	cpi	r18, 0x05	; 5
     e48:	31 05       	cpc	r19, r1
     e4a:	14 f4       	brge	.+4      	; 0xe50 <_Z10gps_updatev+0x80>
     e4c:	89 01       	movw	r16, r18
     e4e:	ea cf       	rjmp	.-44     	; 0xe24 <_Z10gps_updatev+0x54>
     e50:	60 91 0c 02 	lds	r22, 0x020C
     e54:	70 91 0d 02 	lds	r23, 0x020D
     e58:	87 ee       	ldi	r24, 0xE7	; 231
     e5a:	92 e0       	ldi	r25, 0x02	; 2
     e5c:	0e 94 30 12 	call	0x2460	; 0x2460 <strcmp>
     e60:	90 93 85 05 	sts	0x0585, r25
     e64:	80 93 84 05 	sts	0x0584, r24
     e68:	89 2b       	or	r24, r25
     e6a:	69 f6       	brne	.-102    	; 0xe06 <_Z10gps_updatev+0x36>
     e6c:	10 92 89 05 	sts	0x0589, r1
     e70:	10 92 88 05 	sts	0x0588, r1
     e74:	00 e0       	ldi	r16, 0x00	; 0
     e76:	10 e0       	ldi	r17, 0x00	; 0
     e78:	81 e0       	ldi	r24, 0x01	; 1
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	03 d3       	rcall	.+1542   	; 0x1484 <_Z13USART_receivei>
     e7e:	f8 01       	movw	r30, r16
     e80:	ed 5c       	subi	r30, 0xCD	; 205
     e82:	fa 4f       	sbci	r31, 0xFA	; 250
     e84:	80 83       	st	Z, r24
     e86:	80 91 88 05 	lds	r24, 0x0588
     e8a:	90 91 89 05 	lds	r25, 0x0589
     e8e:	01 96       	adiw	r24, 0x01	; 1
     e90:	90 93 89 05 	sts	0x0589, r25
     e94:	80 93 88 05 	sts	0x0588, r24
     e98:	86 34       	cpi	r24, 0x46	; 70
     e9a:	91 05       	cpc	r25, r1
     e9c:	14 f4       	brge	.+4      	; 0xea2 <_Z10gps_updatev+0xd2>
     e9e:	8c 01       	movw	r16, r24
     ea0:	eb cf       	rjmp	.-42     	; 0xe78 <_Z10gps_updatev+0xa8>
     ea2:	8d ee       	ldi	r24, 0xED	; 237
     ea4:	92 e0       	ldi	r25, 0x02	; 2
     ea6:	89 dd       	rcall	.-1262   	; 0x9ba <_Z13debug_printlnPKc>
     ea8:	f5 01       	movw	r30, r10
     eaa:	20 81       	ld	r18, Z
     eac:	30 91 08 02 	lds	r19, 0x0208
     eb0:	23 17       	cp	r18, r19
     eb2:	59 f0       	breq	.+22     	; 0xeca <_Z10gps_updatev+0xfa>
     eb4:	fe 01       	movw	r30, r28
     eb6:	d7 01       	movw	r26, r14
     eb8:	21 93       	st	Z+, r18
     eba:	cf 01       	movw	r24, r30
     ebc:	8d 5e       	subi	r24, 0xED	; 237
     ebe:	94 40       	sbci	r25, 0x04	; 4
     ec0:	2d 91       	ld	r18, X+
     ec2:	23 13       	cpse	r18, r19
     ec4:	f9 cf       	rjmp	.-14     	; 0xeb8 <_Z10gps_updatev+0xe8>
     ec6:	fc 01       	movw	r30, r24
     ec8:	02 c0       	rjmp	.+4      	; 0xece <_Z10gps_updatev+0xfe>
     eca:	e0 e0       	ldi	r30, 0x00	; 0
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	e3 51       	subi	r30, 0x13	; 19
     ed0:	fb 4f       	sbci	r31, 0xFB	; 251
     ed2:	80 91 ec 04 	lds	r24, 0x04EC
     ed6:	80 83       	st	Z, r24
     ed8:	fe 01       	movw	r30, r28
     eda:	01 90       	ld	r0, Z+
     edc:	00 20       	and	r0, r0
     ede:	e9 f7       	brne	.-6      	; 0xeda <_Z10gps_updatev+0x10a>
     ee0:	31 97       	sbiw	r30, 0x01	; 1
     ee2:	ed 5e       	subi	r30, 0xED	; 237
     ee4:	f4 40       	sbci	r31, 0x04	; 4
     ee6:	f0 93 83 05 	sts	0x0583, r31
     eea:	e0 93 82 05 	sts	0x0582, r30
     eee:	10 92 89 05 	sts	0x0589, r1
     ef2:	10 92 88 05 	sts	0x0588, r1
     ef6:	81 e0       	ldi	r24, 0x01	; 1
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	90 93 87 05 	sts	0x0587, r25
     efe:	80 93 86 05 	sts	0x0586, r24
     f02:	60 91 0e 02 	lds	r22, 0x020E
     f06:	70 91 0f 02 	lds	r23, 0x020F
     f0a:	80 91 0a 02 	lds	r24, 0x020A
     f0e:	90 91 0b 02 	lds	r25, 0x020B
     f12:	b1 dd       	rcall	.-1182   	; 0xa76 <_Z8get_timePcPi>
     f14:	60 93 9f 05 	sts	0x059F, r22
     f18:	70 93 a0 05 	sts	0x05A0, r23
     f1c:	80 93 a1 05 	sts	0x05A1, r24
     f20:	90 93 a2 05 	sts	0x05A2, r25
     f24:	80 91 0a 02 	lds	r24, 0x020A
     f28:	90 91 0b 02 	lds	r25, 0x020B
     f2c:	d6 dd       	rcall	.-1108   	; 0xada <_Z12get_lat_distPc>
     f2e:	80 91 0a 02 	lds	r24, 0x020A
     f32:	90 91 0b 02 	lds	r25, 0x020B
     f36:	61 de       	rcall	.-830    	; 0xbfa <_Z12get_lon_distPc>
     f38:	80 91 0a 02 	lds	r24, 0x020A
     f3c:	90 91 0b 02 	lds	r25, 0x020B
     f40:	f3 dd       	rcall	.-1050   	; 0xb28 <_Z11get_lat_degPc>
     f42:	60 93 9b 05 	sts	0x059B, r22
     f46:	70 93 9c 05 	sts	0x059C, r23
     f4a:	80 93 9d 05 	sts	0x059D, r24
     f4e:	90 93 9e 05 	sts	0x059E, r25
     f52:	80 91 0a 02 	lds	r24, 0x020A
     f56:	90 91 0b 02 	lds	r25, 0x020B
     f5a:	78 de       	rcall	.-784    	; 0xc4c <_Z11get_lon_degPc>
     f5c:	60 93 97 05 	sts	0x0597, r22
     f60:	70 93 98 05 	sts	0x0598, r23
     f64:	80 93 99 05 	sts	0x0599, r24
     f68:	90 93 9a 05 	sts	0x059A, r25
     f6c:	60 91 0e 02 	lds	r22, 0x020E
     f70:	70 91 0f 02 	lds	r23, 0x020F
     f74:	80 91 0a 02 	lds	r24, 0x020A
     f78:	90 91 0b 02 	lds	r25, 0x020B
     f7c:	fe dd       	rcall	.-1028   	; 0xb7a <_Z7get_latPcPi>
     f7e:	60 93 93 05 	sts	0x0593, r22
     f82:	70 93 94 05 	sts	0x0594, r23
     f86:	80 93 95 05 	sts	0x0595, r24
     f8a:	90 93 96 05 	sts	0x0596, r25
     f8e:	60 91 0e 02 	lds	r22, 0x020E
     f92:	70 91 0f 02 	lds	r23, 0x020F
     f96:	80 91 0a 02 	lds	r24, 0x020A
     f9a:	90 91 0b 02 	lds	r25, 0x020B
     f9e:	7f de       	rcall	.-770    	; 0xc9e <_Z7get_lonPcPi>
     fa0:	60 93 8f 05 	sts	0x058F, r22
     fa4:	70 93 90 05 	sts	0x0590, r23
     fa8:	80 93 91 05 	sts	0x0591, r24
     fac:	90 93 92 05 	sts	0x0592, r25
     fb0:	60 91 0e 02 	lds	r22, 0x020E
     fb4:	70 91 0f 02 	lds	r23, 0x020F
     fb8:	80 91 0a 02 	lds	r24, 0x020A
     fbc:	90 91 0b 02 	lds	r25, 0x020B
     fc0:	ae de       	rcall	.-676    	; 0xd1e <_Z7get_fixPcPi>
     fc2:	90 93 81 05 	sts	0x0581, r25
     fc6:	80 93 80 05 	sts	0x0580, r24
     fca:	60 91 0e 02 	lds	r22, 0x020E
     fce:	70 91 0f 02 	lds	r23, 0x020F
     fd2:	80 91 0a 02 	lds	r24, 0x020A
     fd6:	90 91 0b 02 	lds	r25, 0x020B
     fda:	cb de       	rcall	.-618    	; 0xd72 <_Z8get_satsPcPi>
     fdc:	bc 01       	movw	r22, r24
     fde:	88 27       	eor	r24, r24
     fe0:	77 fd       	sbrc	r23, 7
     fe2:	80 95       	com	r24
     fe4:	98 2f       	mov	r25, r24
     fe6:	a4 d7       	rcall	.+3912   	; 0x1f30 <__floatsisf>
     fe8:	60 93 8b 05 	sts	0x058B, r22
     fec:	70 93 8c 05 	sts	0x058C, r23
     ff0:	80 93 8d 05 	sts	0x058D, r24
     ff4:	90 93 8e 05 	sts	0x058E, r25
     ff8:	81 e1       	ldi	r24, 0x11	; 17
     ffa:	93 e0       	ldi	r25, 0x03	; 3
     ffc:	de dc       	rcall	.-1604   	; 0x9ba <_Z13debug_printlnPKc>
     ffe:	cd 2c       	mov	r12, r13
    1000:	20 91 84 05 	lds	r18, 0x0584
    1004:	30 91 85 05 	lds	r19, 0x0585
    1008:	23 2b       	or	r18, r19
    100a:	09 f0       	breq	.+2      	; 0x100e <_Z10gps_updatev+0x23e>
    100c:	fc ce       	rjmp	.-520    	; 0xe06 <_Z10gps_updatev+0x36>
    100e:	8c 2d       	mov	r24, r12
    1010:	df 91       	pop	r29
    1012:	cf 91       	pop	r28
    1014:	1f 91       	pop	r17
    1016:	0f 91       	pop	r16
    1018:	ff 90       	pop	r15
    101a:	ef 90       	pop	r14
    101c:	df 90       	pop	r13
    101e:	cf 90       	pop	r12
    1020:	bf 90       	pop	r11
    1022:	af 90       	pop	r10
    1024:	08 95       	ret

00001026 <_Z8gps_initv>:
    1026:	60 e8       	ldi	r22, 0x80	; 128
    1028:	75 e2       	ldi	r23, 0x25	; 37
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	a7 d1       	rcall	.+846    	; 0x137e <_Z10USART_initii>
    1030:	83 e2       	ldi	r24, 0x23	; 35
    1032:	93 e0       	ldi	r25, 0x03	; 3
    1034:	c2 dc       	rcall	.-1660   	; 0x9ba <_Z13debug_printlnPKc>
    1036:	cc de       	rcall	.-616    	; 0xdd0 <_Z10gps_updatev>
    1038:	8f e2       	ldi	r24, 0x2F	; 47
    103a:	93 e0       	ldi	r25, 0x03	; 3
    103c:	b9 dc       	rcall	.-1678   	; 0x9b0 <_Z11debug_printPKc>
    103e:	60 91 8b 05 	lds	r22, 0x058B
    1042:	70 91 8c 05 	lds	r23, 0x058C
    1046:	80 91 8d 05 	lds	r24, 0x058D
    104a:	90 91 8e 05 	lds	r25, 0x058E
    104e:	3d d7       	rcall	.+3706   	; 0x1eca <__fixsfsi>
    1050:	cb 01       	movw	r24, r22
    1052:	bd dc       	rcall	.-1670   	; 0x9ce <_Z12debug_printii>
    1054:	8a e4       	ldi	r24, 0x4A	; 74
    1056:	93 e0       	ldi	r25, 0x03	; 3
    1058:	b0 dc       	rcall	.-1696   	; 0x9ba <_Z13debug_printlnPKc>
    105a:	81 e0       	ldi	r24, 0x01	; 1
    105c:	08 95       	ret

0000105e <_Z16gps_get_latitudev>:
///*debug_printf(altitude);debug_print(ptr_gps);*///USART_putstring(USART_PC,"\n\r");


//Getters for external functions
float gps_get_latitude(){
	return lat2_deg;
    105e:	60 91 9b 05 	lds	r22, 0x059B
    1062:	70 91 9c 05 	lds	r23, 0x059C
    1066:	80 91 9d 05 	lds	r24, 0x059D
    106a:	90 91 9e 05 	lds	r25, 0x059E
}
    106e:	08 95       	ret

00001070 <_Z17gps_get_longitudev>:

float gps_get_longitude()
{
	return lon2_deg;
    1070:	60 91 97 05 	lds	r22, 0x0597
    1074:	70 91 98 05 	lds	r23, 0x0598
    1078:	80 91 99 05 	lds	r24, 0x0599
    107c:	90 91 9a 05 	lds	r25, 0x059A
}
    1080:	08 95       	ret

00001082 <_Z12gps_get_satsv>:

int gps_get_sats()
{
	return sats;
    1082:	60 91 8b 05 	lds	r22, 0x058B
    1086:	70 91 8c 05 	lds	r23, 0x058C
    108a:	80 91 8d 05 	lds	r24, 0x058D
    108e:	90 91 8e 05 	lds	r25, 0x058E
    1092:	1b d7       	rcall	.+3638   	; 0x1eca <__fixsfsi>
    1094:	cb 01       	movw	r24, r22
    1096:	08 95       	ret

00001098 <_GLOBAL__sub_I_timeUTC>:

WayPoint wps[MAX_WAYPOINTS];

int numwps = 0;
int i = 0;
int j = i+1;
    1098:	80 91 88 05 	lds	r24, 0x0588
    109c:	90 91 89 05 	lds	r25, 0x0589
    10a0:	01 96       	adiw	r24, 0x01	; 1
    10a2:	90 93 87 05 	sts	0x0587, r25
    10a6:	80 93 86 05 	sts	0x0586, r24
    10aa:	08 95       	ret

000010ac <__vector_9>:

volatile uint8_t portHistory = 0x00;     // default is low

//Pin Change Interrupt for reading Channel Values
ISR(PCINT0_vect)
{
    10ac:	1f 92       	push	r1
    10ae:	0f 92       	push	r0
    10b0:	0f b6       	in	r0, 0x3f	; 63
    10b2:	0f 92       	push	r0
    10b4:	11 24       	eor	r1, r1
    10b6:	0b b6       	in	r0, 0x3b	; 59
    10b8:	0f 92       	push	r0
    10ba:	2f 93       	push	r18
    10bc:	3f 93       	push	r19
    10be:	4f 93       	push	r20
    10c0:	5f 93       	push	r21
    10c2:	6f 93       	push	r22
    10c4:	7f 93       	push	r23
    10c6:	8f 93       	push	r24
    10c8:	9f 93       	push	r25
    10ca:	af 93       	push	r26
    10cc:	bf 93       	push	r27
    10ce:	cf 93       	push	r28
    10d0:	ef 93       	push	r30
    10d2:	ff 93       	push	r31
	uint8_t changedBits;
	
	//determine which pin on RX_PORT changed:
	changedBits = RX_PORT ^ portHistory;
    10d4:	83 b1       	in	r24, 0x03	; 3
    10d6:	c0 91 a3 05 	lds	r28, 0x05A3
    10da:	c8 27       	eor	r28, r24
	portHistory = RX_PORT;
    10dc:	83 b1       	in	r24, 0x03	; 3
    10de:	80 93 a3 05 	sts	0x05A3, r24
	
	
	//Now, operate for that pin:
	
	if(changedBits & (1 << THROTTLE_IN_PIN))	//if the pin assigned to throttle has changed (high->low or low->high)
    10e2:	c0 ff       	sbrs	r28, 0
    10e4:	1c c0       	rjmp	.+56     	; 0x111e <__vector_9+0x72>
	{
		if(RX_PORT & (1<<THROTTLE_IN_PIN))	//if the pin is high
    10e6:	18 9b       	sbis	0x03, 0	; 3
    10e8:	0a c0       	rjmp	.+20     	; 0x10fe <__vector_9+0x52>
		{
			ulThrottleStart = micros();	//note the current time
    10ea:	1a d1       	rcall	.+564    	; 0x1320 <_Z6microsv>
    10ec:	60 93 b8 05 	sts	0x05B8, r22
    10f0:	70 93 b9 05 	sts	0x05B9, r23
    10f4:	80 93 ba 05 	sts	0x05BA, r24
    10f8:	90 93 bb 05 	sts	0x05BB, r25
    10fc:	10 c0       	rjmp	.+32     	; 0x111e <__vector_9+0x72>
		}
		else	//if the pin has gone low
		{
			unThrottleInShared = (uint16_t)(micros()-ulThrottleStart);		//we are interested in how long it was high for
    10fe:	10 d1       	rcall	.+544    	; 0x1320 <_Z6microsv>
    1100:	20 91 b8 05 	lds	r18, 0x05B8
    1104:	30 91 b9 05 	lds	r19, 0x05B9
    1108:	62 1b       	sub	r22, r18
    110a:	73 0b       	sbc	r23, r19
    110c:	70 93 c8 05 	sts	0x05C8, r23
    1110:	60 93 c7 05 	sts	0x05C7, r22
			rxUpdateFlagsShared |= THROTTLE_FLAG;		//and we need to let our code know that there is new data for the throttle
    1114:	80 91 bc 05 	lds	r24, 0x05BC
    1118:	81 60       	ori	r24, 0x01	; 1
    111a:	80 93 bc 05 	sts	0x05BC, r24
		}
	}
	
	if(changedBits & (1 << AILERON_IN_PIN))
    111e:	c1 ff       	sbrs	r28, 1
    1120:	1c c0       	rjmp	.+56     	; 0x115a <__vector_9+0xae>
	{
		if(RX_PORT & (1<<AILERON_IN_PIN))
    1122:	19 9b       	sbis	0x03, 1	; 3
    1124:	0a c0       	rjmp	.+20     	; 0x113a <__vector_9+0x8e>
		{
			ulAileronStart = micros();
    1126:	fc d0       	rcall	.+504    	; 0x1320 <_Z6microsv>
    1128:	60 93 b4 05 	sts	0x05B4, r22
    112c:	70 93 b5 05 	sts	0x05B5, r23
    1130:	80 93 b6 05 	sts	0x05B6, r24
    1134:	90 93 b7 05 	sts	0x05B7, r25
    1138:	10 c0       	rjmp	.+32     	; 0x115a <__vector_9+0xae>
		}
		else
		{
			unAileronInShared = (uint16_t)(micros()-ulAileronStart);
    113a:	f2 d0       	rcall	.+484    	; 0x1320 <_Z6microsv>
    113c:	20 91 b4 05 	lds	r18, 0x05B4
    1140:	30 91 b5 05 	lds	r19, 0x05B5
    1144:	62 1b       	sub	r22, r18
    1146:	73 0b       	sbc	r23, r19
    1148:	70 93 c6 05 	sts	0x05C6, r23
    114c:	60 93 c5 05 	sts	0x05C5, r22
			rxUpdateFlagsShared |= AILERON_FLAG;
    1150:	80 91 bc 05 	lds	r24, 0x05BC
    1154:	82 60       	ori	r24, 0x02	; 2
    1156:	80 93 bc 05 	sts	0x05BC, r24
		}
	}
	
	if(changedBits & (1 << ELEVATOR_IN_PIN))
    115a:	c2 ff       	sbrs	r28, 2
    115c:	1c c0       	rjmp	.+56     	; 0x1196 <__vector_9+0xea>
	{
		if(RX_PORT & (1<<ELEVATOR_IN_PIN))
    115e:	1a 9b       	sbis	0x03, 2	; 3
    1160:	0a c0       	rjmp	.+20     	; 0x1176 <__vector_9+0xca>
		{
			ulElevatorStart = micros();
    1162:	de d0       	rcall	.+444    	; 0x1320 <_Z6microsv>
    1164:	60 93 b0 05 	sts	0x05B0, r22
    1168:	70 93 b1 05 	sts	0x05B1, r23
    116c:	80 93 b2 05 	sts	0x05B2, r24
    1170:	90 93 b3 05 	sts	0x05B3, r25
    1174:	10 c0       	rjmp	.+32     	; 0x1196 <__vector_9+0xea>
		}
		else
		{
			unElevatorInShared = (uint16_t)(micros()-ulElevatorStart);
    1176:	d4 d0       	rcall	.+424    	; 0x1320 <_Z6microsv>
    1178:	20 91 b0 05 	lds	r18, 0x05B0
    117c:	30 91 b1 05 	lds	r19, 0x05B1
    1180:	62 1b       	sub	r22, r18
    1182:	73 0b       	sbc	r23, r19
    1184:	70 93 c4 05 	sts	0x05C4, r23
    1188:	60 93 c3 05 	sts	0x05C3, r22
			rxUpdateFlagsShared |= ELEVATOR_FLAG;
    118c:	80 91 bc 05 	lds	r24, 0x05BC
    1190:	84 60       	ori	r24, 0x04	; 4
    1192:	80 93 bc 05 	sts	0x05BC, r24
		}
	}
	
	if(changedBits & (1 << RUDDER_IN_PIN))
    1196:	c3 ff       	sbrs	r28, 3
    1198:	1c c0       	rjmp	.+56     	; 0x11d2 <__vector_9+0x126>
	{
		if(RX_PORT & (1<<RUDDER_IN_PIN))
    119a:	1b 9b       	sbis	0x03, 3	; 3
    119c:	0a c0       	rjmp	.+20     	; 0x11b2 <__vector_9+0x106>
		{
			ulRudderStart = micros();
    119e:	c0 d0       	rcall	.+384    	; 0x1320 <_Z6microsv>
    11a0:	60 93 ac 05 	sts	0x05AC, r22
    11a4:	70 93 ad 05 	sts	0x05AD, r23
    11a8:	80 93 ae 05 	sts	0x05AE, r24
    11ac:	90 93 af 05 	sts	0x05AF, r25
    11b0:	10 c0       	rjmp	.+32     	; 0x11d2 <__vector_9+0x126>
		}
		else
		{
			unRudderInShared = (uint16_t)(micros()-ulRudderStart);
    11b2:	b6 d0       	rcall	.+364    	; 0x1320 <_Z6microsv>
    11b4:	20 91 ac 05 	lds	r18, 0x05AC
    11b8:	30 91 ad 05 	lds	r19, 0x05AD
    11bc:	62 1b       	sub	r22, r18
    11be:	73 0b       	sbc	r23, r19
    11c0:	70 93 c2 05 	sts	0x05C2, r23
    11c4:	60 93 c1 05 	sts	0x05C1, r22
			rxUpdateFlagsShared |= RUDDER_FLAG;
    11c8:	80 91 bc 05 	lds	r24, 0x05BC
    11cc:	88 60       	ori	r24, 0x08	; 8
    11ce:	80 93 bc 05 	sts	0x05BC, r24
		}
	}
	
	if(changedBits & (1 << GEAR_IN_PIN))
    11d2:	c4 ff       	sbrs	r28, 4
    11d4:	1c c0       	rjmp	.+56     	; 0x120e <__vector_9+0x162>
	{
		if(RX_PORT & (1<<GEAR_IN_PIN))
    11d6:	1c 9b       	sbis	0x03, 4	; 3
    11d8:	0a c0       	rjmp	.+20     	; 0x11ee <__vector_9+0x142>
		{
			ulGearStart = micros();
    11da:	a2 d0       	rcall	.+324    	; 0x1320 <_Z6microsv>
    11dc:	60 93 a8 05 	sts	0x05A8, r22
    11e0:	70 93 a9 05 	sts	0x05A9, r23
    11e4:	80 93 aa 05 	sts	0x05AA, r24
    11e8:	90 93 ab 05 	sts	0x05AB, r25
    11ec:	10 c0       	rjmp	.+32     	; 0x120e <__vector_9+0x162>
		}
		else
		{
			unGearInShared = (uint16_t)(micros()-ulGearStart);
    11ee:	98 d0       	rcall	.+304    	; 0x1320 <_Z6microsv>
    11f0:	20 91 a8 05 	lds	r18, 0x05A8
    11f4:	30 91 a9 05 	lds	r19, 0x05A9
    11f8:	62 1b       	sub	r22, r18
    11fa:	73 0b       	sbc	r23, r19
    11fc:	70 93 c0 05 	sts	0x05C0, r23
    1200:	60 93 bf 05 	sts	0x05BF, r22
			rxUpdateFlagsShared |= GEAR_FLAG;
    1204:	80 91 bc 05 	lds	r24, 0x05BC
    1208:	80 61       	ori	r24, 0x10	; 16
    120a:	80 93 bc 05 	sts	0x05BC, r24
		}
	}
	
	if(changedBits & (1 << AUX_IN_PIN))
    120e:	c5 ff       	sbrs	r28, 5
    1210:	1c c0       	rjmp	.+56     	; 0x124a <__vector_9+0x19e>
	{
		if(RX_PORT & (1<<AUX_IN_PIN))
    1212:	1d 9b       	sbis	0x03, 5	; 3
    1214:	0a c0       	rjmp	.+20     	; 0x122a <__vector_9+0x17e>
		{
			ulAuxStart = micros();
    1216:	84 d0       	rcall	.+264    	; 0x1320 <_Z6microsv>
    1218:	60 93 a4 05 	sts	0x05A4, r22
    121c:	70 93 a5 05 	sts	0x05A5, r23
    1220:	80 93 a6 05 	sts	0x05A6, r24
    1224:	90 93 a7 05 	sts	0x05A7, r25
    1228:	10 c0       	rjmp	.+32     	; 0x124a <__vector_9+0x19e>
		}
		else
		{
			unAuxInShared = (uint16_t)(micros()-ulAuxStart);
    122a:	7a d0       	rcall	.+244    	; 0x1320 <_Z6microsv>
    122c:	20 91 a4 05 	lds	r18, 0x05A4
    1230:	30 91 a5 05 	lds	r19, 0x05A5
    1234:	62 1b       	sub	r22, r18
    1236:	73 0b       	sbc	r23, r19
    1238:	70 93 be 05 	sts	0x05BE, r23
    123c:	60 93 bd 05 	sts	0x05BD, r22
			rxUpdateFlagsShared |= AUX_FLAG;
    1240:	80 91 bc 05 	lds	r24, 0x05BC
    1244:	80 62       	ori	r24, 0x20	; 32
    1246:	80 93 bc 05 	sts	0x05BC, r24
		}
	}
}
    124a:	ff 91       	pop	r31
    124c:	ef 91       	pop	r30
    124e:	cf 91       	pop	r28
    1250:	bf 91       	pop	r27
    1252:	af 91       	pop	r26
    1254:	9f 91       	pop	r25
    1256:	8f 91       	pop	r24
    1258:	7f 91       	pop	r23
    125a:	6f 91       	pop	r22
    125c:	5f 91       	pop	r21
    125e:	4f 91       	pop	r20
    1260:	3f 91       	pop	r19
    1262:	2f 91       	pop	r18
    1264:	0f 90       	pop	r0
    1266:	0b be       	out	0x3b, r0	; 59
    1268:	0f 90       	pop	r0
    126a:	0f be       	out	0x3f, r0	; 63
    126c:	0f 90       	pop	r0
    126e:	1f 90       	pop	r1
    1270:	18 95       	reti

00001272 <__vector_23>:
long lastIRTime = 0;


//This timer is used for the millis() and micros() functions.
ISR(TIMER0_OVF_vect)
{
    1272:	1f 92       	push	r1
    1274:	0f 92       	push	r0
    1276:	0f b6       	in	r0, 0x3f	; 63
    1278:	0f 92       	push	r0
    127a:	11 24       	eor	r1, r1
    127c:	2f 93       	push	r18
    127e:	3f 93       	push	r19
    1280:	8f 93       	push	r24
    1282:	9f 93       	push	r25
    1284:	af 93       	push	r26
    1286:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
    1288:	80 91 ca 05 	lds	r24, 0x05CA
    128c:	90 91 cb 05 	lds	r25, 0x05CB
    1290:	a0 91 cc 05 	lds	r26, 0x05CC
    1294:	b0 91 cd 05 	lds	r27, 0x05CD
	unsigned char f = timer0_fract;
    1298:	30 91 c9 05 	lds	r19, 0x05C9

	m += MILLIS_INC;
	f += FRACT_INC;
    129c:	23 e0       	ldi	r18, 0x03	; 3
    129e:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    12a0:	2d 37       	cpi	r18, 0x7D	; 125
    12a2:	20 f4       	brcc	.+8      	; 0x12ac <__vector_23+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    12a4:	01 96       	adiw	r24, 0x01	; 1
    12a6:	a1 1d       	adc	r26, r1
    12a8:	b1 1d       	adc	r27, r1
    12aa:	05 c0       	rjmp	.+10     	; 0x12b6 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    12ac:	26 e8       	ldi	r18, 0x86	; 134
    12ae:	23 0f       	add	r18, r19
		m += 1;
    12b0:	02 96       	adiw	r24, 0x02	; 2
    12b2:	a1 1d       	adc	r26, r1
    12b4:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    12b6:	20 93 c9 05 	sts	0x05C9, r18
	timer0_millis = m;
    12ba:	80 93 ca 05 	sts	0x05CA, r24
    12be:	90 93 cb 05 	sts	0x05CB, r25
    12c2:	a0 93 cc 05 	sts	0x05CC, r26
    12c6:	b0 93 cd 05 	sts	0x05CD, r27
	timer0_overflow_count++;
    12ca:	80 91 ce 05 	lds	r24, 0x05CE
    12ce:	90 91 cf 05 	lds	r25, 0x05CF
    12d2:	a0 91 d0 05 	lds	r26, 0x05D0
    12d6:	b0 91 d1 05 	lds	r27, 0x05D1
    12da:	01 96       	adiw	r24, 0x01	; 1
    12dc:	a1 1d       	adc	r26, r1
    12de:	b1 1d       	adc	r27, r1
    12e0:	80 93 ce 05 	sts	0x05CE, r24
    12e4:	90 93 cf 05 	sts	0x05CF, r25
    12e8:	a0 93 d0 05 	sts	0x05D0, r26
    12ec:	b0 93 d1 05 	sts	0x05D1, r27
}
    12f0:	bf 91       	pop	r27
    12f2:	af 91       	pop	r26
    12f4:	9f 91       	pop	r25
    12f6:	8f 91       	pop	r24
    12f8:	3f 91       	pop	r19
    12fa:	2f 91       	pop	r18
    12fc:	0f 90       	pop	r0
    12fe:	0f be       	out	0x3f, r0	; 63
    1300:	0f 90       	pop	r0
    1302:	1f 90       	pop	r1
    1304:	18 95       	reti

00001306 <_Z6millisv>:

long  millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;
    1306:	2f b7       	in	r18, 0x3f	; 63

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	cli();
    1308:	f8 94       	cli
	m = timer0_millis;
    130a:	60 91 ca 05 	lds	r22, 0x05CA
    130e:	70 91 cb 05 	lds	r23, 0x05CB
    1312:	80 91 cc 05 	lds	r24, 0x05CC
    1316:	90 91 cd 05 	lds	r25, 0x05CD
	SREG = oldSREG;
    131a:	2f bf       	out	0x3f, r18	; 63
	sei();
    131c:	78 94       	sei

	return m;
}
    131e:	08 95       	ret

00001320 <_Z6microsv>:

long  micros() {

	unsigned long m;
	uint8_t oldSREG = SREG, t;
    1320:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
    1322:	f8 94       	cli
	m = timer0_overflow_count;
    1324:	80 91 ce 05 	lds	r24, 0x05CE
    1328:	90 91 cf 05 	lds	r25, 0x05CF
    132c:	a0 91 d0 05 	lds	r26, 0x05D0
    1330:	b0 91 d1 05 	lds	r27, 0x05D1
	t = TCNT0;
    1334:	26 b5       	in	r18, 0x26	; 38
  
#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
    1336:	a8 9b       	sbis	0x15, 0	; 21
    1338:	02 c0       	rjmp	.+4      	; 0x133e <_Z6microsv+0x1e>
    133a:	2f 3f       	cpi	r18, 0xFF	; 255
    133c:	a9 f4       	brne	.+42     	; 0x1368 <_Z6microsv+0x48>
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
    133e:	3f bf       	out	0x3f, r19	; 63
	
	sei();
    1340:	78 94       	sei
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
    1342:	ba 2f       	mov	r27, r26
    1344:	a9 2f       	mov	r26, r25
    1346:	98 2f       	mov	r25, r24
    1348:	88 27       	eor	r24, r24
    134a:	82 0f       	add	r24, r18
    134c:	91 1d       	adc	r25, r1
    134e:	a1 1d       	adc	r26, r1
    1350:	b1 1d       	adc	r27, r1
    1352:	bc 01       	movw	r22, r24
    1354:	cd 01       	movw	r24, r26
    1356:	66 0f       	add	r22, r22
    1358:	77 1f       	adc	r23, r23
    135a:	88 1f       	adc	r24, r24
    135c:	99 1f       	adc	r25, r25
    135e:	66 0f       	add	r22, r22
    1360:	77 1f       	adc	r23, r23
    1362:	88 1f       	adc	r24, r24
    1364:	99 1f       	adc	r25, r25
    1366:	08 95       	ret
	m = timer0_overflow_count;
	t = TCNT0;
  
#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
		m++;
    1368:	01 96       	adiw	r24, 0x01	; 1
    136a:	a1 1d       	adc	r26, r1
    136c:	b1 1d       	adc	r27, r1
    136e:	e7 cf       	rjmp	.-50     	; 0x133e <_Z6microsv+0x1e>

00001370 <_Z10initTimersv>:


void initTimers()
{
	// enable timer overflow interrupt for Timer0
	TIMSK0=(1<<TOIE0);
    1370:	81 e0       	ldi	r24, 0x01	; 1
    1372:	80 93 6e 00 	sts	0x006E, r24
	
	//set timer to zero
	TCNT0=0x00;
    1376:	16 bc       	out	0x26, r1	; 38

	// start timer0 with /1024 prescaler
	TCCR0B = (1<<CS01) | (1<<CS00);
    1378:	83 e0       	ldi	r24, 0x03	; 3
    137a:	85 bd       	out	0x25, r24	; 37
    137c:	08 95       	ret

0000137e <_Z10USART_initii>:
 */ 
#include "usart.h"


void USART_init(int usartNum, int baudRate)
{
    137e:	cf 93       	push	r28
    1380:	df 93       	push	r29
    1382:	ec 01       	movw	r28, r24
	int baudPrescaler = (((F_CPU / (baudRate * 16UL))) - 1);
    1384:	cb 01       	movw	r24, r22
    1386:	aa 27       	eor	r26, r26
    1388:	97 fd       	sbrc	r25, 7
    138a:	a0 95       	com	r26
    138c:	ba 2f       	mov	r27, r26
    138e:	88 0f       	add	r24, r24
    1390:	99 1f       	adc	r25, r25
    1392:	aa 1f       	adc	r26, r26
    1394:	bb 1f       	adc	r27, r27
    1396:	88 0f       	add	r24, r24
    1398:	99 1f       	adc	r25, r25
    139a:	aa 1f       	adc	r26, r26
    139c:	bb 1f       	adc	r27, r27
    139e:	9c 01       	movw	r18, r24
    13a0:	ad 01       	movw	r20, r26
    13a2:	22 0f       	add	r18, r18
    13a4:	33 1f       	adc	r19, r19
    13a6:	44 1f       	adc	r20, r20
    13a8:	55 1f       	adc	r21, r21
    13aa:	22 0f       	add	r18, r18
    13ac:	33 1f       	adc	r19, r19
    13ae:	44 1f       	adc	r20, r20
    13b0:	55 1f       	adc	r21, r21
    13b2:	60 e0       	ldi	r22, 0x00	; 0
    13b4:	74 e2       	ldi	r23, 0x24	; 36
    13b6:	84 ef       	ldi	r24, 0xF4	; 244
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	ec d7       	rcall	.+4056   	; 0x2394 <__udivmodsi4>
    13bc:	21 50       	subi	r18, 0x01	; 1
    13be:	31 09       	sbc	r19, r1
	
	if(usartNum == 0)
    13c0:	20 97       	sbiw	r28, 0x00	; 0
    13c2:	59 f4       	brne	.+22     	; 0x13da <_Z10USART_initii+0x5c>
	{
		UBRR0H = (uint8_t)(baudPrescaler>>8);
    13c4:	30 93 c5 00 	sts	0x00C5, r19
		UBRR0L = (uint8_t)(baudPrescaler);
    13c8:	20 93 c4 00 	sts	0x00C4, r18
		UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    13cc:	88 e1       	ldi	r24, 0x18	; 24
    13ce:	80 93 c1 00 	sts	0x00C1, r24
		UCSR0C = ((1<<UCSZ00)|(1<<UCSZ01));
    13d2:	86 e0       	ldi	r24, 0x06	; 6
    13d4:	80 93 c2 00 	sts	0x00C2, r24
    13d8:	28 c0       	rjmp	.+80     	; 0x142a <_Z10USART_initii+0xac>
	}
	else if(usartNum == 1)
    13da:	c1 30       	cpi	r28, 0x01	; 1
    13dc:	d1 05       	cpc	r29, r1
    13de:	59 f4       	brne	.+22     	; 0x13f6 <_Z10USART_initii+0x78>
	{
		UBRR1H = (uint8_t)(baudPrescaler>>8);
    13e0:	30 93 cd 00 	sts	0x00CD, r19
		UBRR1L = (uint8_t)(baudPrescaler);
    13e4:	20 93 cc 00 	sts	0x00CC, r18
		UCSR1B = (1<<RXEN1)|(1<<TXEN1);
    13e8:	88 e1       	ldi	r24, 0x18	; 24
    13ea:	80 93 c9 00 	sts	0x00C9, r24
		UCSR1C = ((1<<UCSZ10)|(1<<UCSZ11));
    13ee:	86 e0       	ldi	r24, 0x06	; 6
    13f0:	80 93 ca 00 	sts	0x00CA, r24
    13f4:	1a c0       	rjmp	.+52     	; 0x142a <_Z10USART_initii+0xac>
	}
	else if(usartNum == 2)
    13f6:	c2 30       	cpi	r28, 0x02	; 2
    13f8:	d1 05       	cpc	r29, r1
    13fa:	59 f4       	brne	.+22     	; 0x1412 <_Z10USART_initii+0x94>
	{
		UBRR2H = (uint8_t)(baudPrescaler>>8);
    13fc:	30 93 d5 00 	sts	0x00D5, r19
		UBRR2L = (uint8_t)(baudPrescaler);
    1400:	20 93 d4 00 	sts	0x00D4, r18
		UCSR2B = (1<<RXEN2)|(1<<TXEN2);
    1404:	88 e1       	ldi	r24, 0x18	; 24
    1406:	80 93 d1 00 	sts	0x00D1, r24
		UCSR2C = ((1<<UCSZ20)|(1<<UCSZ21));
    140a:	86 e0       	ldi	r24, 0x06	; 6
    140c:	80 93 d2 00 	sts	0x00D2, r24
    1410:	0c c0       	rjmp	.+24     	; 0x142a <_Z10USART_initii+0xac>
	}
	else if(usartNum == 3)
    1412:	23 97       	sbiw	r28, 0x03	; 3
    1414:	51 f4       	brne	.+20     	; 0x142a <_Z10USART_initii+0xac>
	{
		UBRR3H = (uint8_t)(baudPrescaler>>8);
    1416:	30 93 35 01 	sts	0x0135, r19
		UBRR3L = (uint8_t)(baudPrescaler);
    141a:	20 93 34 01 	sts	0x0134, r18
		UCSR3B = (1<<RXEN3)|(1<<TXEN3);
    141e:	88 e1       	ldi	r24, 0x18	; 24
    1420:	80 93 31 01 	sts	0x0131, r24
		UCSR3C = ((1<<UCSZ30)|(1<<UCSZ31));
    1424:	86 e0       	ldi	r24, 0x06	; 6
    1426:	80 93 32 01 	sts	0x0132, r24
	}
	
}
    142a:	df 91       	pop	r29
    142c:	cf 91       	pop	r28
    142e:	08 95       	ret

00001430 <_Z10USART_sendih>:

void USART_send(int usartNum, unsigned char data){
	
	if(usartNum == 0)
    1430:	00 97       	sbiw	r24, 0x00	; 0
    1432:	41 f4       	brne	.+16     	; 0x1444 <_Z10USART_sendih+0x14>
	{
		while(!(UCSR0A & (1<<UDRE0)));
    1434:	e0 ec       	ldi	r30, 0xC0	; 192
    1436:	f0 e0       	ldi	r31, 0x00	; 0
    1438:	80 81       	ld	r24, Z
    143a:	85 ff       	sbrs	r24, 5
    143c:	fd cf       	rjmp	.-6      	; 0x1438 <_Z10USART_sendih+0x8>
		UDR0 = data;
    143e:	60 93 c6 00 	sts	0x00C6, r22
    1442:	08 95       	ret
	}
	else if(usartNum == 1)
    1444:	81 30       	cpi	r24, 0x01	; 1
    1446:	91 05       	cpc	r25, r1
    1448:	41 f4       	brne	.+16     	; 0x145a <_Z10USART_sendih+0x2a>
	{
		while(!(UCSR1A & (1<<UDRE1)));
    144a:	e8 ec       	ldi	r30, 0xC8	; 200
    144c:	f0 e0       	ldi	r31, 0x00	; 0
    144e:	80 81       	ld	r24, Z
    1450:	85 ff       	sbrs	r24, 5
    1452:	fd cf       	rjmp	.-6      	; 0x144e <_Z10USART_sendih+0x1e>
		UDR1 = data;
    1454:	60 93 ce 00 	sts	0x00CE, r22
    1458:	08 95       	ret
	}
	else if(usartNum == 2)
    145a:	82 30       	cpi	r24, 0x02	; 2
    145c:	91 05       	cpc	r25, r1
    145e:	41 f4       	brne	.+16     	; 0x1470 <_Z10USART_sendih+0x40>
	{
		while(!(UCSR2A & (1<<UDRE2)));
    1460:	e0 ed       	ldi	r30, 0xD0	; 208
    1462:	f0 e0       	ldi	r31, 0x00	; 0
    1464:	80 81       	ld	r24, Z
    1466:	85 ff       	sbrs	r24, 5
    1468:	fd cf       	rjmp	.-6      	; 0x1464 <_Z10USART_sendih+0x34>
		UDR2 = data;
    146a:	60 93 d6 00 	sts	0x00D6, r22
    146e:	08 95       	ret
	}
	else if(usartNum == 3)
    1470:	03 97       	sbiw	r24, 0x03	; 3
    1472:	39 f4       	brne	.+14     	; 0x1482 <_Z10USART_sendih+0x52>
	{
		while(!(UCSR3A & (1<<UDRE3)));
    1474:	e0 e3       	ldi	r30, 0x30	; 48
    1476:	f1 e0       	ldi	r31, 0x01	; 1
    1478:	80 81       	ld	r24, Z
    147a:	85 ff       	sbrs	r24, 5
    147c:	fd cf       	rjmp	.-6      	; 0x1478 <_Z10USART_sendih+0x48>
		UDR3 = data;
    147e:	60 93 36 01 	sts	0x0136, r22
    1482:	08 95       	ret

00001484 <_Z13USART_receivei>:
	}
}

unsigned char USART_receive(int usartNum){
	if(usartNum == 0)
    1484:	00 97       	sbiw	r24, 0x00	; 0
    1486:	41 f4       	brne	.+16     	; 0x1498 <_Z13USART_receivei+0x14>
	{
		while(!(UCSR0A & (1<<RXC0)));
    1488:	e0 ec       	ldi	r30, 0xC0	; 192
    148a:	f0 e0       	ldi	r31, 0x00	; 0
    148c:	80 81       	ld	r24, Z
    148e:	88 23       	and	r24, r24
    1490:	ec f7       	brge	.-6      	; 0x148c <_Z13USART_receivei+0x8>
		return UDR0;
    1492:	80 91 c6 00 	lds	r24, 0x00C6
    1496:	08 95       	ret
	}
	else if(usartNum == 1)
    1498:	81 30       	cpi	r24, 0x01	; 1
    149a:	91 05       	cpc	r25, r1
    149c:	41 f4       	brne	.+16     	; 0x14ae <_Z13USART_receivei+0x2a>
	{
		while(!(UCSR1A & (1<<RXC1)));
    149e:	e8 ec       	ldi	r30, 0xC8	; 200
    14a0:	f0 e0       	ldi	r31, 0x00	; 0
    14a2:	80 81       	ld	r24, Z
    14a4:	88 23       	and	r24, r24
    14a6:	ec f7       	brge	.-6      	; 0x14a2 <_Z13USART_receivei+0x1e>
		return UDR1;
    14a8:	80 91 ce 00 	lds	r24, 0x00CE
    14ac:	08 95       	ret
	}
	else if(usartNum == 2)
    14ae:	02 97       	sbiw	r24, 0x02	; 2
    14b0:	41 f4       	brne	.+16     	; 0x14c2 <_Z13USART_receivei+0x3e>
	{
		while(!(UCSR2A & (1<<RXC2)));
    14b2:	e0 ed       	ldi	r30, 0xD0	; 208
    14b4:	f0 e0       	ldi	r31, 0x00	; 0
    14b6:	80 81       	ld	r24, Z
    14b8:	88 23       	and	r24, r24
    14ba:	ec f7       	brge	.-6      	; 0x14b6 <_Z13USART_receivei+0x32>
		return UDR2;
    14bc:	80 91 d6 00 	lds	r24, 0x00D6
    14c0:	08 95       	ret
	}
	else
	{
		while(!(UCSR3A & (1<<RXC3)));
    14c2:	e0 e3       	ldi	r30, 0x30	; 48
    14c4:	f1 e0       	ldi	r31, 0x01	; 1
    14c6:	80 81       	ld	r24, Z
    14c8:	88 23       	and	r24, r24
    14ca:	ec f7       	brge	.-6      	; 0x14c6 <_Z13USART_receivei+0x42>
		return UDR3;
    14cc:	80 91 36 01 	lds	r24, 0x0136
	}
	
}
    14d0:	08 95       	ret

000014d2 <_Z15USART_putstringiPKc>:

	//return the received string
	return(string);
}*/

void USART_putstring(int usartNum, const char* StringPtr){
    14d2:	0f 93       	push	r16
    14d4:	1f 93       	push	r17
    14d6:	cf 93       	push	r28
    14d8:	df 93       	push	r29
    14da:	8c 01       	movw	r16, r24
    14dc:	eb 01       	movw	r28, r22
	
	while(*StringPtr != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
    14de:	68 81       	ld	r22, Y
    14e0:	66 23       	and	r22, r22
    14e2:	31 f0       	breq	.+12     	; 0x14f0 <_Z15USART_putstringiPKc+0x1e>
    14e4:	21 96       	adiw	r28, 0x01	; 1
		USART_send(usartNum, *StringPtr);    //Using the simple send function we send one char at a time
    14e6:	c8 01       	movw	r24, r16
    14e8:	a3 df       	rcall	.-186    	; 0x1430 <_Z10USART_sendih>
	return(string);
}*/

void USART_putstring(int usartNum, const char* StringPtr){
	
	while(*StringPtr != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
    14ea:	69 91       	ld	r22, Y+
    14ec:	61 11       	cpse	r22, r1
    14ee:	fb cf       	rjmp	.-10     	; 0x14e6 <_Z15USART_putstringiPKc+0x14>
		USART_send(usartNum, *StringPtr);    //Using the simple send function we send one char at a time
	StringPtr++;}        //We increment the pointer so we can read the next char
	
}
    14f0:	df 91       	pop	r29
    14f2:	cf 91       	pop	r28
    14f4:	1f 91       	pop	r17
    14f6:	0f 91       	pop	r16
    14f8:	08 95       	ret

000014fa <_Z21waypoint_get_distanceffff>:
//getter for desired heading
float waypoint_get_heading()
{
	//waypoint_get_bearing(gps_get_latitude(),gps_get_longitude(),)
	return 999;
}
    14fa:	4f 92       	push	r4
    14fc:	5f 92       	push	r5
    14fe:	6f 92       	push	r6
    1500:	7f 92       	push	r7
    1502:	8f 92       	push	r8
    1504:	9f 92       	push	r9
    1506:	af 92       	push	r10
    1508:	bf 92       	push	r11
    150a:	cf 92       	push	r12
    150c:	df 92       	push	r13
    150e:	ef 92       	push	r14
    1510:	ff 92       	push	r15
    1512:	0f 93       	push	r16
    1514:	1f 93       	push	r17
    1516:	cf 93       	push	r28
    1518:	df 93       	push	r29
    151a:	cd b7       	in	r28, 0x3d	; 61
    151c:	de b7       	in	r29, 0x3e	; 62
    151e:	60 97       	sbiw	r28, 0x10	; 16
    1520:	0f b6       	in	r0, 0x3f	; 63
    1522:	f8 94       	cli
    1524:	de bf       	out	0x3e, r29	; 62
    1526:	0f be       	out	0x3f, r0	; 63
    1528:	cd bf       	out	0x3d, r28	; 61
    152a:	2b 01       	movw	r4, r22
    152c:	3c 01       	movw	r6, r24
    152e:	2d 87       	std	Y+13, r18	; 0x0d
    1530:	3e 87       	std	Y+14, r19	; 0x0e
    1532:	4f 87       	std	Y+15, r20	; 0x0f
    1534:	58 8b       	std	Y+16, r21	; 0x10
    1536:	ed 82       	std	Y+5, r14	; 0x05
    1538:	fe 82       	std	Y+6, r15	; 0x06
    153a:	0f 83       	std	Y+7, r16	; 0x07
    153c:	18 87       	std	Y+8, r17	; 0x08
    153e:	2b ed       	ldi	r18, 0xDB	; 219
    1540:	3f e0       	ldi	r19, 0x0F	; 15
    1542:	49 e4       	ldi	r20, 0x49	; 73
    1544:	50 e4       	ldi	r21, 0x40	; 64
    1546:	c8 01       	movw	r24, r16
    1548:	b7 01       	movw	r22, r14
    154a:	5e d6       	rcall	.+3260   	; 0x2208 <__mulsf3>
    154c:	20 e0       	ldi	r18, 0x00	; 0
    154e:	30 e0       	ldi	r19, 0x00	; 0
    1550:	44 e3       	ldi	r20, 0x34	; 52
    1552:	53 e4       	ldi	r21, 0x43	; 67
    1554:	52 d4       	rcall	.+2212   	; 0x1dfa <__divsf3>
    1556:	69 83       	std	Y+1, r22	; 0x01
    1558:	7a 83       	std	Y+2, r23	; 0x02
    155a:	8b 83       	std	Y+3, r24	; 0x03
    155c:	9c 83       	std	Y+4, r25	; 0x04
    155e:	2b ed       	ldi	r18, 0xDB	; 219
    1560:	3f e0       	ldi	r19, 0x0F	; 15
    1562:	49 e4       	ldi	r20, 0x49	; 73
    1564:	50 e4       	ldi	r21, 0x40	; 64
    1566:	c3 01       	movw	r24, r6
    1568:	b2 01       	movw	r22, r4
    156a:	4e d6       	rcall	.+3228   	; 0x2208 <__mulsf3>
    156c:	20 e0       	ldi	r18, 0x00	; 0
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	44 e3       	ldi	r20, 0x34	; 52
    1572:	53 e4       	ldi	r21, 0x43	; 67
    1574:	42 d4       	rcall	.+2180   	; 0x1dfa <__divsf3>
    1576:	9b 01       	movw	r18, r22
    1578:	ac 01       	movw	r20, r24
    157a:	69 81       	ldd	r22, Y+1	; 0x01
    157c:	7a 81       	ldd	r23, Y+2	; 0x02
    157e:	8b 81       	ldd	r24, Y+3	; 0x03
    1580:	9c 81       	ldd	r25, Y+4	; 0x04
    1582:	6d d3       	rcall	.+1754   	; 0x1c5e <__subsf3>
    1584:	20 e0       	ldi	r18, 0x00	; 0
    1586:	30 e0       	ldi	r19, 0x00	; 0
    1588:	40 e0       	ldi	r20, 0x00	; 0
    158a:	5f e3       	ldi	r21, 0x3F	; 63
    158c:	3d d6       	rcall	.+3194   	; 0x2208 <__mulsf3>
    158e:	9f d6       	rcall	.+3390   	; 0x22ce <sin>
    1590:	69 83       	std	Y+1, r22	; 0x01
    1592:	7a 83       	std	Y+2, r23	; 0x02
    1594:	8b 83       	std	Y+3, r24	; 0x03
    1596:	9c 83       	std	Y+4, r25	; 0x04
    1598:	c8 01       	movw	r24, r16
    159a:	b7 01       	movw	r22, r14
    159c:	2b d4       	rcall	.+2134   	; 0x1df4 <cos>
    159e:	6d 83       	std	Y+5, r22	; 0x05
    15a0:	7e 83       	std	Y+6, r23	; 0x06
    15a2:	8f 83       	std	Y+7, r24	; 0x07
    15a4:	98 87       	std	Y+8, r25	; 0x08
    15a6:	c3 01       	movw	r24, r6
    15a8:	b2 01       	movw	r22, r4
    15aa:	24 d4       	rcall	.+2120   	; 0x1df4 <cos>
    15ac:	69 87       	std	Y+9, r22	; 0x09
    15ae:	7a 87       	std	Y+10, r23	; 0x0a
    15b0:	8b 87       	std	Y+11, r24	; 0x0b
    15b2:	9c 87       	std	Y+12, r25	; 0x0c
    15b4:	2b ed       	ldi	r18, 0xDB	; 219
    15b6:	3f e0       	ldi	r19, 0x0F	; 15
    15b8:	49 e4       	ldi	r20, 0x49	; 73
    15ba:	50 e4       	ldi	r21, 0x40	; 64
    15bc:	c6 01       	movw	r24, r12
    15be:	b5 01       	movw	r22, r10
    15c0:	23 d6       	rcall	.+3142   	; 0x2208 <__mulsf3>
    15c2:	20 e0       	ldi	r18, 0x00	; 0
    15c4:	30 e0       	ldi	r19, 0x00	; 0
    15c6:	44 e3       	ldi	r20, 0x34	; 52
    15c8:	53 e4       	ldi	r21, 0x43	; 67
    15ca:	17 d4       	rcall	.+2094   	; 0x1dfa <__divsf3>
    15cc:	2b 01       	movw	r4, r22
    15ce:	3c 01       	movw	r6, r24
    15d0:	2b ed       	ldi	r18, 0xDB	; 219
    15d2:	3f e0       	ldi	r19, 0x0F	; 15
    15d4:	49 e4       	ldi	r20, 0x49	; 73
    15d6:	50 e4       	ldi	r21, 0x40	; 64
    15d8:	6d 85       	ldd	r22, Y+13	; 0x0d
    15da:	7e 85       	ldd	r23, Y+14	; 0x0e
    15dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    15de:	98 89       	ldd	r25, Y+16	; 0x10
    15e0:	13 d6       	rcall	.+3110   	; 0x2208 <__mulsf3>
    15e2:	20 e0       	ldi	r18, 0x00	; 0
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	44 e3       	ldi	r20, 0x34	; 52
    15e8:	53 e4       	ldi	r21, 0x43	; 67
    15ea:	07 d4       	rcall	.+2062   	; 0x1dfa <__divsf3>
    15ec:	9b 01       	movw	r18, r22
    15ee:	ac 01       	movw	r20, r24
    15f0:	c3 01       	movw	r24, r6
    15f2:	b2 01       	movw	r22, r4
    15f4:	34 d3       	rcall	.+1640   	; 0x1c5e <__subsf3>
    15f6:	20 e0       	ldi	r18, 0x00	; 0
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	40 e0       	ldi	r20, 0x00	; 0
    15fc:	5f e3       	ldi	r21, 0x3F	; 63
    15fe:	04 d6       	rcall	.+3080   	; 0x2208 <__mulsf3>
    1600:	66 d6       	rcall	.+3276   	; 0x22ce <sin>
    1602:	9b 01       	movw	r18, r22
    1604:	ac 01       	movw	r20, r24
    1606:	00 d6       	rcall	.+3072   	; 0x2208 <__mulsf3>
    1608:	2b 01       	movw	r4, r22
    160a:	3c 01       	movw	r6, r24
    160c:	29 85       	ldd	r18, Y+9	; 0x09
    160e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1610:	4b 85       	ldd	r20, Y+11	; 0x0b
    1612:	5c 85       	ldd	r21, Y+12	; 0x0c
    1614:	6d 81       	ldd	r22, Y+5	; 0x05
    1616:	7e 81       	ldd	r23, Y+6	; 0x06
    1618:	8f 81       	ldd	r24, Y+7	; 0x07
    161a:	98 85       	ldd	r25, Y+8	; 0x08
    161c:	f5 d5       	rcall	.+3050   	; 0x2208 <__mulsf3>
    161e:	9b 01       	movw	r18, r22
    1620:	ac 01       	movw	r20, r24
    1622:	c3 01       	movw	r24, r6
    1624:	b2 01       	movw	r22, r4
    1626:	f0 d5       	rcall	.+3040   	; 0x2208 <__mulsf3>
    1628:	4b 01       	movw	r8, r22
    162a:	5c 01       	movw	r10, r24
    162c:	29 81       	ldd	r18, Y+1	; 0x01
    162e:	3a 81       	ldd	r19, Y+2	; 0x02
    1630:	4b 81       	ldd	r20, Y+3	; 0x03
    1632:	5c 81       	ldd	r21, Y+4	; 0x04
    1634:	ca 01       	movw	r24, r20
    1636:	b9 01       	movw	r22, r18
    1638:	e7 d5       	rcall	.+3022   	; 0x2208 <__mulsf3>
    163a:	9b 01       	movw	r18, r22
    163c:	ac 01       	movw	r20, r24
    163e:	c5 01       	movw	r24, r10
    1640:	b4 01       	movw	r22, r8
    1642:	0e d3       	rcall	.+1564   	; 0x1c60 <__addsf3>
    1644:	6b 01       	movw	r12, r22
    1646:	7c 01       	movw	r14, r24
    1648:	9b 01       	movw	r18, r22
    164a:	ac 01       	movw	r20, r24
    164c:	60 e0       	ldi	r22, 0x00	; 0
    164e:	70 e0       	ldi	r23, 0x00	; 0
    1650:	80 e8       	ldi	r24, 0x80	; 128
    1652:	9f e3       	ldi	r25, 0x3F	; 63
    1654:	04 d3       	rcall	.+1544   	; 0x1c5e <__subsf3>
    1656:	45 d6       	rcall	.+3210   	; 0x22e2 <sqrt>
    1658:	4b 01       	movw	r8, r22
    165a:	5c 01       	movw	r10, r24
    165c:	c7 01       	movw	r24, r14
    165e:	b6 01       	movw	r22, r12
    1660:	40 d6       	rcall	.+3200   	; 0x22e2 <sqrt>
    1662:	a5 01       	movw	r20, r10
    1664:	94 01       	movw	r18, r8
    1666:	6f d3       	rcall	.+1758   	; 0x1d46 <atan2>
    1668:	9b 01       	movw	r18, r22
    166a:	ac 01       	movw	r20, r24
    166c:	f9 d2       	rcall	.+1522   	; 0x1c60 <__addsf3>
    166e:	20 e7       	ldi	r18, 0x70	; 112
    1670:	3d e6       	ldi	r19, 0x6D	; 109
    1672:	42 ec       	ldi	r20, 0xC2	; 194
    1674:	5a e4       	ldi	r21, 0x4A	; 74
    1676:	c8 d5       	rcall	.+2960   	; 0x2208 <__mulsf3>
    1678:	60 96       	adiw	r28, 0x10	; 16
    167a:	0f b6       	in	r0, 0x3f	; 63
    167c:	f8 94       	cli
    167e:	de bf       	out	0x3e, r29	; 62
    1680:	0f be       	out	0x3f, r0	; 63
    1682:	cd bf       	out	0x3d, r28	; 61
    1684:	df 91       	pop	r29
    1686:	cf 91       	pop	r28
    1688:	1f 91       	pop	r17
    168a:	0f 91       	pop	r16
    168c:	ff 90       	pop	r15
    168e:	ef 90       	pop	r14
    1690:	df 90       	pop	r13
    1692:	cf 90       	pop	r12
    1694:	bf 90       	pop	r11
    1696:	af 90       	pop	r10
    1698:	9f 90       	pop	r9
    169a:	8f 90       	pop	r8
    169c:	7f 90       	pop	r7
    169e:	6f 90       	pop	r6
    16a0:	5f 90       	pop	r5
    16a2:	4f 90       	pop	r4
    16a4:	08 95       	ret

000016a6 <_Z20waypoint_get_bearingffff>:
    16a6:	4f 92       	push	r4
    16a8:	5f 92       	push	r5
    16aa:	6f 92       	push	r6
    16ac:	7f 92       	push	r7
    16ae:	8f 92       	push	r8
    16b0:	9f 92       	push	r9
    16b2:	af 92       	push	r10
    16b4:	bf 92       	push	r11
    16b6:	cf 92       	push	r12
    16b8:	df 92       	push	r13
    16ba:	ef 92       	push	r14
    16bc:	ff 92       	push	r15
    16be:	0f 93       	push	r16
    16c0:	1f 93       	push	r17
    16c2:	cf 93       	push	r28
    16c4:	df 93       	push	r29
    16c6:	cd b7       	in	r28, 0x3d	; 61
    16c8:	de b7       	in	r29, 0x3e	; 62
    16ca:	64 97       	sbiw	r28, 0x14	; 20
    16cc:	0f b6       	in	r0, 0x3f	; 63
    16ce:	f8 94       	cli
    16d0:	de bf       	out	0x3e, r29	; 62
    16d2:	0f be       	out	0x3f, r0	; 63
    16d4:	cd bf       	out	0x3d, r28	; 61
    16d6:	69 83       	std	Y+1, r22	; 0x01
    16d8:	7a 83       	std	Y+2, r23	; 0x02
    16da:	8b 83       	std	Y+3, r24	; 0x03
    16dc:	9c 83       	std	Y+4, r25	; 0x04
    16de:	2d 83       	std	Y+5, r18	; 0x05
    16e0:	3e 83       	std	Y+6, r19	; 0x06
    16e2:	4f 83       	std	Y+7, r20	; 0x07
    16e4:	58 87       	std	Y+8, r21	; 0x08
    16e6:	86 d3       	rcall	.+1804   	; 0x1df4 <cos>
    16e8:	69 87       	std	Y+9, r22	; 0x09
    16ea:	7a 87       	std	Y+10, r23	; 0x0a
    16ec:	8b 87       	std	Y+11, r24	; 0x0b
    16ee:	9c 87       	std	Y+12, r25	; 0x0c
    16f0:	c8 01       	movw	r24, r16
    16f2:	b7 01       	movw	r22, r14
    16f4:	ec d5       	rcall	.+3032   	; 0x22ce <sin>
    16f6:	6d 87       	std	Y+13, r22	; 0x0d
    16f8:	7e 87       	std	Y+14, r23	; 0x0e
    16fa:	8f 87       	std	Y+15, r24	; 0x0f
    16fc:	98 8b       	std	Y+16, r25	; 0x10
    16fe:	69 81       	ldd	r22, Y+1	; 0x01
    1700:	7a 81       	ldd	r23, Y+2	; 0x02
    1702:	8b 81       	ldd	r24, Y+3	; 0x03
    1704:	9c 81       	ldd	r25, Y+4	; 0x04
    1706:	e3 d5       	rcall	.+3014   	; 0x22ce <sin>
    1708:	69 83       	std	Y+1, r22	; 0x01
    170a:	7a 83       	std	Y+2, r23	; 0x02
    170c:	8b 83       	std	Y+3, r24	; 0x03
    170e:	9c 83       	std	Y+4, r25	; 0x04
    1710:	c8 01       	movw	r24, r16
    1712:	b7 01       	movw	r22, r14
    1714:	6f d3       	rcall	.+1758   	; 0x1df4 <cos>
    1716:	2b 01       	movw	r4, r22
    1718:	3c 01       	movw	r6, r24
    171a:	2d 81       	ldd	r18, Y+5	; 0x05
    171c:	3e 81       	ldd	r19, Y+6	; 0x06
    171e:	4f 81       	ldd	r20, Y+7	; 0x07
    1720:	58 85       	ldd	r21, Y+8	; 0x08
    1722:	c6 01       	movw	r24, r12
    1724:	b5 01       	movw	r22, r10
    1726:	9b d2       	rcall	.+1334   	; 0x1c5e <__subsf3>
    1728:	4b 01       	movw	r8, r22
    172a:	5c 01       	movw	r10, r24
    172c:	63 d3       	rcall	.+1734   	; 0x1df4 <cos>
    172e:	6d 83       	std	Y+5, r22	; 0x05
    1730:	7e 83       	std	Y+6, r23	; 0x06
    1732:	8f 83       	std	Y+7, r24	; 0x07
    1734:	98 87       	std	Y+8, r25	; 0x08
    1736:	c5 01       	movw	r24, r10
    1738:	b4 01       	movw	r22, r8
    173a:	c9 d5       	rcall	.+2962   	; 0x22ce <sin>
    173c:	69 8b       	std	Y+17, r22	; 0x11
    173e:	7a 8b       	std	Y+18, r23	; 0x12
    1740:	8b 8b       	std	Y+19, r24	; 0x13
    1742:	9c 8b       	std	Y+20, r25	; 0x14
    1744:	2d 85       	ldd	r18, Y+13	; 0x0d
    1746:	3e 85       	ldd	r19, Y+14	; 0x0e
    1748:	4f 85       	ldd	r20, Y+15	; 0x0f
    174a:	58 89       	ldd	r21, Y+16	; 0x10
    174c:	69 85       	ldd	r22, Y+9	; 0x09
    174e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1750:	8b 85       	ldd	r24, Y+11	; 0x0b
    1752:	9c 85       	ldd	r25, Y+12	; 0x0c
    1754:	59 d5       	rcall	.+2738   	; 0x2208 <__mulsf3>
    1756:	4b 01       	movw	r8, r22
    1758:	5c 01       	movw	r10, r24
    175a:	a3 01       	movw	r20, r6
    175c:	92 01       	movw	r18, r4
    175e:	69 81       	ldd	r22, Y+1	; 0x01
    1760:	7a 81       	ldd	r23, Y+2	; 0x02
    1762:	8b 81       	ldd	r24, Y+3	; 0x03
    1764:	9c 81       	ldd	r25, Y+4	; 0x04
    1766:	50 d5       	rcall	.+2720   	; 0x2208 <__mulsf3>
    1768:	2d 81       	ldd	r18, Y+5	; 0x05
    176a:	3e 81       	ldd	r19, Y+6	; 0x06
    176c:	4f 81       	ldd	r20, Y+7	; 0x07
    176e:	58 85       	ldd	r21, Y+8	; 0x08
    1770:	4b d5       	rcall	.+2710   	; 0x2208 <__mulsf3>
    1772:	9b 01       	movw	r18, r22
    1774:	ac 01       	movw	r20, r24
    1776:	c5 01       	movw	r24, r10
    1778:	b4 01       	movw	r22, r8
    177a:	71 d2       	rcall	.+1250   	; 0x1c5e <__subsf3>
    177c:	4b 01       	movw	r8, r22
    177e:	5c 01       	movw	r10, r24
    1780:	29 89       	ldd	r18, Y+17	; 0x11
    1782:	3a 89       	ldd	r19, Y+18	; 0x12
    1784:	4b 89       	ldd	r20, Y+19	; 0x13
    1786:	5c 89       	ldd	r21, Y+20	; 0x14
    1788:	c3 01       	movw	r24, r6
    178a:	b2 01       	movw	r22, r4
    178c:	3d d5       	rcall	.+2682   	; 0x2208 <__mulsf3>
    178e:	a5 01       	movw	r20, r10
    1790:	94 01       	movw	r18, r8
    1792:	d9 d2       	rcall	.+1458   	; 0x1d46 <atan2>
    1794:	6b 01       	movw	r12, r22
    1796:	7c 01       	movw	r14, r24
    1798:	2b ed       	ldi	r18, 0xDB	; 219
    179a:	3f e0       	ldi	r19, 0x0F	; 15
    179c:	49 ec       	ldi	r20, 0xC9	; 201
    179e:	50 e4       	ldi	r21, 0x40	; 64
    17a0:	2c d3       	rcall	.+1624   	; 0x1dfa <__divsf3>
    17a2:	01 d4       	rcall	.+2050   	; 0x1fa6 <floor>
    17a4:	2b ed       	ldi	r18, 0xDB	; 219
    17a6:	3f e0       	ldi	r19, 0x0F	; 15
    17a8:	49 ec       	ldi	r20, 0xC9	; 201
    17aa:	50 e4       	ldi	r21, 0x40	; 64
    17ac:	2d d5       	rcall	.+2650   	; 0x2208 <__mulsf3>
    17ae:	9b 01       	movw	r18, r22
    17b0:	ac 01       	movw	r20, r24
    17b2:	c7 01       	movw	r24, r14
    17b4:	b6 01       	movw	r22, r12
    17b6:	53 d2       	rcall	.+1190   	; 0x1c5e <__subsf3>
    17b8:	20 e0       	ldi	r18, 0x00	; 0
    17ba:	30 e0       	ldi	r19, 0x00	; 0
    17bc:	44 e3       	ldi	r20, 0x34	; 52
    17be:	53 e4       	ldi	r21, 0x43	; 67
    17c0:	23 d5       	rcall	.+2630   	; 0x2208 <__mulsf3>
    17c2:	2b ed       	ldi	r18, 0xDB	; 219
    17c4:	3f e0       	ldi	r19, 0x0F	; 15
    17c6:	49 e4       	ldi	r20, 0x49	; 73
    17c8:	50 e4       	ldi	r21, 0x40	; 64
    17ca:	17 d3       	rcall	.+1582   	; 0x1dfa <__divsf3>
    17cc:	64 96       	adiw	r28, 0x14	; 20
    17ce:	0f b6       	in	r0, 0x3f	; 63
    17d0:	f8 94       	cli
    17d2:	de bf       	out	0x3e, r29	; 62
    17d4:	0f be       	out	0x3f, r0	; 63
    17d6:	cd bf       	out	0x3d, r28	; 61
    17d8:	df 91       	pop	r29
    17da:	cf 91       	pop	r28
    17dc:	1f 91       	pop	r17
    17de:	0f 91       	pop	r16
    17e0:	ff 90       	pop	r15
    17e2:	ef 90       	pop	r14
    17e4:	df 90       	pop	r13
    17e6:	cf 90       	pop	r12
    17e8:	bf 90       	pop	r11
    17ea:	af 90       	pop	r10
    17ec:	9f 90       	pop	r9
    17ee:	8f 90       	pop	r8
    17f0:	7f 90       	pop	r7
    17f2:	6f 90       	pop	r6
    17f4:	5f 90       	pop	r5
    17f6:	4f 90       	pop	r4
    17f8:	08 95       	ret

000017fa <_Z18chris_waypoint_addff>:
	
	chris_array_index=0;
	
}
void chris_waypoint_add(float lat, float lon)
{
    17fa:	cf 93       	push	r28
    17fc:	df 93       	push	r29
	c_lat_array[chris_array_index] = lat;
    17fe:	e0 91 52 06 	lds	r30, 0x0652
    1802:	f0 91 53 06 	lds	r31, 0x0653
    1806:	df 01       	movw	r26, r30
    1808:	aa 0f       	add	r26, r26
    180a:	bb 1f       	adc	r27, r27
    180c:	aa 0f       	add	r26, r26
    180e:	bb 1f       	adc	r27, r27
    1810:	ed 01       	movw	r28, r26
    1812:	ce 5e       	subi	r28, 0xEE	; 238
    1814:	d9 4f       	sbci	r29, 0xF9	; 249
    1816:	68 83       	st	Y, r22
    1818:	79 83       	std	Y+1, r23	; 0x01
    181a:	8a 83       	std	Y+2, r24	; 0x02
    181c:	9b 83       	std	Y+3, r25	; 0x03
	c_long_array[chris_array_index] = lon;
    181e:	ae 52       	subi	r26, 0x2E	; 46
    1820:	ba 4f       	sbci	r27, 0xFA	; 250
    1822:	2d 93       	st	X+, r18
    1824:	3d 93       	st	X+, r19
    1826:	4d 93       	st	X+, r20
    1828:	5c 93       	st	X, r21
    182a:	13 97       	sbiw	r26, 0x03	; 3
	chris_array_index++;
    182c:	31 96       	adiw	r30, 0x01	; 1
    182e:	f0 93 53 06 	sts	0x0653, r31
    1832:	e0 93 52 06 	sts	0x0652, r30
}
    1836:	df 91       	pop	r29
    1838:	cf 91       	pop	r28
    183a:	08 95       	ret

0000183c <_Z19chris_waypoint_initv>:
}


//Chris's last minute demo stuff
void chris_waypoint_init()
{
    183c:	4f 92       	push	r4
    183e:	5f 92       	push	r5
    1840:	6f 92       	push	r6
    1842:	7f 92       	push	r7
    1844:	8f 92       	push	r8
    1846:	9f 92       	push	r9
    1848:	af 92       	push	r10
    184a:	bf 92       	push	r11
    184c:	cf 92       	push	r12
    184e:	df 92       	push	r13
    1850:	ef 92       	push	r14
    1852:	ff 92       	push	r15
    1854:	0f 93       	push	r16
    1856:	1f 93       	push	r17
    1858:	cf 93       	push	r28
    185a:	df 93       	push	r29
    185c:	00 d0       	rcall	.+0      	; 0x185e <_Z19chris_waypoint_initv+0x22>
    185e:	1f 92       	push	r1
    1860:	cd b7       	in	r28, 0x3d	; 61
    1862:	de b7       	in	r29, 0x3e	; 62
	do 
	{
		gps_update();
    1864:	b5 da       	rcall	.-2710   	; 0xdd0 <_Z10gps_updatev>
	} while (gps_get_latitude()==0 || gps_get_longitude()==0);
    1866:	fb db       	rcall	.-2058   	; 0x105e <_Z16gps_get_latitudev>
    1868:	20 e0       	ldi	r18, 0x00	; 0
    186a:	30 e0       	ldi	r19, 0x00	; 0
    186c:	a9 01       	movw	r20, r18
    186e:	be d2       	rcall	.+1404   	; 0x1dec <__cmpsf2>
    1870:	88 23       	and	r24, r24
    1872:	c1 f3       	breq	.-16     	; 0x1864 <_Z19chris_waypoint_initv+0x28>
    1874:	fd db       	rcall	.-2054   	; 0x1070 <_Z17gps_get_longitudev>


//Chris's last minute demo stuff
void chris_waypoint_init()
{
	do 
    1876:	20 e0       	ldi	r18, 0x00	; 0
    1878:	30 e0       	ldi	r19, 0x00	; 0
    187a:	a9 01       	movw	r20, r18
    187c:	b7 d2       	rcall	.+1390   	; 0x1dec <__cmpsf2>
    187e:	88 23       	and	r24, r24
    1880:	89 f3       	breq	.-30     	; 0x1864 <_Z19chris_waypoint_initv+0x28>
	{
		gps_update();
	} while (gps_get_latitude()==0 || gps_get_longitude()==0);
	
	float center_lat = gps_get_latitude();
    1882:	ed db       	rcall	.-2086   	; 0x105e <_Z16gps_get_latitudev>
    1884:	2b 01       	movw	r4, r22
    1886:	3c 01       	movw	r6, r24
	float center_long = gps_get_longitude();
    1888:	f3 db       	rcall	.-2074   	; 0x1070 <_Z17gps_get_longitudev>
    188a:	69 83       	std	Y+1, r22	; 0x01
    188c:	7a 83       	std	Y+2, r23	; 0x02
    188e:	8b 83       	std	Y+3, r24	; 0x03
    1890:	9c 83       	std	Y+4, r25	; 0x04
	float circle_scale = 10000;	//100 = radius of ~1000m, 1000 = radius of ~100m, 4000 = radius of ~ 25m
	
	debug_print("Generating circle of waypoints around center latitude ");
    1892:	8a e4       	ldi	r24, 0x4A	; 74
    1894:	94 e0       	ldi	r25, 0x04	; 4
    1896:	8c d8       	rcall	.-3816   	; 0x9b0 <_Z11debug_printPKc>
	debug_printf(center_lat);
    1898:	c3 01       	movw	r24, r6
    189a:	b2 01       	movw	r22, r4
    189c:	b4 d8       	rcall	.-3736   	; 0xa06 <_Z12debug_printff>
	debug_print(", longitude ");
    189e:	81 e8       	ldi	r24, 0x81	; 129
    18a0:	94 e0       	ldi	r25, 0x04	; 4
    18a2:	86 d8       	rcall	.-3828   	; 0x9b0 <_Z11debug_printPKc>
	debug_printf(center_lat);
    18a4:	c3 01       	movw	r24, r6
    18a6:	b2 01       	movw	r22, r4
    18a8:	ae d8       	rcall	.-3748   	; 0xa06 <_Z12debug_printff>
	debug_println("...");
    18aa:	8d e0       	ldi	r24, 0x0D	; 13
    18ac:	93 e0       	ldi	r25, 0x03	; 3
    18ae:	85 d8       	rcall	.-3830   	; 0x9ba <_Z13debug_printlnPKc>
	for(int i = 0; i < NUM_WAYPOINTS; i++)
    18b0:	00 e0       	ldi	r16, 0x00	; 0
    18b2:	10 e0       	ldi	r17, 0x00	; 0
	{
		float temp_lat, temp_long;
		
		temp_lat = center_lat-cos((2*PI*i)/NUM_WAYPOINTS)/circle_scale;
    18b4:	b8 01       	movw	r22, r16
    18b6:	88 27       	eor	r24, r24
    18b8:	77 fd       	sbrc	r23, 7
    18ba:	80 95       	com	r24
    18bc:	98 2f       	mov	r25, r24
    18be:	38 d3       	rcall	.+1648   	; 0x1f30 <__floatsisf>
    18c0:	2b ed       	ldi	r18, 0xDB	; 219
    18c2:	3f e0       	ldi	r19, 0x0F	; 15
    18c4:	49 ec       	ldi	r20, 0xC9	; 201
    18c6:	50 e4       	ldi	r21, 0x40	; 64
    18c8:	9f d4       	rcall	.+2366   	; 0x2208 <__mulsf3>
    18ca:	20 e0       	ldi	r18, 0x00	; 0
    18cc:	30 e0       	ldi	r19, 0x00	; 0
    18ce:	40 e8       	ldi	r20, 0x80	; 128
    18d0:	5d e3       	ldi	r21, 0x3D	; 61
    18d2:	9a d4       	rcall	.+2356   	; 0x2208 <__mulsf3>
    18d4:	6b 01       	movw	r12, r22
    18d6:	7c 01       	movw	r14, r24
    18d8:	8d d2       	rcall	.+1306   	; 0x1df4 <cos>
    18da:	20 e0       	ldi	r18, 0x00	; 0
    18dc:	30 e4       	ldi	r19, 0x40	; 64
    18de:	4c e1       	ldi	r20, 0x1C	; 28
    18e0:	56 e4       	ldi	r21, 0x46	; 70
    18e2:	8b d2       	rcall	.+1302   	; 0x1dfa <__divsf3>
    18e4:	9b 01       	movw	r18, r22
    18e6:	ac 01       	movw	r20, r24
    18e8:	c3 01       	movw	r24, r6
    18ea:	b2 01       	movw	r22, r4
    18ec:	b8 d1       	rcall	.+880    	; 0x1c5e <__subsf3>
    18ee:	4b 01       	movw	r8, r22
    18f0:	5c 01       	movw	r10, r24
		temp_long = center_long+sin((2*PI*i)/NUM_WAYPOINTS)/circle_scale;
    18f2:	c7 01       	movw	r24, r14
    18f4:	b6 01       	movw	r22, r12
    18f6:	eb d4       	rcall	.+2518   	; 0x22ce <sin>
    18f8:	20 e0       	ldi	r18, 0x00	; 0
    18fa:	30 e4       	ldi	r19, 0x40	; 64
    18fc:	4c e1       	ldi	r20, 0x1C	; 28
    18fe:	56 e4       	ldi	r21, 0x46	; 70
    1900:	7c d2       	rcall	.+1272   	; 0x1dfa <__divsf3>
    1902:	29 81       	ldd	r18, Y+1	; 0x01
    1904:	3a 81       	ldd	r19, Y+2	; 0x02
    1906:	4b 81       	ldd	r20, Y+3	; 0x03
    1908:	5c 81       	ldd	r21, Y+4	; 0x04
    190a:	aa d1       	rcall	.+852    	; 0x1c60 <__addsf3>
    190c:	6b 01       	movw	r12, r22
    190e:	7c 01       	movw	r14, r24
		chris_waypoint_add(temp_lat,temp_long);
    1910:	9b 01       	movw	r18, r22
    1912:	ac 01       	movw	r20, r24
    1914:	c5 01       	movw	r24, r10
    1916:	b4 01       	movw	r22, r8
    1918:	70 df       	rcall	.-288    	; 0x17fa <_Z18chris_waypoint_addff>
		debug_printf(temp_lat);
    191a:	c5 01       	movw	r24, r10
    191c:	b4 01       	movw	r22, r8
    191e:	73 d8       	rcall	.-3866   	; 0xa06 <_Z12debug_printff>
		debug_print(", ");
    1920:	8e e8       	ldi	r24, 0x8E	; 142
    1922:	94 e0       	ldi	r25, 0x04	; 4
    1924:	45 d8       	rcall	.-3958   	; 0x9b0 <_Z11debug_printPKc>
		debug_printf(temp_long);
    1926:	c7 01       	movw	r24, r14
    1928:	b6 01       	movw	r22, r12
    192a:	6d d8       	rcall	.-3878   	; 0xa06 <_Z12debug_printff>
		debug_println("");
    192c:	86 ee       	ldi	r24, 0xE6	; 230
    192e:	92 e0       	ldi	r25, 0x02	; 2
    1930:	44 d8       	rcall	.-3960   	; 0x9ba <_Z13debug_printlnPKc>
	debug_print("Generating circle of waypoints around center latitude ");
	debug_printf(center_lat);
	debug_print(", longitude ");
	debug_printf(center_lat);
	debug_println("...");
	for(int i = 0; i < NUM_WAYPOINTS; i++)
    1932:	0f 5f       	subi	r16, 0xFF	; 255
    1934:	1f 4f       	sbci	r17, 0xFF	; 255
    1936:	00 31       	cpi	r16, 0x10	; 16
    1938:	11 05       	cpc	r17, r1
    193a:	09 f0       	breq	.+2      	; 0x193e <_Z19chris_waypoint_initv+0x102>
    193c:	bb cf       	rjmp	.-138    	; 0x18b4 <_Z19chris_waypoint_initv+0x78>
		debug_print(", ");
		debug_printf(temp_long);
		debug_println("");
	}
	
	chris_array_index=0;
    193e:	10 92 53 06 	sts	0x0653, r1
    1942:	10 92 52 06 	sts	0x0652, r1
	
}
    1946:	0f 90       	pop	r0
    1948:	0f 90       	pop	r0
    194a:	0f 90       	pop	r0
    194c:	0f 90       	pop	r0
    194e:	df 91       	pop	r29
    1950:	cf 91       	pop	r28
    1952:	1f 91       	pop	r17
    1954:	0f 91       	pop	r16
    1956:	ff 90       	pop	r15
    1958:	ef 90       	pop	r14
    195a:	df 90       	pop	r13
    195c:	cf 90       	pop	r12
    195e:	bf 90       	pop	r11
    1960:	af 90       	pop	r10
    1962:	9f 90       	pop	r9
    1964:	8f 90       	pop	r8
    1966:	7f 90       	pop	r7
    1968:	6f 90       	pop	r6
    196a:	5f 90       	pop	r5
    196c:	4f 90       	pop	r4
    196e:	08 95       	ret

00001970 <_Z30chris_waypoint_current_bearingv>:
		chris_set_waypoint_current_index(0);
}

//return the bearing to the next waypoint
float chris_waypoint_current_bearing()
{
    1970:	af 92       	push	r10
    1972:	bf 92       	push	r11
    1974:	cf 92       	push	r12
    1976:	df 92       	push	r13
    1978:	ef 92       	push	r14
    197a:	ff 92       	push	r15
    197c:	0f 93       	push	r16
    197e:	1f 93       	push	r17
	//return waypoint_get_bearing(gps_get_latitude(),gps_get_longitude(),c_lat_array[chris_array_index],c_long_array[chris_array_index]);
	return waypoint_get_bearing(c_lat_array[chris_array_index],c_long_array[chris_array_index],gps_get_latitude(),gps_get_longitude());
    1980:	77 db       	rcall	.-2322   	; 0x1070 <_Z17gps_get_longitudev>
    1982:	5b 01       	movw	r10, r22
    1984:	6c 01       	movw	r12, r24
    1986:	6b db       	rcall	.-2346   	; 0x105e <_Z16gps_get_latitudev>
    1988:	7b 01       	movw	r14, r22
    198a:	8c 01       	movw	r16, r24
    198c:	80 91 52 06 	lds	r24, 0x0652
    1990:	90 91 53 06 	lds	r25, 0x0653
    1994:	88 0f       	add	r24, r24
    1996:	99 1f       	adc	r25, r25
    1998:	88 0f       	add	r24, r24
    199a:	99 1f       	adc	r25, r25
    199c:	fc 01       	movw	r30, r24
    199e:	ee 52       	subi	r30, 0x2E	; 46
    19a0:	fa 4f       	sbci	r31, 0xFA	; 250
    19a2:	20 81       	ld	r18, Z
    19a4:	31 81       	ldd	r19, Z+1	; 0x01
    19a6:	42 81       	ldd	r20, Z+2	; 0x02
    19a8:	53 81       	ldd	r21, Z+3	; 0x03
    19aa:	fc 01       	movw	r30, r24
    19ac:	ee 5e       	subi	r30, 0xEE	; 238
    19ae:	f9 4f       	sbci	r31, 0xF9	; 249
    19b0:	60 81       	ld	r22, Z
    19b2:	71 81       	ldd	r23, Z+1	; 0x01
    19b4:	82 81       	ldd	r24, Z+2	; 0x02
    19b6:	93 81       	ldd	r25, Z+3	; 0x03
    19b8:	76 de       	rcall	.-788    	; 0x16a6 <_Z20waypoint_get_bearingffff>
}
    19ba:	1f 91       	pop	r17
    19bc:	0f 91       	pop	r16
    19be:	ff 90       	pop	r15
    19c0:	ef 90       	pop	r14
    19c2:	df 90       	pop	r13
    19c4:	cf 90       	pop	r12
    19c6:	bf 90       	pop	r11
    19c8:	af 90       	pop	r10
    19ca:	08 95       	ret

000019cc <_Z31chris_waypoint_current_distancev>:

//return the distance to the next waypoint
float chris_waypoint_current_distance()
{
    19cc:	4f 92       	push	r4
    19ce:	5f 92       	push	r5
    19d0:	6f 92       	push	r6
    19d2:	7f 92       	push	r7
    19d4:	af 92       	push	r10
    19d6:	bf 92       	push	r11
    19d8:	cf 92       	push	r12
    19da:	df 92       	push	r13
    19dc:	ef 92       	push	r14
    19de:	ff 92       	push	r15
    19e0:	0f 93       	push	r16
    19e2:	1f 93       	push	r17
    19e4:	cf 93       	push	r28
    19e6:	df 93       	push	r29
    19e8:	00 d0       	rcall	.+0      	; 0x19ea <_Z31chris_waypoint_current_distancev+0x1e>
    19ea:	1f 92       	push	r1
    19ec:	cd b7       	in	r28, 0x3d	; 61
    19ee:	de b7       	in	r29, 0x3e	; 62
	return waypoint_get_distance(gps_get_latitude(),gps_get_longitude(),c_lat_array[chris_array_index],c_long_array[chris_array_index]);
    19f0:	80 91 52 06 	lds	r24, 0x0652
    19f4:	90 91 53 06 	lds	r25, 0x0653
    19f8:	88 0f       	add	r24, r24
    19fa:	99 1f       	adc	r25, r25
    19fc:	88 0f       	add	r24, r24
    19fe:	99 1f       	adc	r25, r25
    1a00:	fc 01       	movw	r30, r24
    1a02:	ee 52       	subi	r30, 0x2E	; 46
    1a04:	fa 4f       	sbci	r31, 0xFA	; 250
    1a06:	a0 80       	ld	r10, Z
    1a08:	b1 80       	ldd	r11, Z+1	; 0x01
    1a0a:	c2 80       	ldd	r12, Z+2	; 0x02
    1a0c:	d3 80       	ldd	r13, Z+3	; 0x03
    1a0e:	fc 01       	movw	r30, r24
    1a10:	ee 5e       	subi	r30, 0xEE	; 238
    1a12:	f9 4f       	sbci	r31, 0xF9	; 249
    1a14:	40 80       	ld	r4, Z
    1a16:	51 80       	ldd	r5, Z+1	; 0x01
    1a18:	62 80       	ldd	r6, Z+2	; 0x02
    1a1a:	73 80       	ldd	r7, Z+3	; 0x03
    1a1c:	29 db       	rcall	.-2478   	; 0x1070 <_Z17gps_get_longitudev>
    1a1e:	69 83       	std	Y+1, r22	; 0x01
    1a20:	7a 83       	std	Y+2, r23	; 0x02
    1a22:	8b 83       	std	Y+3, r24	; 0x03
    1a24:	9c 83       	std	Y+4, r25	; 0x04
    1a26:	1b db       	rcall	.-2506   	; 0x105e <_Z16gps_get_latitudev>
    1a28:	83 01       	movw	r16, r6
    1a2a:	72 01       	movw	r14, r4
    1a2c:	29 81       	ldd	r18, Y+1	; 0x01
    1a2e:	3a 81       	ldd	r19, Y+2	; 0x02
    1a30:	4b 81       	ldd	r20, Y+3	; 0x03
    1a32:	5c 81       	ldd	r21, Y+4	; 0x04
    1a34:	62 dd       	rcall	.-1340   	; 0x14fa <_Z21waypoint_get_distanceffff>
}
    1a36:	0f 90       	pop	r0
    1a38:	0f 90       	pop	r0
    1a3a:	0f 90       	pop	r0
    1a3c:	0f 90       	pop	r0
    1a3e:	df 91       	pop	r29
    1a40:	cf 91       	pop	r28
    1a42:	1f 91       	pop	r17
    1a44:	0f 91       	pop	r16
    1a46:	ff 90       	pop	r15
    1a48:	ef 90       	pop	r14
    1a4a:	df 90       	pop	r13
    1a4c:	cf 90       	pop	r12
    1a4e:	bf 90       	pop	r11
    1a50:	af 90       	pop	r10
    1a52:	7f 90       	pop	r7
    1a54:	6f 90       	pop	r6
    1a56:	5f 90       	pop	r5
    1a58:	4f 90       	pop	r4
    1a5a:	08 95       	ret

00001a5c <_Z21chris_waypoint_updatev>:
}

//check if we're at the waypoint, if so, move on
void chris_waypoint_update()
{
	if(chris_waypoint_current_distance()<1)
    1a5c:	b7 df       	rcall	.-146    	; 0x19cc <_Z31chris_waypoint_current_distancev>
    1a5e:	20 e0       	ldi	r18, 0x00	; 0
    1a60:	30 e0       	ldi	r19, 0x00	; 0
    1a62:	40 e8       	ldi	r20, 0x80	; 128
    1a64:	5f e3       	ldi	r21, 0x3F	; 63
    1a66:	c2 d1       	rcall	.+900    	; 0x1dec <__cmpsf2>
    1a68:	88 23       	and	r24, r24
    1a6a:	4c f4       	brge	.+18     	; 0x1a7e <_Z21chris_waypoint_updatev+0x22>
		chris_array_index++;
    1a6c:	80 91 52 06 	lds	r24, 0x0652
    1a70:	90 91 53 06 	lds	r25, 0x0653
    1a74:	01 96       	adiw	r24, 0x01	; 1
    1a76:	90 93 53 06 	sts	0x0653, r25
    1a7a:	80 93 52 06 	sts	0x0652, r24
	
	if(chris_waypoint_current_index()>NUM_WAYPOINTS)
    1a7e:	80 91 52 06 	lds	r24, 0x0652
    1a82:	90 91 53 06 	lds	r25, 0x0653
    1a86:	41 97       	sbiw	r24, 0x11	; 17
    1a88:	24 f0       	brlt	.+8      	; 0x1a92 <_Z21chris_waypoint_updatev+0x36>
	return chris_array_index;
}

void chris_set_waypoint_current_index(int new_index)
{
	chris_array_index = new_index;
    1a8a:	10 92 53 06 	sts	0x0653, r1
    1a8e:	10 92 52 06 	sts	0x0652, r1
    1a92:	08 95       	ret

00001a94 <_Z28chris_waypoint_current_indexv>:
}

int chris_waypoint_current_index()
{
	return chris_array_index;
}
    1a94:	80 91 52 06 	lds	r24, 0x0652
    1a98:	90 91 53 06 	lds	r25, 0x0653
    1a9c:	08 95       	ret

00001a9e <_Z32chris_set_waypoint_current_indexi>:

void chris_set_waypoint_current_index(int new_index)
{
	chris_array_index = new_index;
    1a9e:	90 93 53 06 	sts	0x0653, r25
    1aa2:	80 93 52 06 	sts	0x0652, r24
    1aa6:	08 95       	ret

00001aa8 <_Z23chris_get_max_waypointsv>:
}

int chris_get_max_waypoints()
{
	return NUM_WAYPOINTS;
}
    1aa8:	80 e1       	ldi	r24, 0x10	; 16
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	08 95       	ret

00001aae <_Z13array_get_lati>:

float array_get_lat(int index)
{
	return c_lat_array[index];
    1aae:	88 0f       	add	r24, r24
    1ab0:	99 1f       	adc	r25, r25
    1ab2:	88 0f       	add	r24, r24
    1ab4:	99 1f       	adc	r25, r25
    1ab6:	fc 01       	movw	r30, r24
    1ab8:	ee 5e       	subi	r30, 0xEE	; 238
    1aba:	f9 4f       	sbci	r31, 0xF9	; 249
    1abc:	60 81       	ld	r22, Z
    1abe:	71 81       	ldd	r23, Z+1	; 0x01
    1ac0:	82 81       	ldd	r24, Z+2	; 0x02
    1ac2:	93 81       	ldd	r25, Z+3	; 0x03
}
    1ac4:	08 95       	ret

00001ac6 <_Z13array_get_loni>:

float array_get_lon(int index)
{
	return c_long_array[index];
    1ac6:	88 0f       	add	r24, r24
    1ac8:	99 1f       	adc	r25, r25
    1aca:	88 0f       	add	r24, r24
    1acc:	99 1f       	adc	r25, r25
    1ace:	fc 01       	movw	r30, r24
    1ad0:	ee 52       	subi	r30, 0x2E	; 46
    1ad2:	fa 4f       	sbci	r31, 0xFA	; 250
    1ad4:	60 81       	ld	r22, Z
    1ad6:	71 81       	ldd	r23, Z+1	; 0x01
    1ad8:	82 81       	ldd	r24, Z+2	; 0x02
    1ada:	93 81       	ldd	r25, Z+3	; 0x03
    1adc:	08 95       	ret

00001ade <_Z10initialisev>:
bool initialise()
{
	
	bool success = true;
	
	USART_init(USART_PC,9600);
    1ade:	60 e8       	ldi	r22, 0x80	; 128
    1ae0:	75 e2       	ldi	r23, 0x25	; 37
    1ae2:	80 e0       	ldi	r24, 0x00	; 0
    1ae4:	90 e0       	ldi	r25, 0x00	; 0
    1ae6:	4b dc       	rcall	.-1898   	; 0x137e <_Z10USART_initii>
	debug_println("Begininning Initialisation...");
    1ae8:	81 e9       	ldi	r24, 0x91	; 145
    1aea:	94 e0       	ldi	r25, 0x04	; 4
    1aec:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_Z13debug_printlnPKc>
	
	initTimers();
    1af0:	3f dc       	rcall	.-1922   	; 0x1370 <_Z10initTimersv>
	
	altimeter_init();
    1af2:	0e 94 d6 02 	call	0x5ac	; 0x5ac <_Z14altimeter_initv>
	
	init_HMC5883L();
    1af6:	0e 94 cf 04 	call	0x99e	; 0x99e <_Z13init_HMC5883Lv>
	
	
	gps_init();
    1afa:	95 da       	rcall	.-2774   	; 0x1026 <_Z8gps_initv>
    1afc:	2f ef       	ldi	r18, 0xFF	; 255
    1afe:	83 ed       	ldi	r24, 0xD3	; 211
    1b00:	90 e3       	ldi	r25, 0x30	; 48
    1b02:	21 50       	subi	r18, 0x01	; 1
    1b04:	80 40       	sbci	r24, 0x00	; 0
    1b06:	90 40       	sbci	r25, 0x00	; 0
    1b08:	e1 f7       	brne	.-8      	; 0x1b02 <_Z10initialisev+0x24>
    1b0a:	00 c0       	rjmp	.+0      	; 0x1b0c <_Z10initialisev+0x2e>
    1b0c:	00 00       	nop
	
	//Initialise a series of waypoints in a circle around the current coordinates..
	_delay_ms(1000);
	chris_waypoint_init();
    1b0e:	96 de       	rcall	.-724    	; 0x183c <_Z19chris_waypoint_initv>
	
	debug_println("Initialization succeeded!");
    1b10:	8f ea       	ldi	r24, 0xAF	; 175
    1b12:	94 e0       	ldi	r25, 0x04	; 4
    1b14:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_Z13debug_printlnPKc>
	
	//beep some pattern I can recognize
	debug_beep_long();
    1b18:	0e 94 2f 05 	call	0xa5e	; 0xa5e <_Z15debug_beep_longv>
    1b1c:	2f ef       	ldi	r18, 0xFF	; 255
    1b1e:	84 e3       	ldi	r24, 0x34	; 52
    1b20:	9c e0       	ldi	r25, 0x0C	; 12
    1b22:	21 50       	subi	r18, 0x01	; 1
    1b24:	80 40       	sbci	r24, 0x00	; 0
    1b26:	90 40       	sbci	r25, 0x00	; 0
    1b28:	e1 f7       	brne	.-8      	; 0x1b22 <_Z10initialisev+0x44>
    1b2a:	00 c0       	rjmp	.+0      	; 0x1b2c <_Z10initialisev+0x4e>
    1b2c:	00 00       	nop
	_delay_ms(250);
	debug_beep();
    1b2e:	0e 94 23 05 	call	0xa46	; 0xa46 <_Z10debug_beepv>
    1b32:	2f ef       	ldi	r18, 0xFF	; 255
    1b34:	84 e3       	ldi	r24, 0x34	; 52
    1b36:	9c e0       	ldi	r25, 0x0C	; 12
    1b38:	21 50       	subi	r18, 0x01	; 1
    1b3a:	80 40       	sbci	r24, 0x00	; 0
    1b3c:	90 40       	sbci	r25, 0x00	; 0
    1b3e:	e1 f7       	brne	.-8      	; 0x1b38 <_Z10initialisev+0x5a>
    1b40:	00 c0       	rjmp	.+0      	; 0x1b42 <_Z10initialisev+0x64>
    1b42:	00 00       	nop
	_delay_ms(250);
	debug_beep();
    1b44:	0e 94 23 05 	call	0xa46	; 0xa46 <_Z10debug_beepv>
    1b48:	2f ef       	ldi	r18, 0xFF	; 255
    1b4a:	84 e3       	ldi	r24, 0x34	; 52
    1b4c:	9c e0       	ldi	r25, 0x0C	; 12
    1b4e:	21 50       	subi	r18, 0x01	; 1
    1b50:	80 40       	sbci	r24, 0x00	; 0
    1b52:	90 40       	sbci	r25, 0x00	; 0
    1b54:	e1 f7       	brne	.-8      	; 0x1b4e <_Z10initialisev+0x70>
    1b56:	00 c0       	rjmp	.+0      	; 0x1b58 <_Z10initialisev+0x7a>
    1b58:	00 00       	nop
	_delay_ms(250);
	debug_beep();
    1b5a:	0e 94 23 05 	call	0xa46	; 0xa46 <_Z10debug_beepv>
    1b5e:	2f ef       	ldi	r18, 0xFF	; 255
    1b60:	84 e3       	ldi	r24, 0x34	; 52
    1b62:	9c e0       	ldi	r25, 0x0C	; 12
    1b64:	21 50       	subi	r18, 0x01	; 1
    1b66:	80 40       	sbci	r24, 0x00	; 0
    1b68:	90 40       	sbci	r25, 0x00	; 0
    1b6a:	e1 f7       	brne	.-8      	; 0x1b64 <_Z10initialisev+0x86>
    1b6c:	00 c0       	rjmp	.+0      	; 0x1b6e <_Z10initialisev+0x90>
    1b6e:	00 00       	nop
	_delay_ms(250);
	debug_beep_long();
    1b70:	0e 94 2f 05 	call	0xa5e	; 0xa5e <_Z15debug_beep_longv>
	
	return success;
}
    1b74:	81 e0       	ldi	r24, 0x01	; 1
    1b76:	08 95       	ret

00001b78 <main>:

bool initialise();

int main(void)
{
	initialise();
    1b78:	b2 df       	rcall	.-156    	; 0x1ade <_Z10initialisev>
	uint16_t last_changed = millis();
    1b7a:	c5 db       	rcall	.-2166   	; 0x1306 <_Z6millisv>
	
	while(1)
	{

		if(gps_update())
    1b7c:	29 d9       	rcall	.-3502   	; 0xdd0 <_Z10gps_updatev>
    1b7e:	88 23       	and	r24, r24
    1b80:	09 f4       	brne	.+2      	; 0x1b84 <main+0xc>
    1b82:	61 c0       	rjmp	.+194    	; 0x1c46 <main+0xce>
		{
			chris_waypoint_update();
    1b84:	6b df       	rcall	.-298    	; 0x1a5c <_Z21chris_waypoint_updatev>
			debug_print("H");
    1b86:	89 ec       	ldi	r24, 0xC9	; 201
    1b88:	94 e0       	ldi	r25, 0x04	; 4
    1b8a:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_print(",");
    1b8e:	8b ec       	ldi	r24, 0xCB	; 203
    1b90:	94 e0       	ldi	r25, 0x04	; 4
    1b92:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printf(gps_get_latitude());
    1b96:	63 da       	rcall	.-2874   	; 0x105e <_Z16gps_get_latitudev>
    1b98:	0e 94 03 05 	call	0xa06	; 0xa06 <_Z12debug_printff>
			debug_print(",");
    1b9c:	8b ec       	ldi	r24, 0xCB	; 203
    1b9e:	94 e0       	ldi	r25, 0x04	; 4
    1ba0:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printf(gps_get_longitude());
    1ba4:	65 da       	rcall	.-2870   	; 0x1070 <_Z17gps_get_longitudev>
    1ba6:	0e 94 03 05 	call	0xa06	; 0xa06 <_Z12debug_printff>
			debug_print(",");
    1baa:	8b ec       	ldi	r24, 0xCB	; 203
    1bac:	94 e0       	ldi	r25, 0x04	; 4
    1bae:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printi(gps_get_sats());
    1bb2:	67 da       	rcall	.-2866   	; 0x1082 <_Z12gps_get_satsv>
    1bb4:	0e 94 e7 04 	call	0x9ce	; 0x9ce <_Z12debug_printii>
			debug_print(",");
    1bb8:	8b ec       	ldi	r24, 0xCB	; 203
    1bba:	94 e0       	ldi	r25, 0x04	; 4
    1bbc:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printf(altimeter_get_metres());
    1bc0:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <_Z20altimeter_get_metresv>
    1bc4:	0e 94 03 05 	call	0xa06	; 0xa06 <_Z12debug_printff>
			debug_print(",");
    1bc8:	8b ec       	ldi	r24, 0xCB	; 203
    1bca:	94 e0       	ldi	r25, 0x04	; 4
    1bcc:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printf(chris_waypoint_current_bearing());	//target heading
    1bd0:	cf de       	rcall	.-610    	; 0x1970 <_Z30chris_waypoint_current_bearingv>
    1bd2:	0e 94 03 05 	call	0xa06	; 0xa06 <_Z12debug_printff>
			debug_print(",");
    1bd6:	8b ec       	ldi	r24, 0xCB	; 203
    1bd8:	94 e0       	ldi	r25, 0x04	; 4
    1bda:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			float current_heading = compass_get_heading();
    1bde:	0e 94 05 03 	call	0x60a	; 0x60a <_Z19compass_get_headingv>
    1be2:	6b 01       	movw	r12, r22
    1be4:	7c 01       	movw	r14, r24
			debug_printf(current_heading);
    1be6:	0e 94 03 05 	call	0xa06	; 0xa06 <_Z12debug_printff>
			debug_print(",");
    1bea:	8b ec       	ldi	r24, 0xCB	; 203
    1bec:	94 e0       	ldi	r25, 0x04	; 4
    1bee:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printf(current_heading-chris_waypoint_current_bearing());
    1bf2:	be de       	rcall	.-644    	; 0x1970 <_Z30chris_waypoint_current_bearingv>
    1bf4:	9b 01       	movw	r18, r22
    1bf6:	ac 01       	movw	r20, r24
    1bf8:	c7 01       	movw	r24, r14
    1bfa:	b6 01       	movw	r22, r12
    1bfc:	30 d0       	rcall	.+96     	; 0x1c5e <__subsf3>
    1bfe:	0e 94 03 05 	call	0xa06	; 0xa06 <_Z12debug_printff>
			debug_print(",");
    1c02:	8b ec       	ldi	r24, 0xCB	; 203
    1c04:	94 e0       	ldi	r25, 0x04	; 4
    1c06:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printi(chris_waypoint_current_index());
    1c0a:	44 df       	rcall	.-376    	; 0x1a94 <_Z28chris_waypoint_current_indexv>
    1c0c:	0e 94 e7 04 	call	0x9ce	; 0x9ce <_Z12debug_printii>
			debug_print(",");
    1c10:	8b ec       	ldi	r24, 0xCB	; 203
    1c12:	94 e0       	ldi	r25, 0x04	; 4
    1c14:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printf(chris_waypoint_current_distance());
    1c18:	d9 de       	rcall	.-590    	; 0x19cc <_Z31chris_waypoint_current_distancev>
    1c1a:	0e 94 03 05 	call	0xa06	; 0xa06 <_Z12debug_printff>
			debug_print(",");
    1c1e:	8b ec       	ldi	r24, 0xCB	; 203
    1c20:	94 e0       	ldi	r25, 0x04	; 4
    1c22:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printf(array_get_lat(chris_waypoint_current_index()));
    1c26:	36 df       	rcall	.-404    	; 0x1a94 <_Z28chris_waypoint_current_indexv>
    1c28:	42 df       	rcall	.-380    	; 0x1aae <_Z13array_get_lati>
    1c2a:	0e 94 03 05 	call	0xa06	; 0xa06 <_Z12debug_printff>
			debug_print(",");
    1c2e:	8b ec       	ldi	r24, 0xCB	; 203
    1c30:	94 e0       	ldi	r25, 0x04	; 4
    1c32:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <_Z11debug_printPKc>
			debug_printf(array_get_lon(chris_waypoint_current_index()));
    1c36:	2e df       	rcall	.-420    	; 0x1a94 <_Z28chris_waypoint_current_indexv>
    1c38:	46 df       	rcall	.-372    	; 0x1ac6 <_Z13array_get_loni>
    1c3a:	0e 94 03 05 	call	0xa06	; 0xa06 <_Z12debug_printff>
			debug_println(",");
    1c3e:	8b ec       	ldi	r24, 0xCB	; 203
    1c40:	94 e0       	ldi	r25, 0x04	; 4
    1c42:	0e 94 dd 04 	call	0x9ba	; 0x9ba <_Z13debug_printlnPKc>
		}
		
		//automatic testing, every 3 seconds change to the next waypoint
		if(millis()-last_changed>3000 && 1==2)
    1c46:	5f db       	rcall	.-2370   	; 0x1306 <_Z6millisv>
		{
			chris_set_waypoint_current_index(chris_waypoint_current_index()+1);
			last_changed=millis();
		}
		
		if(chris_waypoint_current_index()>chris_get_max_waypoints())
    1c48:	25 df       	rcall	.-438    	; 0x1a94 <_Z28chris_waypoint_current_indexv>
    1c4a:	7c 01       	movw	r14, r24
    1c4c:	2d df       	rcall	.-422    	; 0x1aa8 <_Z23chris_get_max_waypointsv>
    1c4e:	8e 15       	cp	r24, r14
    1c50:	9f 05       	cpc	r25, r15
    1c52:	0c f0       	brlt	.+2      	; 0x1c56 <main+0xde>
    1c54:	93 cf       	rjmp	.-218    	; 0x1b7c <main+0x4>
		chris_set_waypoint_current_index(0);
    1c56:	80 e0       	ldi	r24, 0x00	; 0
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	21 df       	rcall	.-446    	; 0x1a9e <_Z32chris_set_waypoint_current_indexi>
    1c5c:	8f cf       	rjmp	.-226    	; 0x1b7c <main+0x4>

00001c5e <__subsf3>:
    1c5e:	50 58       	subi	r21, 0x80	; 128

00001c60 <__addsf3>:
    1c60:	bb 27       	eor	r27, r27
    1c62:	aa 27       	eor	r26, r26
    1c64:	0e d0       	rcall	.+28     	; 0x1c82 <__addsf3x>
    1c66:	63 c2       	rjmp	.+1222   	; 0x212e <__fp_round>
    1c68:	2c d2       	rcall	.+1112   	; 0x20c2 <__fp_pscA>
    1c6a:	30 f0       	brcs	.+12     	; 0x1c78 <__addsf3+0x18>
    1c6c:	31 d2       	rcall	.+1122   	; 0x20d0 <__fp_pscB>
    1c6e:	20 f0       	brcs	.+8      	; 0x1c78 <__addsf3+0x18>
    1c70:	31 f4       	brne	.+12     	; 0x1c7e <__addsf3+0x1e>
    1c72:	9f 3f       	cpi	r25, 0xFF	; 255
    1c74:	11 f4       	brne	.+4      	; 0x1c7a <__addsf3+0x1a>
    1c76:	1e f4       	brtc	.+6      	; 0x1c7e <__addsf3+0x1e>
    1c78:	fc c1       	rjmp	.+1016   	; 0x2072 <__fp_nan>
    1c7a:	0e f4       	brtc	.+2      	; 0x1c7e <__addsf3+0x1e>
    1c7c:	e0 95       	com	r30
    1c7e:	e7 fb       	bst	r30, 7
    1c80:	c9 c1       	rjmp	.+914    	; 0x2014 <__fp_inf>

00001c82 <__addsf3x>:
    1c82:	e9 2f       	mov	r30, r25
    1c84:	76 d2       	rcall	.+1260   	; 0x2172 <__fp_split3>
    1c86:	80 f3       	brcs	.-32     	; 0x1c68 <__addsf3+0x8>
    1c88:	ba 17       	cp	r27, r26
    1c8a:	62 07       	cpc	r22, r18
    1c8c:	73 07       	cpc	r23, r19
    1c8e:	84 07       	cpc	r24, r20
    1c90:	95 07       	cpc	r25, r21
    1c92:	18 f0       	brcs	.+6      	; 0x1c9a <__addsf3x+0x18>
    1c94:	71 f4       	brne	.+28     	; 0x1cb2 <__addsf3x+0x30>
    1c96:	9e f5       	brtc	.+102    	; 0x1cfe <__addsf3x+0x7c>
    1c98:	a5 c2       	rjmp	.+1354   	; 0x21e4 <__fp_zero>
    1c9a:	0e f4       	brtc	.+2      	; 0x1c9e <__addsf3x+0x1c>
    1c9c:	e0 95       	com	r30
    1c9e:	0b 2e       	mov	r0, r27
    1ca0:	ba 2f       	mov	r27, r26
    1ca2:	a0 2d       	mov	r26, r0
    1ca4:	0b 01       	movw	r0, r22
    1ca6:	b9 01       	movw	r22, r18
    1ca8:	90 01       	movw	r18, r0
    1caa:	0c 01       	movw	r0, r24
    1cac:	ca 01       	movw	r24, r20
    1cae:	a0 01       	movw	r20, r0
    1cb0:	11 24       	eor	r1, r1
    1cb2:	ff 27       	eor	r31, r31
    1cb4:	59 1b       	sub	r21, r25
    1cb6:	99 f0       	breq	.+38     	; 0x1cde <__addsf3x+0x5c>
    1cb8:	59 3f       	cpi	r21, 0xF9	; 249
    1cba:	50 f4       	brcc	.+20     	; 0x1cd0 <__addsf3x+0x4e>
    1cbc:	50 3e       	cpi	r21, 0xE0	; 224
    1cbe:	68 f1       	brcs	.+90     	; 0x1d1a <__addsf3x+0x98>
    1cc0:	1a 16       	cp	r1, r26
    1cc2:	f0 40       	sbci	r31, 0x00	; 0
    1cc4:	a2 2f       	mov	r26, r18
    1cc6:	23 2f       	mov	r18, r19
    1cc8:	34 2f       	mov	r19, r20
    1cca:	44 27       	eor	r20, r20
    1ccc:	58 5f       	subi	r21, 0xF8	; 248
    1cce:	f3 cf       	rjmp	.-26     	; 0x1cb6 <__addsf3x+0x34>
    1cd0:	46 95       	lsr	r20
    1cd2:	37 95       	ror	r19
    1cd4:	27 95       	ror	r18
    1cd6:	a7 95       	ror	r26
    1cd8:	f0 40       	sbci	r31, 0x00	; 0
    1cda:	53 95       	inc	r21
    1cdc:	c9 f7       	brne	.-14     	; 0x1cd0 <__addsf3x+0x4e>
    1cde:	7e f4       	brtc	.+30     	; 0x1cfe <__addsf3x+0x7c>
    1ce0:	1f 16       	cp	r1, r31
    1ce2:	ba 0b       	sbc	r27, r26
    1ce4:	62 0b       	sbc	r22, r18
    1ce6:	73 0b       	sbc	r23, r19
    1ce8:	84 0b       	sbc	r24, r20
    1cea:	ba f0       	brmi	.+46     	; 0x1d1a <__addsf3x+0x98>
    1cec:	91 50       	subi	r25, 0x01	; 1
    1cee:	a1 f0       	breq	.+40     	; 0x1d18 <__addsf3x+0x96>
    1cf0:	ff 0f       	add	r31, r31
    1cf2:	bb 1f       	adc	r27, r27
    1cf4:	66 1f       	adc	r22, r22
    1cf6:	77 1f       	adc	r23, r23
    1cf8:	88 1f       	adc	r24, r24
    1cfa:	c2 f7       	brpl	.-16     	; 0x1cec <__addsf3x+0x6a>
    1cfc:	0e c0       	rjmp	.+28     	; 0x1d1a <__addsf3x+0x98>
    1cfe:	ba 0f       	add	r27, r26
    1d00:	62 1f       	adc	r22, r18
    1d02:	73 1f       	adc	r23, r19
    1d04:	84 1f       	adc	r24, r20
    1d06:	48 f4       	brcc	.+18     	; 0x1d1a <__addsf3x+0x98>
    1d08:	87 95       	ror	r24
    1d0a:	77 95       	ror	r23
    1d0c:	67 95       	ror	r22
    1d0e:	b7 95       	ror	r27
    1d10:	f7 95       	ror	r31
    1d12:	9e 3f       	cpi	r25, 0xFE	; 254
    1d14:	08 f0       	brcs	.+2      	; 0x1d18 <__addsf3x+0x96>
    1d16:	b3 cf       	rjmp	.-154    	; 0x1c7e <__addsf3+0x1e>
    1d18:	93 95       	inc	r25
    1d1a:	88 0f       	add	r24, r24
    1d1c:	08 f0       	brcs	.+2      	; 0x1d20 <__addsf3x+0x9e>
    1d1e:	99 27       	eor	r25, r25
    1d20:	ee 0f       	add	r30, r30
    1d22:	97 95       	ror	r25
    1d24:	87 95       	ror	r24
    1d26:	08 95       	ret
    1d28:	cc d1       	rcall	.+920    	; 0x20c2 <__fp_pscA>
    1d2a:	58 f0       	brcs	.+22     	; 0x1d42 <__addsf3x+0xc0>
    1d2c:	80 e8       	ldi	r24, 0x80	; 128
    1d2e:	91 e0       	ldi	r25, 0x01	; 1
    1d30:	09 f4       	brne	.+2      	; 0x1d34 <__addsf3x+0xb2>
    1d32:	9e ef       	ldi	r25, 0xFE	; 254
    1d34:	cd d1       	rcall	.+922    	; 0x20d0 <__fp_pscB>
    1d36:	28 f0       	brcs	.+10     	; 0x1d42 <__addsf3x+0xc0>
    1d38:	40 e8       	ldi	r20, 0x80	; 128
    1d3a:	51 e0       	ldi	r21, 0x01	; 1
    1d3c:	59 f4       	brne	.+22     	; 0x1d54 <atan2+0xe>
    1d3e:	5e ef       	ldi	r21, 0xFE	; 254
    1d40:	09 c0       	rjmp	.+18     	; 0x1d54 <atan2+0xe>
    1d42:	97 c1       	rjmp	.+814    	; 0x2072 <__fp_nan>
    1d44:	4f c2       	rjmp	.+1182   	; 0x21e4 <__fp_zero>

00001d46 <atan2>:
    1d46:	e9 2f       	mov	r30, r25
    1d48:	e0 78       	andi	r30, 0x80	; 128
    1d4a:	13 d2       	rcall	.+1062   	; 0x2172 <__fp_split3>
    1d4c:	68 f3       	brcs	.-38     	; 0x1d28 <__addsf3x+0xa6>
    1d4e:	09 2e       	mov	r0, r25
    1d50:	05 2a       	or	r0, r21
    1d52:	c1 f3       	breq	.-16     	; 0x1d44 <__addsf3x+0xc2>
    1d54:	26 17       	cp	r18, r22
    1d56:	37 07       	cpc	r19, r23
    1d58:	48 07       	cpc	r20, r24
    1d5a:	59 07       	cpc	r21, r25
    1d5c:	38 f0       	brcs	.+14     	; 0x1d6c <atan2+0x26>
    1d5e:	0e 2e       	mov	r0, r30
    1d60:	07 f8       	bld	r0, 7
    1d62:	e0 25       	eor	r30, r0
    1d64:	69 f0       	breq	.+26     	; 0x1d80 <atan2+0x3a>
    1d66:	e0 25       	eor	r30, r0
    1d68:	e0 64       	ori	r30, 0x40	; 64
    1d6a:	0a c0       	rjmp	.+20     	; 0x1d80 <atan2+0x3a>
    1d6c:	ef 63       	ori	r30, 0x3F	; 63
    1d6e:	07 f8       	bld	r0, 7
    1d70:	00 94       	com	r0
    1d72:	07 fa       	bst	r0, 7
    1d74:	db 01       	movw	r26, r22
    1d76:	b9 01       	movw	r22, r18
    1d78:	9d 01       	movw	r18, r26
    1d7a:	dc 01       	movw	r26, r24
    1d7c:	ca 01       	movw	r24, r20
    1d7e:	ad 01       	movw	r20, r26
    1d80:	ef 93       	push	r30
    1d82:	4a d0       	rcall	.+148    	; 0x1e18 <__divsf3_pse>
    1d84:	d4 d1       	rcall	.+936    	; 0x212e <__fp_round>
    1d86:	0a d0       	rcall	.+20     	; 0x1d9c <atan>
    1d88:	5f 91       	pop	r21
    1d8a:	55 23       	and	r21, r21
    1d8c:	31 f0       	breq	.+12     	; 0x1d9a <atan2+0x54>
    1d8e:	2b ed       	ldi	r18, 0xDB	; 219
    1d90:	3f e0       	ldi	r19, 0x0F	; 15
    1d92:	49 e4       	ldi	r20, 0x49	; 73
    1d94:	50 fd       	sbrc	r21, 0
    1d96:	49 ec       	ldi	r20, 0xC9	; 201
    1d98:	63 cf       	rjmp	.-314    	; 0x1c60 <__addsf3>
    1d9a:	08 95       	ret

00001d9c <atan>:
    1d9c:	df 93       	push	r29
    1d9e:	dd 27       	eor	r29, r29
    1da0:	b9 2f       	mov	r27, r25
    1da2:	bf 77       	andi	r27, 0x7F	; 127
    1da4:	40 e8       	ldi	r20, 0x80	; 128
    1da6:	5f e3       	ldi	r21, 0x3F	; 63
    1da8:	16 16       	cp	r1, r22
    1daa:	17 06       	cpc	r1, r23
    1dac:	48 07       	cpc	r20, r24
    1dae:	5b 07       	cpc	r21, r27
    1db0:	10 f4       	brcc	.+4      	; 0x1db6 <atan+0x1a>
    1db2:	d9 2f       	mov	r29, r25
    1db4:	22 d2       	rcall	.+1092   	; 0x21fa <inverse>
    1db6:	9f 93       	push	r25
    1db8:	8f 93       	push	r24
    1dba:	7f 93       	push	r23
    1dbc:	6f 93       	push	r22
    1dbe:	cf d2       	rcall	.+1438   	; 0x235e <square>
    1dc0:	e4 ee       	ldi	r30, 0xE4	; 228
    1dc2:	f0 e0       	ldi	r31, 0x00	; 0
    1dc4:	59 d1       	rcall	.+690    	; 0x2078 <__fp_powser>
    1dc6:	b3 d1       	rcall	.+870    	; 0x212e <__fp_round>
    1dc8:	2f 91       	pop	r18
    1dca:	3f 91       	pop	r19
    1dcc:	4f 91       	pop	r20
    1dce:	5f 91       	pop	r21
    1dd0:	27 d2       	rcall	.+1102   	; 0x2220 <__mulsf3x>
    1dd2:	dd 23       	and	r29, r29
    1dd4:	49 f0       	breq	.+18     	; 0x1de8 <atan+0x4c>
    1dd6:	90 58       	subi	r25, 0x80	; 128
    1dd8:	a2 ea       	ldi	r26, 0xA2	; 162
    1dda:	2a ed       	ldi	r18, 0xDA	; 218
    1ddc:	3f e0       	ldi	r19, 0x0F	; 15
    1dde:	49 ec       	ldi	r20, 0xC9	; 201
    1de0:	5f e3       	ldi	r21, 0x3F	; 63
    1de2:	d0 78       	andi	r29, 0x80	; 128
    1de4:	5d 27       	eor	r21, r29
    1de6:	4d df       	rcall	.-358    	; 0x1c82 <__addsf3x>
    1de8:	df 91       	pop	r29
    1dea:	a1 c1       	rjmp	.+834    	; 0x212e <__fp_round>

00001dec <__cmpsf2>:
    1dec:	ef d0       	rcall	.+478    	; 0x1fcc <__fp_cmp>
    1dee:	08 f4       	brcc	.+2      	; 0x1df2 <__cmpsf2+0x6>
    1df0:	81 e0       	ldi	r24, 0x01	; 1
    1df2:	08 95       	ret

00001df4 <cos>:
    1df4:	75 d1       	rcall	.+746    	; 0x20e0 <__fp_rempio2>
    1df6:	e3 95       	inc	r30
    1df8:	ab c1       	rjmp	.+854    	; 0x2150 <__fp_sinus>

00001dfa <__divsf3>:
    1dfa:	0c d0       	rcall	.+24     	; 0x1e14 <__divsf3x>
    1dfc:	98 c1       	rjmp	.+816    	; 0x212e <__fp_round>
    1dfe:	68 d1       	rcall	.+720    	; 0x20d0 <__fp_pscB>
    1e00:	40 f0       	brcs	.+16     	; 0x1e12 <__divsf3+0x18>
    1e02:	5f d1       	rcall	.+702    	; 0x20c2 <__fp_pscA>
    1e04:	30 f0       	brcs	.+12     	; 0x1e12 <__divsf3+0x18>
    1e06:	21 f4       	brne	.+8      	; 0x1e10 <__divsf3+0x16>
    1e08:	5f 3f       	cpi	r21, 0xFF	; 255
    1e0a:	19 f0       	breq	.+6      	; 0x1e12 <__divsf3+0x18>
    1e0c:	03 c1       	rjmp	.+518    	; 0x2014 <__fp_inf>
    1e0e:	51 11       	cpse	r21, r1
    1e10:	ea c1       	rjmp	.+980    	; 0x21e6 <__fp_szero>
    1e12:	2f c1       	rjmp	.+606    	; 0x2072 <__fp_nan>

00001e14 <__divsf3x>:
    1e14:	ae d1       	rcall	.+860    	; 0x2172 <__fp_split3>
    1e16:	98 f3       	brcs	.-26     	; 0x1dfe <__divsf3+0x4>

00001e18 <__divsf3_pse>:
    1e18:	99 23       	and	r25, r25
    1e1a:	c9 f3       	breq	.-14     	; 0x1e0e <__divsf3+0x14>
    1e1c:	55 23       	and	r21, r21
    1e1e:	b1 f3       	breq	.-20     	; 0x1e0c <__divsf3+0x12>
    1e20:	95 1b       	sub	r25, r21
    1e22:	55 0b       	sbc	r21, r21
    1e24:	bb 27       	eor	r27, r27
    1e26:	aa 27       	eor	r26, r26
    1e28:	62 17       	cp	r22, r18
    1e2a:	73 07       	cpc	r23, r19
    1e2c:	84 07       	cpc	r24, r20
    1e2e:	38 f0       	brcs	.+14     	; 0x1e3e <__divsf3_pse+0x26>
    1e30:	9f 5f       	subi	r25, 0xFF	; 255
    1e32:	5f 4f       	sbci	r21, 0xFF	; 255
    1e34:	22 0f       	add	r18, r18
    1e36:	33 1f       	adc	r19, r19
    1e38:	44 1f       	adc	r20, r20
    1e3a:	aa 1f       	adc	r26, r26
    1e3c:	a9 f3       	breq	.-22     	; 0x1e28 <__divsf3_pse+0x10>
    1e3e:	33 d0       	rcall	.+102    	; 0x1ea6 <__divsf3_pse+0x8e>
    1e40:	0e 2e       	mov	r0, r30
    1e42:	3a f0       	brmi	.+14     	; 0x1e52 <__divsf3_pse+0x3a>
    1e44:	e0 e8       	ldi	r30, 0x80	; 128
    1e46:	30 d0       	rcall	.+96     	; 0x1ea8 <__divsf3_pse+0x90>
    1e48:	91 50       	subi	r25, 0x01	; 1
    1e4a:	50 40       	sbci	r21, 0x00	; 0
    1e4c:	e6 95       	lsr	r30
    1e4e:	00 1c       	adc	r0, r0
    1e50:	ca f7       	brpl	.-14     	; 0x1e44 <__divsf3_pse+0x2c>
    1e52:	29 d0       	rcall	.+82     	; 0x1ea6 <__divsf3_pse+0x8e>
    1e54:	fe 2f       	mov	r31, r30
    1e56:	27 d0       	rcall	.+78     	; 0x1ea6 <__divsf3_pse+0x8e>
    1e58:	66 0f       	add	r22, r22
    1e5a:	77 1f       	adc	r23, r23
    1e5c:	88 1f       	adc	r24, r24
    1e5e:	bb 1f       	adc	r27, r27
    1e60:	26 17       	cp	r18, r22
    1e62:	37 07       	cpc	r19, r23
    1e64:	48 07       	cpc	r20, r24
    1e66:	ab 07       	cpc	r26, r27
    1e68:	b0 e8       	ldi	r27, 0x80	; 128
    1e6a:	09 f0       	breq	.+2      	; 0x1e6e <__divsf3_pse+0x56>
    1e6c:	bb 0b       	sbc	r27, r27
    1e6e:	80 2d       	mov	r24, r0
    1e70:	bf 01       	movw	r22, r30
    1e72:	ff 27       	eor	r31, r31
    1e74:	93 58       	subi	r25, 0x83	; 131
    1e76:	5f 4f       	sbci	r21, 0xFF	; 255
    1e78:	2a f0       	brmi	.+10     	; 0x1e84 <__divsf3_pse+0x6c>
    1e7a:	9e 3f       	cpi	r25, 0xFE	; 254
    1e7c:	51 05       	cpc	r21, r1
    1e7e:	68 f0       	brcs	.+26     	; 0x1e9a <__divsf3_pse+0x82>
    1e80:	c9 c0       	rjmp	.+402    	; 0x2014 <__fp_inf>
    1e82:	b1 c1       	rjmp	.+866    	; 0x21e6 <__fp_szero>
    1e84:	5f 3f       	cpi	r21, 0xFF	; 255
    1e86:	ec f3       	brlt	.-6      	; 0x1e82 <__divsf3_pse+0x6a>
    1e88:	98 3e       	cpi	r25, 0xE8	; 232
    1e8a:	dc f3       	brlt	.-10     	; 0x1e82 <__divsf3_pse+0x6a>
    1e8c:	86 95       	lsr	r24
    1e8e:	77 95       	ror	r23
    1e90:	67 95       	ror	r22
    1e92:	b7 95       	ror	r27
    1e94:	f7 95       	ror	r31
    1e96:	9f 5f       	subi	r25, 0xFF	; 255
    1e98:	c9 f7       	brne	.-14     	; 0x1e8c <__divsf3_pse+0x74>
    1e9a:	88 0f       	add	r24, r24
    1e9c:	91 1d       	adc	r25, r1
    1e9e:	96 95       	lsr	r25
    1ea0:	87 95       	ror	r24
    1ea2:	97 f9       	bld	r25, 7
    1ea4:	08 95       	ret
    1ea6:	e1 e0       	ldi	r30, 0x01	; 1
    1ea8:	66 0f       	add	r22, r22
    1eaa:	77 1f       	adc	r23, r23
    1eac:	88 1f       	adc	r24, r24
    1eae:	bb 1f       	adc	r27, r27
    1eb0:	62 17       	cp	r22, r18
    1eb2:	73 07       	cpc	r23, r19
    1eb4:	84 07       	cpc	r24, r20
    1eb6:	ba 07       	cpc	r27, r26
    1eb8:	20 f0       	brcs	.+8      	; 0x1ec2 <__divsf3_pse+0xaa>
    1eba:	62 1b       	sub	r22, r18
    1ebc:	73 0b       	sbc	r23, r19
    1ebe:	84 0b       	sbc	r24, r20
    1ec0:	ba 0b       	sbc	r27, r26
    1ec2:	ee 1f       	adc	r30, r30
    1ec4:	88 f7       	brcc	.-30     	; 0x1ea8 <__divsf3_pse+0x90>
    1ec6:	e0 95       	com	r30
    1ec8:	08 95       	ret

00001eca <__fixsfsi>:
    1eca:	04 d0       	rcall	.+8      	; 0x1ed4 <__fixunssfsi>
    1ecc:	68 94       	set
    1ece:	b1 11       	cpse	r27, r1
    1ed0:	8a c1       	rjmp	.+788    	; 0x21e6 <__fp_szero>
    1ed2:	08 95       	ret

00001ed4 <__fixunssfsi>:
    1ed4:	56 d1       	rcall	.+684    	; 0x2182 <__fp_splitA>
    1ed6:	88 f0       	brcs	.+34     	; 0x1efa <__fixunssfsi+0x26>
    1ed8:	9f 57       	subi	r25, 0x7F	; 127
    1eda:	90 f0       	brcs	.+36     	; 0x1f00 <__fixunssfsi+0x2c>
    1edc:	b9 2f       	mov	r27, r25
    1ede:	99 27       	eor	r25, r25
    1ee0:	b7 51       	subi	r27, 0x17	; 23
    1ee2:	a0 f0       	brcs	.+40     	; 0x1f0c <__fixunssfsi+0x38>
    1ee4:	d1 f0       	breq	.+52     	; 0x1f1a <__fixunssfsi+0x46>
    1ee6:	66 0f       	add	r22, r22
    1ee8:	77 1f       	adc	r23, r23
    1eea:	88 1f       	adc	r24, r24
    1eec:	99 1f       	adc	r25, r25
    1eee:	1a f0       	brmi	.+6      	; 0x1ef6 <__fixunssfsi+0x22>
    1ef0:	ba 95       	dec	r27
    1ef2:	c9 f7       	brne	.-14     	; 0x1ee6 <__fixunssfsi+0x12>
    1ef4:	12 c0       	rjmp	.+36     	; 0x1f1a <__fixunssfsi+0x46>
    1ef6:	b1 30       	cpi	r27, 0x01	; 1
    1ef8:	81 f0       	breq	.+32     	; 0x1f1a <__fixunssfsi+0x46>
    1efa:	74 d1       	rcall	.+744    	; 0x21e4 <__fp_zero>
    1efc:	b1 e0       	ldi	r27, 0x01	; 1
    1efe:	08 95       	ret
    1f00:	71 c1       	rjmp	.+738    	; 0x21e4 <__fp_zero>
    1f02:	67 2f       	mov	r22, r23
    1f04:	78 2f       	mov	r23, r24
    1f06:	88 27       	eor	r24, r24
    1f08:	b8 5f       	subi	r27, 0xF8	; 248
    1f0a:	39 f0       	breq	.+14     	; 0x1f1a <__fixunssfsi+0x46>
    1f0c:	b9 3f       	cpi	r27, 0xF9	; 249
    1f0e:	cc f3       	brlt	.-14     	; 0x1f02 <__fixunssfsi+0x2e>
    1f10:	86 95       	lsr	r24
    1f12:	77 95       	ror	r23
    1f14:	67 95       	ror	r22
    1f16:	b3 95       	inc	r27
    1f18:	d9 f7       	brne	.-10     	; 0x1f10 <__fixunssfsi+0x3c>
    1f1a:	3e f4       	brtc	.+14     	; 0x1f2a <__fixunssfsi+0x56>
    1f1c:	90 95       	com	r25
    1f1e:	80 95       	com	r24
    1f20:	70 95       	com	r23
    1f22:	61 95       	neg	r22
    1f24:	7f 4f       	sbci	r23, 0xFF	; 255
    1f26:	8f 4f       	sbci	r24, 0xFF	; 255
    1f28:	9f 4f       	sbci	r25, 0xFF	; 255
    1f2a:	08 95       	ret

00001f2c <__floatunsisf>:
    1f2c:	e8 94       	clt
    1f2e:	09 c0       	rjmp	.+18     	; 0x1f42 <__floatsisf+0x12>

00001f30 <__floatsisf>:
    1f30:	97 fb       	bst	r25, 7
    1f32:	3e f4       	brtc	.+14     	; 0x1f42 <__floatsisf+0x12>
    1f34:	90 95       	com	r25
    1f36:	80 95       	com	r24
    1f38:	70 95       	com	r23
    1f3a:	61 95       	neg	r22
    1f3c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f3e:	8f 4f       	sbci	r24, 0xFF	; 255
    1f40:	9f 4f       	sbci	r25, 0xFF	; 255
    1f42:	99 23       	and	r25, r25
    1f44:	a9 f0       	breq	.+42     	; 0x1f70 <__floatsisf+0x40>
    1f46:	f9 2f       	mov	r31, r25
    1f48:	96 e9       	ldi	r25, 0x96	; 150
    1f4a:	bb 27       	eor	r27, r27
    1f4c:	93 95       	inc	r25
    1f4e:	f6 95       	lsr	r31
    1f50:	87 95       	ror	r24
    1f52:	77 95       	ror	r23
    1f54:	67 95       	ror	r22
    1f56:	b7 95       	ror	r27
    1f58:	f1 11       	cpse	r31, r1
    1f5a:	f8 cf       	rjmp	.-16     	; 0x1f4c <__floatsisf+0x1c>
    1f5c:	fa f4       	brpl	.+62     	; 0x1f9c <__floatsisf+0x6c>
    1f5e:	bb 0f       	add	r27, r27
    1f60:	11 f4       	brne	.+4      	; 0x1f66 <__floatsisf+0x36>
    1f62:	60 ff       	sbrs	r22, 0
    1f64:	1b c0       	rjmp	.+54     	; 0x1f9c <__floatsisf+0x6c>
    1f66:	6f 5f       	subi	r22, 0xFF	; 255
    1f68:	7f 4f       	sbci	r23, 0xFF	; 255
    1f6a:	8f 4f       	sbci	r24, 0xFF	; 255
    1f6c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f6e:	16 c0       	rjmp	.+44     	; 0x1f9c <__floatsisf+0x6c>
    1f70:	88 23       	and	r24, r24
    1f72:	11 f0       	breq	.+4      	; 0x1f78 <__floatsisf+0x48>
    1f74:	96 e9       	ldi	r25, 0x96	; 150
    1f76:	11 c0       	rjmp	.+34     	; 0x1f9a <__floatsisf+0x6a>
    1f78:	77 23       	and	r23, r23
    1f7a:	21 f0       	breq	.+8      	; 0x1f84 <__floatsisf+0x54>
    1f7c:	9e e8       	ldi	r25, 0x8E	; 142
    1f7e:	87 2f       	mov	r24, r23
    1f80:	76 2f       	mov	r23, r22
    1f82:	05 c0       	rjmp	.+10     	; 0x1f8e <__floatsisf+0x5e>
    1f84:	66 23       	and	r22, r22
    1f86:	71 f0       	breq	.+28     	; 0x1fa4 <__floatsisf+0x74>
    1f88:	96 e8       	ldi	r25, 0x86	; 134
    1f8a:	86 2f       	mov	r24, r22
    1f8c:	70 e0       	ldi	r23, 0x00	; 0
    1f8e:	60 e0       	ldi	r22, 0x00	; 0
    1f90:	2a f0       	brmi	.+10     	; 0x1f9c <__floatsisf+0x6c>
    1f92:	9a 95       	dec	r25
    1f94:	66 0f       	add	r22, r22
    1f96:	77 1f       	adc	r23, r23
    1f98:	88 1f       	adc	r24, r24
    1f9a:	da f7       	brpl	.-10     	; 0x1f92 <__floatsisf+0x62>
    1f9c:	88 0f       	add	r24, r24
    1f9e:	96 95       	lsr	r25
    1fa0:	87 95       	ror	r24
    1fa2:	97 f9       	bld	r25, 7
    1fa4:	08 95       	ret

00001fa6 <floor>:
    1fa6:	07 d1       	rcall	.+526    	; 0x21b6 <__fp_trunc>
    1fa8:	80 f0       	brcs	.+32     	; 0x1fca <floor+0x24>
    1faa:	9f 37       	cpi	r25, 0x7F	; 127
    1fac:	40 f4       	brcc	.+16     	; 0x1fbe <floor+0x18>
    1fae:	91 11       	cpse	r25, r1
    1fb0:	0e f0       	brts	.+2      	; 0x1fb4 <floor+0xe>
    1fb2:	19 c1       	rjmp	.+562    	; 0x21e6 <__fp_szero>
    1fb4:	60 e0       	ldi	r22, 0x00	; 0
    1fb6:	70 e0       	ldi	r23, 0x00	; 0
    1fb8:	80 e8       	ldi	r24, 0x80	; 128
    1fba:	9f eb       	ldi	r25, 0xBF	; 191
    1fbc:	08 95       	ret
    1fbe:	26 f4       	brtc	.+8      	; 0x1fc8 <floor+0x22>
    1fc0:	1b 16       	cp	r1, r27
    1fc2:	61 1d       	adc	r22, r1
    1fc4:	71 1d       	adc	r23, r1
    1fc6:	81 1d       	adc	r24, r1
    1fc8:	2b c0       	rjmp	.+86     	; 0x2020 <__fp_mintl>
    1fca:	45 c0       	rjmp	.+138    	; 0x2056 <__fp_mpack>

00001fcc <__fp_cmp>:
    1fcc:	99 0f       	add	r25, r25
    1fce:	00 08       	sbc	r0, r0
    1fd0:	55 0f       	add	r21, r21
    1fd2:	aa 0b       	sbc	r26, r26
    1fd4:	e0 e8       	ldi	r30, 0x80	; 128
    1fd6:	fe ef       	ldi	r31, 0xFE	; 254
    1fd8:	16 16       	cp	r1, r22
    1fda:	17 06       	cpc	r1, r23
    1fdc:	e8 07       	cpc	r30, r24
    1fde:	f9 07       	cpc	r31, r25
    1fe0:	c0 f0       	brcs	.+48     	; 0x2012 <__fp_cmp+0x46>
    1fe2:	12 16       	cp	r1, r18
    1fe4:	13 06       	cpc	r1, r19
    1fe6:	e4 07       	cpc	r30, r20
    1fe8:	f5 07       	cpc	r31, r21
    1fea:	98 f0       	brcs	.+38     	; 0x2012 <__fp_cmp+0x46>
    1fec:	62 1b       	sub	r22, r18
    1fee:	73 0b       	sbc	r23, r19
    1ff0:	84 0b       	sbc	r24, r20
    1ff2:	95 0b       	sbc	r25, r21
    1ff4:	39 f4       	brne	.+14     	; 0x2004 <__fp_cmp+0x38>
    1ff6:	0a 26       	eor	r0, r26
    1ff8:	61 f0       	breq	.+24     	; 0x2012 <__fp_cmp+0x46>
    1ffa:	23 2b       	or	r18, r19
    1ffc:	24 2b       	or	r18, r20
    1ffe:	25 2b       	or	r18, r21
    2000:	21 f4       	brne	.+8      	; 0x200a <__fp_cmp+0x3e>
    2002:	08 95       	ret
    2004:	0a 26       	eor	r0, r26
    2006:	09 f4       	brne	.+2      	; 0x200a <__fp_cmp+0x3e>
    2008:	a1 40       	sbci	r26, 0x01	; 1
    200a:	a6 95       	lsr	r26
    200c:	8f ef       	ldi	r24, 0xFF	; 255
    200e:	81 1d       	adc	r24, r1
    2010:	81 1d       	adc	r24, r1
    2012:	08 95       	ret

00002014 <__fp_inf>:
    2014:	97 f9       	bld	r25, 7
    2016:	9f 67       	ori	r25, 0x7F	; 127
    2018:	80 e8       	ldi	r24, 0x80	; 128
    201a:	70 e0       	ldi	r23, 0x00	; 0
    201c:	60 e0       	ldi	r22, 0x00	; 0
    201e:	08 95       	ret

00002020 <__fp_mintl>:
    2020:	88 23       	and	r24, r24
    2022:	71 f4       	brne	.+28     	; 0x2040 <__fp_mintl+0x20>
    2024:	77 23       	and	r23, r23
    2026:	21 f0       	breq	.+8      	; 0x2030 <__fp_mintl+0x10>
    2028:	98 50       	subi	r25, 0x08	; 8
    202a:	87 2b       	or	r24, r23
    202c:	76 2f       	mov	r23, r22
    202e:	07 c0       	rjmp	.+14     	; 0x203e <__fp_mintl+0x1e>
    2030:	66 23       	and	r22, r22
    2032:	11 f4       	brne	.+4      	; 0x2038 <__fp_mintl+0x18>
    2034:	99 27       	eor	r25, r25
    2036:	0d c0       	rjmp	.+26     	; 0x2052 <__fp_mintl+0x32>
    2038:	90 51       	subi	r25, 0x10	; 16
    203a:	86 2b       	or	r24, r22
    203c:	70 e0       	ldi	r23, 0x00	; 0
    203e:	60 e0       	ldi	r22, 0x00	; 0
    2040:	2a f0       	brmi	.+10     	; 0x204c <__fp_mintl+0x2c>
    2042:	9a 95       	dec	r25
    2044:	66 0f       	add	r22, r22
    2046:	77 1f       	adc	r23, r23
    2048:	88 1f       	adc	r24, r24
    204a:	da f7       	brpl	.-10     	; 0x2042 <__fp_mintl+0x22>
    204c:	88 0f       	add	r24, r24
    204e:	96 95       	lsr	r25
    2050:	87 95       	ror	r24
    2052:	97 f9       	bld	r25, 7
    2054:	08 95       	ret

00002056 <__fp_mpack>:
    2056:	9f 3f       	cpi	r25, 0xFF	; 255
    2058:	31 f0       	breq	.+12     	; 0x2066 <__fp_mpack_finite+0xc>

0000205a <__fp_mpack_finite>:
    205a:	91 50       	subi	r25, 0x01	; 1
    205c:	20 f4       	brcc	.+8      	; 0x2066 <__fp_mpack_finite+0xc>
    205e:	87 95       	ror	r24
    2060:	77 95       	ror	r23
    2062:	67 95       	ror	r22
    2064:	b7 95       	ror	r27
    2066:	88 0f       	add	r24, r24
    2068:	91 1d       	adc	r25, r1
    206a:	96 95       	lsr	r25
    206c:	87 95       	ror	r24
    206e:	97 f9       	bld	r25, 7
    2070:	08 95       	ret

00002072 <__fp_nan>:
    2072:	9f ef       	ldi	r25, 0xFF	; 255
    2074:	80 ec       	ldi	r24, 0xC0	; 192
    2076:	08 95       	ret

00002078 <__fp_powser>:
    2078:	df 93       	push	r29
    207a:	cf 93       	push	r28
    207c:	1f 93       	push	r17
    207e:	0f 93       	push	r16
    2080:	ff 92       	push	r15
    2082:	ef 92       	push	r14
    2084:	df 92       	push	r13
    2086:	7b 01       	movw	r14, r22
    2088:	8c 01       	movw	r16, r24
    208a:	68 94       	set
    208c:	05 c0       	rjmp	.+10     	; 0x2098 <__fp_powser+0x20>
    208e:	da 2e       	mov	r13, r26
    2090:	ef 01       	movw	r28, r30
    2092:	c6 d0       	rcall	.+396    	; 0x2220 <__mulsf3x>
    2094:	fe 01       	movw	r30, r28
    2096:	e8 94       	clt
    2098:	a5 91       	lpm	r26, Z+
    209a:	25 91       	lpm	r18, Z+
    209c:	35 91       	lpm	r19, Z+
    209e:	45 91       	lpm	r20, Z+
    20a0:	55 91       	lpm	r21, Z+
    20a2:	ae f3       	brts	.-22     	; 0x208e <__fp_powser+0x16>
    20a4:	ef 01       	movw	r28, r30
    20a6:	ed dd       	rcall	.-1062   	; 0x1c82 <__addsf3x>
    20a8:	fe 01       	movw	r30, r28
    20aa:	97 01       	movw	r18, r14
    20ac:	a8 01       	movw	r20, r16
    20ae:	da 94       	dec	r13
    20b0:	79 f7       	brne	.-34     	; 0x2090 <__fp_powser+0x18>
    20b2:	df 90       	pop	r13
    20b4:	ef 90       	pop	r14
    20b6:	ff 90       	pop	r15
    20b8:	0f 91       	pop	r16
    20ba:	1f 91       	pop	r17
    20bc:	cf 91       	pop	r28
    20be:	df 91       	pop	r29
    20c0:	08 95       	ret

000020c2 <__fp_pscA>:
    20c2:	00 24       	eor	r0, r0
    20c4:	0a 94       	dec	r0
    20c6:	16 16       	cp	r1, r22
    20c8:	17 06       	cpc	r1, r23
    20ca:	18 06       	cpc	r1, r24
    20cc:	09 06       	cpc	r0, r25
    20ce:	08 95       	ret

000020d0 <__fp_pscB>:
    20d0:	00 24       	eor	r0, r0
    20d2:	0a 94       	dec	r0
    20d4:	12 16       	cp	r1, r18
    20d6:	13 06       	cpc	r1, r19
    20d8:	14 06       	cpc	r1, r20
    20da:	05 06       	cpc	r0, r21
    20dc:	08 95       	ret
    20de:	c9 cf       	rjmp	.-110    	; 0x2072 <__fp_nan>

000020e0 <__fp_rempio2>:
    20e0:	50 d0       	rcall	.+160    	; 0x2182 <__fp_splitA>
    20e2:	e8 f3       	brcs	.-6      	; 0x20de <__fp_pscB+0xe>
    20e4:	e8 94       	clt
    20e6:	e0 e0       	ldi	r30, 0x00	; 0
    20e8:	bb 27       	eor	r27, r27
    20ea:	9f 57       	subi	r25, 0x7F	; 127
    20ec:	f0 f0       	brcs	.+60     	; 0x212a <__fp_rempio2+0x4a>
    20ee:	2a ed       	ldi	r18, 0xDA	; 218
    20f0:	3f e0       	ldi	r19, 0x0F	; 15
    20f2:	49 ec       	ldi	r20, 0xC9	; 201
    20f4:	06 c0       	rjmp	.+12     	; 0x2102 <__fp_rempio2+0x22>
    20f6:	ee 0f       	add	r30, r30
    20f8:	bb 0f       	add	r27, r27
    20fa:	66 1f       	adc	r22, r22
    20fc:	77 1f       	adc	r23, r23
    20fe:	88 1f       	adc	r24, r24
    2100:	28 f0       	brcs	.+10     	; 0x210c <__fp_rempio2+0x2c>
    2102:	b2 3a       	cpi	r27, 0xA2	; 162
    2104:	62 07       	cpc	r22, r18
    2106:	73 07       	cpc	r23, r19
    2108:	84 07       	cpc	r24, r20
    210a:	28 f0       	brcs	.+10     	; 0x2116 <__fp_rempio2+0x36>
    210c:	b2 5a       	subi	r27, 0xA2	; 162
    210e:	62 0b       	sbc	r22, r18
    2110:	73 0b       	sbc	r23, r19
    2112:	84 0b       	sbc	r24, r20
    2114:	e3 95       	inc	r30
    2116:	9a 95       	dec	r25
    2118:	72 f7       	brpl	.-36     	; 0x20f6 <__fp_rempio2+0x16>
    211a:	80 38       	cpi	r24, 0x80	; 128
    211c:	30 f4       	brcc	.+12     	; 0x212a <__fp_rempio2+0x4a>
    211e:	9a 95       	dec	r25
    2120:	bb 0f       	add	r27, r27
    2122:	66 1f       	adc	r22, r22
    2124:	77 1f       	adc	r23, r23
    2126:	88 1f       	adc	r24, r24
    2128:	d2 f7       	brpl	.-12     	; 0x211e <__fp_rempio2+0x3e>
    212a:	90 48       	sbci	r25, 0x80	; 128
    212c:	96 cf       	rjmp	.-212    	; 0x205a <__fp_mpack_finite>

0000212e <__fp_round>:
    212e:	09 2e       	mov	r0, r25
    2130:	03 94       	inc	r0
    2132:	00 0c       	add	r0, r0
    2134:	11 f4       	brne	.+4      	; 0x213a <__fp_round+0xc>
    2136:	88 23       	and	r24, r24
    2138:	52 f0       	brmi	.+20     	; 0x214e <__fp_round+0x20>
    213a:	bb 0f       	add	r27, r27
    213c:	40 f4       	brcc	.+16     	; 0x214e <__fp_round+0x20>
    213e:	bf 2b       	or	r27, r31
    2140:	11 f4       	brne	.+4      	; 0x2146 <__fp_round+0x18>
    2142:	60 ff       	sbrs	r22, 0
    2144:	04 c0       	rjmp	.+8      	; 0x214e <__fp_round+0x20>
    2146:	6f 5f       	subi	r22, 0xFF	; 255
    2148:	7f 4f       	sbci	r23, 0xFF	; 255
    214a:	8f 4f       	sbci	r24, 0xFF	; 255
    214c:	9f 4f       	sbci	r25, 0xFF	; 255
    214e:	08 95       	ret

00002150 <__fp_sinus>:
    2150:	ef 93       	push	r30
    2152:	e0 ff       	sbrs	r30, 0
    2154:	06 c0       	rjmp	.+12     	; 0x2162 <__fp_sinus+0x12>
    2156:	a2 ea       	ldi	r26, 0xA2	; 162
    2158:	2a ed       	ldi	r18, 0xDA	; 218
    215a:	3f e0       	ldi	r19, 0x0F	; 15
    215c:	49 ec       	ldi	r20, 0xC9	; 201
    215e:	5f eb       	ldi	r21, 0xBF	; 191
    2160:	90 dd       	rcall	.-1248   	; 0x1c82 <__addsf3x>
    2162:	e5 df       	rcall	.-54     	; 0x212e <__fp_round>
    2164:	0f 90       	pop	r0
    2166:	03 94       	inc	r0
    2168:	01 fc       	sbrc	r0, 1
    216a:	90 58       	subi	r25, 0x80	; 128
    216c:	e1 e1       	ldi	r30, 0x11	; 17
    216e:	f1 e0       	ldi	r31, 0x01	; 1
    2170:	00 c1       	rjmp	.+512    	; 0x2372 <__fp_powsodd>

00002172 <__fp_split3>:
    2172:	57 fd       	sbrc	r21, 7
    2174:	90 58       	subi	r25, 0x80	; 128
    2176:	44 0f       	add	r20, r20
    2178:	55 1f       	adc	r21, r21
    217a:	59 f0       	breq	.+22     	; 0x2192 <__fp_splitA+0x10>
    217c:	5f 3f       	cpi	r21, 0xFF	; 255
    217e:	71 f0       	breq	.+28     	; 0x219c <__fp_splitA+0x1a>
    2180:	47 95       	ror	r20

00002182 <__fp_splitA>:
    2182:	88 0f       	add	r24, r24
    2184:	97 fb       	bst	r25, 7
    2186:	99 1f       	adc	r25, r25
    2188:	61 f0       	breq	.+24     	; 0x21a2 <__fp_splitA+0x20>
    218a:	9f 3f       	cpi	r25, 0xFF	; 255
    218c:	79 f0       	breq	.+30     	; 0x21ac <__fp_splitA+0x2a>
    218e:	87 95       	ror	r24
    2190:	08 95       	ret
    2192:	12 16       	cp	r1, r18
    2194:	13 06       	cpc	r1, r19
    2196:	14 06       	cpc	r1, r20
    2198:	55 1f       	adc	r21, r21
    219a:	f2 cf       	rjmp	.-28     	; 0x2180 <__fp_split3+0xe>
    219c:	46 95       	lsr	r20
    219e:	f1 df       	rcall	.-30     	; 0x2182 <__fp_splitA>
    21a0:	08 c0       	rjmp	.+16     	; 0x21b2 <__fp_splitA+0x30>
    21a2:	16 16       	cp	r1, r22
    21a4:	17 06       	cpc	r1, r23
    21a6:	18 06       	cpc	r1, r24
    21a8:	99 1f       	adc	r25, r25
    21aa:	f1 cf       	rjmp	.-30     	; 0x218e <__fp_splitA+0xc>
    21ac:	86 95       	lsr	r24
    21ae:	71 05       	cpc	r23, r1
    21b0:	61 05       	cpc	r22, r1
    21b2:	08 94       	sec
    21b4:	08 95       	ret

000021b6 <__fp_trunc>:
    21b6:	e5 df       	rcall	.-54     	; 0x2182 <__fp_splitA>
    21b8:	a0 f0       	brcs	.+40     	; 0x21e2 <__fp_trunc+0x2c>
    21ba:	be e7       	ldi	r27, 0x7E	; 126
    21bc:	b9 17       	cp	r27, r25
    21be:	88 f4       	brcc	.+34     	; 0x21e2 <__fp_trunc+0x2c>
    21c0:	bb 27       	eor	r27, r27
    21c2:	9f 38       	cpi	r25, 0x8F	; 143
    21c4:	60 f4       	brcc	.+24     	; 0x21de <__fp_trunc+0x28>
    21c6:	16 16       	cp	r1, r22
    21c8:	b1 1d       	adc	r27, r1
    21ca:	67 2f       	mov	r22, r23
    21cc:	78 2f       	mov	r23, r24
    21ce:	88 27       	eor	r24, r24
    21d0:	98 5f       	subi	r25, 0xF8	; 248
    21d2:	f7 cf       	rjmp	.-18     	; 0x21c2 <__fp_trunc+0xc>
    21d4:	86 95       	lsr	r24
    21d6:	77 95       	ror	r23
    21d8:	67 95       	ror	r22
    21da:	b1 1d       	adc	r27, r1
    21dc:	93 95       	inc	r25
    21de:	96 39       	cpi	r25, 0x96	; 150
    21e0:	c8 f3       	brcs	.-14     	; 0x21d4 <__fp_trunc+0x1e>
    21e2:	08 95       	ret

000021e4 <__fp_zero>:
    21e4:	e8 94       	clt

000021e6 <__fp_szero>:
    21e6:	bb 27       	eor	r27, r27
    21e8:	66 27       	eor	r22, r22
    21ea:	77 27       	eor	r23, r23
    21ec:	cb 01       	movw	r24, r22
    21ee:	97 f9       	bld	r25, 7
    21f0:	08 95       	ret

000021f2 <__gesf2>:
    21f2:	ec de       	rcall	.-552    	; 0x1fcc <__fp_cmp>
    21f4:	08 f4       	brcc	.+2      	; 0x21f8 <__gesf2+0x6>
    21f6:	8f ef       	ldi	r24, 0xFF	; 255
    21f8:	08 95       	ret

000021fa <inverse>:
    21fa:	9b 01       	movw	r18, r22
    21fc:	ac 01       	movw	r20, r24
    21fe:	60 e0       	ldi	r22, 0x00	; 0
    2200:	70 e0       	ldi	r23, 0x00	; 0
    2202:	80 e8       	ldi	r24, 0x80	; 128
    2204:	9f e3       	ldi	r25, 0x3F	; 63
    2206:	f9 cd       	rjmp	.-1038   	; 0x1dfa <__divsf3>

00002208 <__mulsf3>:
    2208:	0b d0       	rcall	.+22     	; 0x2220 <__mulsf3x>
    220a:	91 cf       	rjmp	.-222    	; 0x212e <__fp_round>
    220c:	5a df       	rcall	.-332    	; 0x20c2 <__fp_pscA>
    220e:	28 f0       	brcs	.+10     	; 0x221a <__mulsf3+0x12>
    2210:	5f df       	rcall	.-322    	; 0x20d0 <__fp_pscB>
    2212:	18 f0       	brcs	.+6      	; 0x221a <__mulsf3+0x12>
    2214:	95 23       	and	r25, r21
    2216:	09 f0       	breq	.+2      	; 0x221a <__mulsf3+0x12>
    2218:	fd ce       	rjmp	.-518    	; 0x2014 <__fp_inf>
    221a:	2b cf       	rjmp	.-426    	; 0x2072 <__fp_nan>
    221c:	11 24       	eor	r1, r1
    221e:	e3 cf       	rjmp	.-58     	; 0x21e6 <__fp_szero>

00002220 <__mulsf3x>:
    2220:	a8 df       	rcall	.-176    	; 0x2172 <__fp_split3>
    2222:	a0 f3       	brcs	.-24     	; 0x220c <__mulsf3+0x4>

00002224 <__mulsf3_pse>:
    2224:	95 9f       	mul	r25, r21
    2226:	d1 f3       	breq	.-12     	; 0x221c <__mulsf3+0x14>
    2228:	95 0f       	add	r25, r21
    222a:	50 e0       	ldi	r21, 0x00	; 0
    222c:	55 1f       	adc	r21, r21
    222e:	62 9f       	mul	r22, r18
    2230:	f0 01       	movw	r30, r0
    2232:	72 9f       	mul	r23, r18
    2234:	bb 27       	eor	r27, r27
    2236:	f0 0d       	add	r31, r0
    2238:	b1 1d       	adc	r27, r1
    223a:	63 9f       	mul	r22, r19
    223c:	aa 27       	eor	r26, r26
    223e:	f0 0d       	add	r31, r0
    2240:	b1 1d       	adc	r27, r1
    2242:	aa 1f       	adc	r26, r26
    2244:	64 9f       	mul	r22, r20
    2246:	66 27       	eor	r22, r22
    2248:	b0 0d       	add	r27, r0
    224a:	a1 1d       	adc	r26, r1
    224c:	66 1f       	adc	r22, r22
    224e:	82 9f       	mul	r24, r18
    2250:	22 27       	eor	r18, r18
    2252:	b0 0d       	add	r27, r0
    2254:	a1 1d       	adc	r26, r1
    2256:	62 1f       	adc	r22, r18
    2258:	73 9f       	mul	r23, r19
    225a:	b0 0d       	add	r27, r0
    225c:	a1 1d       	adc	r26, r1
    225e:	62 1f       	adc	r22, r18
    2260:	83 9f       	mul	r24, r19
    2262:	a0 0d       	add	r26, r0
    2264:	61 1d       	adc	r22, r1
    2266:	22 1f       	adc	r18, r18
    2268:	74 9f       	mul	r23, r20
    226a:	33 27       	eor	r19, r19
    226c:	a0 0d       	add	r26, r0
    226e:	61 1d       	adc	r22, r1
    2270:	23 1f       	adc	r18, r19
    2272:	84 9f       	mul	r24, r20
    2274:	60 0d       	add	r22, r0
    2276:	21 1d       	adc	r18, r1
    2278:	82 2f       	mov	r24, r18
    227a:	76 2f       	mov	r23, r22
    227c:	6a 2f       	mov	r22, r26
    227e:	11 24       	eor	r1, r1
    2280:	9f 57       	subi	r25, 0x7F	; 127
    2282:	50 40       	sbci	r21, 0x00	; 0
    2284:	8a f0       	brmi	.+34     	; 0x22a8 <__mulsf3_pse+0x84>
    2286:	e1 f0       	breq	.+56     	; 0x22c0 <__mulsf3_pse+0x9c>
    2288:	88 23       	and	r24, r24
    228a:	4a f0       	brmi	.+18     	; 0x229e <__mulsf3_pse+0x7a>
    228c:	ee 0f       	add	r30, r30
    228e:	ff 1f       	adc	r31, r31
    2290:	bb 1f       	adc	r27, r27
    2292:	66 1f       	adc	r22, r22
    2294:	77 1f       	adc	r23, r23
    2296:	88 1f       	adc	r24, r24
    2298:	91 50       	subi	r25, 0x01	; 1
    229a:	50 40       	sbci	r21, 0x00	; 0
    229c:	a9 f7       	brne	.-22     	; 0x2288 <__mulsf3_pse+0x64>
    229e:	9e 3f       	cpi	r25, 0xFE	; 254
    22a0:	51 05       	cpc	r21, r1
    22a2:	70 f0       	brcs	.+28     	; 0x22c0 <__mulsf3_pse+0x9c>
    22a4:	b7 ce       	rjmp	.-658    	; 0x2014 <__fp_inf>
    22a6:	9f cf       	rjmp	.-194    	; 0x21e6 <__fp_szero>
    22a8:	5f 3f       	cpi	r21, 0xFF	; 255
    22aa:	ec f3       	brlt	.-6      	; 0x22a6 <__mulsf3_pse+0x82>
    22ac:	98 3e       	cpi	r25, 0xE8	; 232
    22ae:	dc f3       	brlt	.-10     	; 0x22a6 <__mulsf3_pse+0x82>
    22b0:	86 95       	lsr	r24
    22b2:	77 95       	ror	r23
    22b4:	67 95       	ror	r22
    22b6:	b7 95       	ror	r27
    22b8:	f7 95       	ror	r31
    22ba:	e7 95       	ror	r30
    22bc:	9f 5f       	subi	r25, 0xFF	; 255
    22be:	c1 f7       	brne	.-16     	; 0x22b0 <__mulsf3_pse+0x8c>
    22c0:	fe 2b       	or	r31, r30
    22c2:	88 0f       	add	r24, r24
    22c4:	91 1d       	adc	r25, r1
    22c6:	96 95       	lsr	r25
    22c8:	87 95       	ror	r24
    22ca:	97 f9       	bld	r25, 7
    22cc:	08 95       	ret

000022ce <sin>:
    22ce:	9f 93       	push	r25
    22d0:	07 df       	rcall	.-498    	; 0x20e0 <__fp_rempio2>
    22d2:	0f 90       	pop	r0
    22d4:	07 fc       	sbrc	r0, 7
    22d6:	ee 5f       	subi	r30, 0xFE	; 254
    22d8:	3b cf       	rjmp	.-394    	; 0x2150 <__fp_sinus>
    22da:	11 f4       	brne	.+4      	; 0x22e0 <sin+0x12>
    22dc:	0e f4       	brtc	.+2      	; 0x22e0 <sin+0x12>
    22de:	c9 ce       	rjmp	.-622    	; 0x2072 <__fp_nan>
    22e0:	ba ce       	rjmp	.-652    	; 0x2056 <__fp_mpack>

000022e2 <sqrt>:
    22e2:	4f df       	rcall	.-354    	; 0x2182 <__fp_splitA>
    22e4:	d0 f3       	brcs	.-12     	; 0x22da <sin+0xc>
    22e6:	99 23       	and	r25, r25
    22e8:	d9 f3       	breq	.-10     	; 0x22e0 <sin+0x12>
    22ea:	ce f3       	brts	.-14     	; 0x22de <sin+0x10>
    22ec:	9f 57       	subi	r25, 0x7F	; 127
    22ee:	55 0b       	sbc	r21, r21
    22f0:	87 ff       	sbrs	r24, 7
    22f2:	38 d0       	rcall	.+112    	; 0x2364 <__fp_norm2>
    22f4:	00 24       	eor	r0, r0
    22f6:	a0 e6       	ldi	r26, 0x60	; 96
    22f8:	40 ea       	ldi	r20, 0xA0	; 160
    22fa:	90 01       	movw	r18, r0
    22fc:	80 58       	subi	r24, 0x80	; 128
    22fe:	56 95       	lsr	r21
    2300:	97 95       	ror	r25
    2302:	28 f4       	brcc	.+10     	; 0x230e <sqrt+0x2c>
    2304:	80 5c       	subi	r24, 0xC0	; 192
    2306:	66 0f       	add	r22, r22
    2308:	77 1f       	adc	r23, r23
    230a:	88 1f       	adc	r24, r24
    230c:	20 f0       	brcs	.+8      	; 0x2316 <sqrt+0x34>
    230e:	26 17       	cp	r18, r22
    2310:	37 07       	cpc	r19, r23
    2312:	48 07       	cpc	r20, r24
    2314:	30 f4       	brcc	.+12     	; 0x2322 <sqrt+0x40>
    2316:	62 1b       	sub	r22, r18
    2318:	73 0b       	sbc	r23, r19
    231a:	84 0b       	sbc	r24, r20
    231c:	20 29       	or	r18, r0
    231e:	31 29       	or	r19, r1
    2320:	4a 2b       	or	r20, r26
    2322:	a6 95       	lsr	r26
    2324:	17 94       	ror	r1
    2326:	07 94       	ror	r0
    2328:	20 25       	eor	r18, r0
    232a:	31 25       	eor	r19, r1
    232c:	4a 27       	eor	r20, r26
    232e:	58 f7       	brcc	.-42     	; 0x2306 <sqrt+0x24>
    2330:	66 0f       	add	r22, r22
    2332:	77 1f       	adc	r23, r23
    2334:	88 1f       	adc	r24, r24
    2336:	20 f0       	brcs	.+8      	; 0x2340 <sqrt+0x5e>
    2338:	26 17       	cp	r18, r22
    233a:	37 07       	cpc	r19, r23
    233c:	48 07       	cpc	r20, r24
    233e:	30 f4       	brcc	.+12     	; 0x234c <sqrt+0x6a>
    2340:	62 0b       	sbc	r22, r18
    2342:	73 0b       	sbc	r23, r19
    2344:	84 0b       	sbc	r24, r20
    2346:	20 0d       	add	r18, r0
    2348:	31 1d       	adc	r19, r1
    234a:	41 1d       	adc	r20, r1
    234c:	a0 95       	com	r26
    234e:	81 f7       	brne	.-32     	; 0x2330 <sqrt+0x4e>
    2350:	b9 01       	movw	r22, r18
    2352:	84 2f       	mov	r24, r20
    2354:	91 58       	subi	r25, 0x81	; 129
    2356:	88 0f       	add	r24, r24
    2358:	96 95       	lsr	r25
    235a:	87 95       	ror	r24
    235c:	08 95       	ret

0000235e <square>:
    235e:	9b 01       	movw	r18, r22
    2360:	ac 01       	movw	r20, r24
    2362:	52 cf       	rjmp	.-348    	; 0x2208 <__mulsf3>

00002364 <__fp_norm2>:
    2364:	91 50       	subi	r25, 0x01	; 1
    2366:	50 40       	sbci	r21, 0x00	; 0
    2368:	66 0f       	add	r22, r22
    236a:	77 1f       	adc	r23, r23
    236c:	88 1f       	adc	r24, r24
    236e:	d2 f7       	brpl	.-12     	; 0x2364 <__fp_norm2>
    2370:	08 95       	ret

00002372 <__fp_powsodd>:
    2372:	9f 93       	push	r25
    2374:	8f 93       	push	r24
    2376:	7f 93       	push	r23
    2378:	6f 93       	push	r22
    237a:	ff 93       	push	r31
    237c:	ef 93       	push	r30
    237e:	9b 01       	movw	r18, r22
    2380:	ac 01       	movw	r20, r24
    2382:	42 df       	rcall	.-380    	; 0x2208 <__mulsf3>
    2384:	ef 91       	pop	r30
    2386:	ff 91       	pop	r31
    2388:	77 de       	rcall	.-786    	; 0x2078 <__fp_powser>
    238a:	2f 91       	pop	r18
    238c:	3f 91       	pop	r19
    238e:	4f 91       	pop	r20
    2390:	5f 91       	pop	r21
    2392:	3a cf       	rjmp	.-396    	; 0x2208 <__mulsf3>

00002394 <__udivmodsi4>:
    2394:	a1 e2       	ldi	r26, 0x21	; 33
    2396:	1a 2e       	mov	r1, r26
    2398:	aa 1b       	sub	r26, r26
    239a:	bb 1b       	sub	r27, r27
    239c:	fd 01       	movw	r30, r26
    239e:	0d c0       	rjmp	.+26     	; 0x23ba <__udivmodsi4_ep>

000023a0 <__udivmodsi4_loop>:
    23a0:	aa 1f       	adc	r26, r26
    23a2:	bb 1f       	adc	r27, r27
    23a4:	ee 1f       	adc	r30, r30
    23a6:	ff 1f       	adc	r31, r31
    23a8:	a2 17       	cp	r26, r18
    23aa:	b3 07       	cpc	r27, r19
    23ac:	e4 07       	cpc	r30, r20
    23ae:	f5 07       	cpc	r31, r21
    23b0:	20 f0       	brcs	.+8      	; 0x23ba <__udivmodsi4_ep>
    23b2:	a2 1b       	sub	r26, r18
    23b4:	b3 0b       	sbc	r27, r19
    23b6:	e4 0b       	sbc	r30, r20
    23b8:	f5 0b       	sbc	r31, r21

000023ba <__udivmodsi4_ep>:
    23ba:	66 1f       	adc	r22, r22
    23bc:	77 1f       	adc	r23, r23
    23be:	88 1f       	adc	r24, r24
    23c0:	99 1f       	adc	r25, r25
    23c2:	1a 94       	dec	r1
    23c4:	69 f7       	brne	.-38     	; 0x23a0 <__udivmodsi4_loop>
    23c6:	60 95       	com	r22
    23c8:	70 95       	com	r23
    23ca:	80 95       	com	r24
    23cc:	90 95       	com	r25
    23ce:	9b 01       	movw	r18, r22
    23d0:	ac 01       	movw	r20, r24
    23d2:	bd 01       	movw	r22, r26
    23d4:	cf 01       	movw	r24, r30
    23d6:	08 95       	ret

000023d8 <__tablejump_elpm__>:
    23d8:	07 90       	elpm	r0, Z+
    23da:	f6 91       	elpm	r31, Z
    23dc:	e0 2d       	mov	r30, r0
    23de:	19 94       	eijmp

000023e0 <dtostrf>:
    23e0:	ef 92       	push	r14
    23e2:	0f 93       	push	r16
    23e4:	1f 93       	push	r17
    23e6:	cf 93       	push	r28
    23e8:	df 93       	push	r29
    23ea:	e8 01       	movw	r28, r16
    23ec:	47 ff       	sbrs	r20, 7
    23ee:	02 c0       	rjmp	.+4      	; 0x23f4 <dtostrf+0x14>
    23f0:	34 e1       	ldi	r19, 0x14	; 20
    23f2:	01 c0       	rjmp	.+2      	; 0x23f6 <dtostrf+0x16>
    23f4:	34 e0       	ldi	r19, 0x04	; 4
    23f6:	e4 2f       	mov	r30, r20
    23f8:	ff 27       	eor	r31, r31
    23fa:	e7 fd       	sbrc	r30, 7
    23fc:	f0 95       	com	r31
    23fe:	f7 ff       	sbrs	r31, 7
    2400:	03 c0       	rjmp	.+6      	; 0x2408 <dtostrf+0x28>
    2402:	f1 95       	neg	r31
    2404:	e1 95       	neg	r30
    2406:	f1 09       	sbc	r31, r1
    2408:	e3 2e       	mov	r14, r19
    240a:	02 2f       	mov	r16, r18
    240c:	2e 2f       	mov	r18, r30
    240e:	ae 01       	movw	r20, r28
    2410:	5b d0       	rcall	.+182    	; 0x24c8 <dtoa_prf>
    2412:	ce 01       	movw	r24, r28
    2414:	df 91       	pop	r29
    2416:	cf 91       	pop	r28
    2418:	1f 91       	pop	r17
    241a:	0f 91       	pop	r16
    241c:	ef 90       	pop	r14
    241e:	08 95       	ret

00002420 <atof>:
    2420:	66 27       	eor	r22, r22
    2422:	77 27       	eor	r23, r23
    2424:	ce c1       	rjmp	.+924    	; 0x27c2 <strtod>

00002426 <atoi>:
    2426:	fc 01       	movw	r30, r24
    2428:	88 27       	eor	r24, r24
    242a:	99 27       	eor	r25, r25
    242c:	e8 94       	clt
    242e:	21 91       	ld	r18, Z+
    2430:	20 32       	cpi	r18, 0x20	; 32
    2432:	e9 f3       	breq	.-6      	; 0x242e <atoi+0x8>
    2434:	29 30       	cpi	r18, 0x09	; 9
    2436:	10 f0       	brcs	.+4      	; 0x243c <atoi+0x16>
    2438:	2e 30       	cpi	r18, 0x0E	; 14
    243a:	c8 f3       	brcs	.-14     	; 0x242e <atoi+0x8>
    243c:	2b 32       	cpi	r18, 0x2B	; 43
    243e:	39 f0       	breq	.+14     	; 0x244e <atoi+0x28>
    2440:	2d 32       	cpi	r18, 0x2D	; 45
    2442:	31 f4       	brne	.+12     	; 0x2450 <atoi+0x2a>
    2444:	68 94       	set
    2446:	03 c0       	rjmp	.+6      	; 0x244e <atoi+0x28>
    2448:	1e d0       	rcall	.+60     	; 0x2486 <__mulhi_const_10>
    244a:	82 0f       	add	r24, r18
    244c:	91 1d       	adc	r25, r1
    244e:	21 91       	ld	r18, Z+
    2450:	20 53       	subi	r18, 0x30	; 48
    2452:	2a 30       	cpi	r18, 0x0A	; 10
    2454:	c8 f3       	brcs	.-14     	; 0x2448 <atoi+0x22>
    2456:	1e f4       	brtc	.+6      	; 0x245e <atoi+0x38>
    2458:	90 95       	com	r25
    245a:	81 95       	neg	r24
    245c:	9f 4f       	sbci	r25, 0xFF	; 255
    245e:	08 95       	ret

00002460 <strcmp>:
    2460:	fb 01       	movw	r30, r22
    2462:	dc 01       	movw	r26, r24
    2464:	8d 91       	ld	r24, X+
    2466:	01 90       	ld	r0, Z+
    2468:	80 19       	sub	r24, r0
    246a:	01 10       	cpse	r0, r1
    246c:	d9 f3       	breq	.-10     	; 0x2464 <strcmp+0x4>
    246e:	99 0b       	sbc	r25, r25
    2470:	08 95       	ret

00002472 <__itoa_ncheck>:
    2472:	bb 27       	eor	r27, r27
    2474:	4a 30       	cpi	r20, 0x0A	; 10
    2476:	31 f4       	brne	.+12     	; 0x2484 <__itoa_ncheck+0x12>
    2478:	99 23       	and	r25, r25
    247a:	22 f4       	brpl	.+8      	; 0x2484 <__itoa_ncheck+0x12>
    247c:	bd e2       	ldi	r27, 0x2D	; 45
    247e:	90 95       	com	r25
    2480:	81 95       	neg	r24
    2482:	9f 4f       	sbci	r25, 0xFF	; 255
    2484:	09 c0       	rjmp	.+18     	; 0x2498 <__utoa_common>

00002486 <__mulhi_const_10>:
    2486:	7a e0       	ldi	r23, 0x0A	; 10
    2488:	97 9f       	mul	r25, r23
    248a:	90 2d       	mov	r25, r0
    248c:	87 9f       	mul	r24, r23
    248e:	80 2d       	mov	r24, r0
    2490:	91 0d       	add	r25, r1
    2492:	11 24       	eor	r1, r1
    2494:	08 95       	ret

00002496 <__utoa_ncheck>:
    2496:	bb 27       	eor	r27, r27

00002498 <__utoa_common>:
    2498:	fb 01       	movw	r30, r22
    249a:	55 27       	eor	r21, r21
    249c:	aa 27       	eor	r26, r26
    249e:	88 0f       	add	r24, r24
    24a0:	99 1f       	adc	r25, r25
    24a2:	aa 1f       	adc	r26, r26
    24a4:	a4 17       	cp	r26, r20
    24a6:	10 f0       	brcs	.+4      	; 0x24ac <__utoa_common+0x14>
    24a8:	a4 1b       	sub	r26, r20
    24aa:	83 95       	inc	r24
    24ac:	50 51       	subi	r21, 0x10	; 16
    24ae:	b9 f7       	brne	.-18     	; 0x249e <__utoa_common+0x6>
    24b0:	a0 5d       	subi	r26, 0xD0	; 208
    24b2:	aa 33       	cpi	r26, 0x3A	; 58
    24b4:	08 f0       	brcs	.+2      	; 0x24b8 <__utoa_common+0x20>
    24b6:	a9 5d       	subi	r26, 0xD9	; 217
    24b8:	a1 93       	st	Z+, r26
    24ba:	00 97       	sbiw	r24, 0x00	; 0
    24bc:	79 f7       	brne	.-34     	; 0x249c <__utoa_common+0x4>
    24be:	b1 11       	cpse	r27, r1
    24c0:	b1 93       	st	Z+, r27
    24c2:	11 92       	st	Z+, r1
    24c4:	cb 01       	movw	r24, r22
    24c6:	dd c3       	rjmp	.+1978   	; 0x2c82 <strrev>

000024c8 <dtoa_prf>:
    24c8:	6f 92       	push	r6
    24ca:	7f 92       	push	r7
    24cc:	9f 92       	push	r9
    24ce:	af 92       	push	r10
    24d0:	bf 92       	push	r11
    24d2:	cf 92       	push	r12
    24d4:	df 92       	push	r13
    24d6:	ef 92       	push	r14
    24d8:	ff 92       	push	r15
    24da:	0f 93       	push	r16
    24dc:	1f 93       	push	r17
    24de:	cf 93       	push	r28
    24e0:	df 93       	push	r29
    24e2:	cd b7       	in	r28, 0x3d	; 61
    24e4:	de b7       	in	r29, 0x3e	; 62
    24e6:	29 97       	sbiw	r28, 0x09	; 9
    24e8:	0f b6       	in	r0, 0x3f	; 63
    24ea:	f8 94       	cli
    24ec:	de bf       	out	0x3e, r29	; 62
    24ee:	0f be       	out	0x3f, r0	; 63
    24f0:	cd bf       	out	0x3d, r28	; 61
    24f2:	6a 01       	movw	r12, r20
    24f4:	b2 2e       	mov	r11, r18
    24f6:	10 2f       	mov	r17, r16
    24f8:	0c 33       	cpi	r16, 0x3C	; 60
    24fa:	20 f4       	brcc	.+8      	; 0x2504 <dtoa_prf+0x3c>
    24fc:	ff 24       	eor	r15, r15
    24fe:	f3 94       	inc	r15
    2500:	f0 0e       	add	r15, r16
    2502:	02 c0       	rjmp	.+4      	; 0x2508 <dtoa_prf+0x40>
    2504:	4c e3       	ldi	r20, 0x3C	; 60
    2506:	f4 2e       	mov	r15, r20
    2508:	0f 2d       	mov	r16, r15
    250a:	27 e0       	ldi	r18, 0x07	; 7
    250c:	ae 01       	movw	r20, r28
    250e:	4f 5f       	subi	r20, 0xFF	; 255
    2510:	5f 4f       	sbci	r21, 0xFF	; 255
    2512:	bf d2       	rcall	.+1406   	; 0x2a92 <__ftoa_engine>
    2514:	79 81       	ldd	r23, Y+1	; 0x01
    2516:	27 2f       	mov	r18, r23
    2518:	29 70       	andi	r18, 0x09	; 9
    251a:	21 30       	cpi	r18, 0x01	; 1
    251c:	31 f0       	breq	.+12     	; 0x252a <dtoa_prf+0x62>
    251e:	e1 fc       	sbrc	r14, 1
    2520:	06 c0       	rjmp	.+12     	; 0x252e <dtoa_prf+0x66>
    2522:	e0 fc       	sbrc	r14, 0
    2524:	06 c0       	rjmp	.+12     	; 0x2532 <dtoa_prf+0x6a>
    2526:	60 e0       	ldi	r22, 0x00	; 0
    2528:	05 c0       	rjmp	.+10     	; 0x2534 <dtoa_prf+0x6c>
    252a:	6d e2       	ldi	r22, 0x2D	; 45
    252c:	03 c0       	rjmp	.+6      	; 0x2534 <dtoa_prf+0x6c>
    252e:	6b e2       	ldi	r22, 0x2B	; 43
    2530:	01 c0       	rjmp	.+2      	; 0x2534 <dtoa_prf+0x6c>
    2532:	60 e2       	ldi	r22, 0x20	; 32
    2534:	ae 2d       	mov	r26, r14
    2536:	a0 71       	andi	r26, 0x10	; 16
    2538:	73 ff       	sbrs	r23, 3
    253a:	36 c0       	rjmp	.+108    	; 0x25a8 <dtoa_prf+0xe0>
    253c:	66 23       	and	r22, r22
    253e:	11 f0       	breq	.+4      	; 0x2544 <dtoa_prf+0x7c>
    2540:	84 e0       	ldi	r24, 0x04	; 4
    2542:	01 c0       	rjmp	.+2      	; 0x2546 <dtoa_prf+0x7e>
    2544:	83 e0       	ldi	r24, 0x03	; 3
    2546:	8b 15       	cp	r24, r11
    2548:	10 f4       	brcc	.+4      	; 0x254e <dtoa_prf+0x86>
    254a:	b8 1a       	sub	r11, r24
    254c:	01 c0       	rjmp	.+2      	; 0x2550 <dtoa_prf+0x88>
    254e:	b1 2c       	mov	r11, r1
    2550:	a1 11       	cpse	r26, r1
    2552:	0b c0       	rjmp	.+22     	; 0x256a <dtoa_prf+0xa2>
    2554:	f6 01       	movw	r30, r12
    2556:	8b 2d       	mov	r24, r11
    2558:	90 e2       	ldi	r25, 0x20	; 32
    255a:	88 23       	and	r24, r24
    255c:	19 f0       	breq	.+6      	; 0x2564 <dtoa_prf+0x9c>
    255e:	91 93       	st	Z+, r25
    2560:	81 50       	subi	r24, 0x01	; 1
    2562:	fb cf       	rjmp	.-10     	; 0x255a <dtoa_prf+0x92>
    2564:	cb 0c       	add	r12, r11
    2566:	d1 1c       	adc	r13, r1
    2568:	b1 2c       	mov	r11, r1
    256a:	66 23       	and	r22, r22
    256c:	31 f0       	breq	.+12     	; 0x257a <dtoa_prf+0xb2>
    256e:	f6 01       	movw	r30, r12
    2570:	60 83       	st	Z, r22
    2572:	96 01       	movw	r18, r12
    2574:	2f 5f       	subi	r18, 0xFF	; 255
    2576:	3f 4f       	sbci	r19, 0xFF	; 255
    2578:	69 01       	movw	r12, r18
    257a:	c6 01       	movw	r24, r12
    257c:	03 96       	adiw	r24, 0x03	; 3
    257e:	e2 fe       	sbrs	r14, 2
    2580:	05 c0       	rjmp	.+10     	; 0x258c <dtoa_prf+0xc4>
    2582:	2e e4       	ldi	r18, 0x4E	; 78
    2584:	f6 01       	movw	r30, r12
    2586:	20 83       	st	Z, r18
    2588:	31 e4       	ldi	r19, 0x41	; 65
    258a:	04 c0       	rjmp	.+8      	; 0x2594 <dtoa_prf+0xcc>
    258c:	2e e6       	ldi	r18, 0x6E	; 110
    258e:	f6 01       	movw	r30, r12
    2590:	20 83       	st	Z, r18
    2592:	31 e6       	ldi	r19, 0x61	; 97
    2594:	31 83       	std	Z+1, r19	; 0x01
    2596:	22 83       	std	Z+2, r18	; 0x02
    2598:	fc 01       	movw	r30, r24
    259a:	2b 2d       	mov	r18, r11
    259c:	30 e2       	ldi	r19, 0x20	; 32
    259e:	22 23       	and	r18, r18
    25a0:	f1 f1       	breq	.+124    	; 0x261e <dtoa_prf+0x156>
    25a2:	31 93       	st	Z+, r19
    25a4:	21 50       	subi	r18, 0x01	; 1
    25a6:	fb cf       	rjmp	.-10     	; 0x259e <dtoa_prf+0xd6>
    25a8:	72 ff       	sbrs	r23, 2
    25aa:	40 c0       	rjmp	.+128    	; 0x262c <dtoa_prf+0x164>
    25ac:	66 23       	and	r22, r22
    25ae:	11 f0       	breq	.+4      	; 0x25b4 <dtoa_prf+0xec>
    25b0:	84 e0       	ldi	r24, 0x04	; 4
    25b2:	01 c0       	rjmp	.+2      	; 0x25b6 <dtoa_prf+0xee>
    25b4:	83 e0       	ldi	r24, 0x03	; 3
    25b6:	8b 15       	cp	r24, r11
    25b8:	10 f4       	brcc	.+4      	; 0x25be <dtoa_prf+0xf6>
    25ba:	b8 1a       	sub	r11, r24
    25bc:	01 c0       	rjmp	.+2      	; 0x25c0 <dtoa_prf+0xf8>
    25be:	b1 2c       	mov	r11, r1
    25c0:	a1 11       	cpse	r26, r1
    25c2:	0b c0       	rjmp	.+22     	; 0x25da <dtoa_prf+0x112>
    25c4:	f6 01       	movw	r30, r12
    25c6:	8b 2d       	mov	r24, r11
    25c8:	90 e2       	ldi	r25, 0x20	; 32
    25ca:	88 23       	and	r24, r24
    25cc:	19 f0       	breq	.+6      	; 0x25d4 <dtoa_prf+0x10c>
    25ce:	91 93       	st	Z+, r25
    25d0:	81 50       	subi	r24, 0x01	; 1
    25d2:	fb cf       	rjmp	.-10     	; 0x25ca <dtoa_prf+0x102>
    25d4:	cb 0c       	add	r12, r11
    25d6:	d1 1c       	adc	r13, r1
    25d8:	b1 2c       	mov	r11, r1
    25da:	66 23       	and	r22, r22
    25dc:	31 f0       	breq	.+12     	; 0x25ea <dtoa_prf+0x122>
    25de:	f6 01       	movw	r30, r12
    25e0:	60 83       	st	Z, r22
    25e2:	96 01       	movw	r18, r12
    25e4:	2f 5f       	subi	r18, 0xFF	; 255
    25e6:	3f 4f       	sbci	r19, 0xFF	; 255
    25e8:	69 01       	movw	r12, r18
    25ea:	c6 01       	movw	r24, r12
    25ec:	03 96       	adiw	r24, 0x03	; 3
    25ee:	e2 fe       	sbrs	r14, 2
    25f0:	07 c0       	rjmp	.+14     	; 0x2600 <dtoa_prf+0x138>
    25f2:	29 e4       	ldi	r18, 0x49	; 73
    25f4:	f6 01       	movw	r30, r12
    25f6:	20 83       	st	Z, r18
    25f8:	2e e4       	ldi	r18, 0x4E	; 78
    25fa:	21 83       	std	Z+1, r18	; 0x01
    25fc:	26 e4       	ldi	r18, 0x46	; 70
    25fe:	06 c0       	rjmp	.+12     	; 0x260c <dtoa_prf+0x144>
    2600:	29 e6       	ldi	r18, 0x69	; 105
    2602:	f6 01       	movw	r30, r12
    2604:	20 83       	st	Z, r18
    2606:	2e e6       	ldi	r18, 0x6E	; 110
    2608:	21 83       	std	Z+1, r18	; 0x01
    260a:	26 e6       	ldi	r18, 0x66	; 102
    260c:	22 83       	std	Z+2, r18	; 0x02
    260e:	fc 01       	movw	r30, r24
    2610:	2b 2d       	mov	r18, r11
    2612:	30 e2       	ldi	r19, 0x20	; 32
    2614:	22 23       	and	r18, r18
    2616:	19 f0       	breq	.+6      	; 0x261e <dtoa_prf+0x156>
    2618:	31 93       	st	Z+, r19
    261a:	21 50       	subi	r18, 0x01	; 1
    261c:	fb cf       	rjmp	.-10     	; 0x2614 <dtoa_prf+0x14c>
    261e:	fc 01       	movw	r30, r24
    2620:	eb 0d       	add	r30, r11
    2622:	f1 1d       	adc	r31, r1
    2624:	10 82       	st	Z, r1
    2626:	8e ef       	ldi	r24, 0xFE	; 254
    2628:	9f ef       	ldi	r25, 0xFF	; 255
    262a:	b7 c0       	rjmp	.+366    	; 0x279a <dtoa_prf+0x2d2>
    262c:	b1 e0       	ldi	r27, 0x01	; 1
    262e:	61 11       	cpse	r22, r1
    2630:	01 c0       	rjmp	.+2      	; 0x2634 <dtoa_prf+0x16c>
    2632:	b0 e0       	ldi	r27, 0x00	; 0
    2634:	4b 2f       	mov	r20, r27
    2636:	50 e0       	ldi	r21, 0x00	; 0
    2638:	18 16       	cp	r1, r24
    263a:	19 06       	cpc	r1, r25
    263c:	24 f4       	brge	.+8      	; 0x2646 <dtoa_prf+0x17e>
    263e:	9c 01       	movw	r18, r24
    2640:	2f 5f       	subi	r18, 0xFF	; 255
    2642:	3f 4f       	sbci	r19, 0xFF	; 255
    2644:	02 c0       	rjmp	.+4      	; 0x264a <dtoa_prf+0x182>
    2646:	21 e0       	ldi	r18, 0x01	; 1
    2648:	30 e0       	ldi	r19, 0x00	; 0
    264a:	24 0f       	add	r18, r20
    264c:	35 1f       	adc	r19, r21
    264e:	11 23       	and	r17, r17
    2650:	29 f0       	breq	.+10     	; 0x265c <dtoa_prf+0x194>
    2652:	41 2f       	mov	r20, r17
    2654:	50 e0       	ldi	r21, 0x00	; 0
    2656:	4f 5f       	subi	r20, 0xFF	; 255
    2658:	5f 4f       	sbci	r21, 0xFF	; 255
    265a:	02 c0       	rjmp	.+4      	; 0x2660 <dtoa_prf+0x198>
    265c:	40 e0       	ldi	r20, 0x00	; 0
    265e:	50 e0       	ldi	r21, 0x00	; 0
    2660:	42 0f       	add	r20, r18
    2662:	53 1f       	adc	r21, r19
    2664:	2b 2d       	mov	r18, r11
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	42 17       	cp	r20, r18
    266a:	53 07       	cpc	r21, r19
    266c:	14 f4       	brge	.+4      	; 0x2672 <dtoa_prf+0x1aa>
    266e:	b4 1a       	sub	r11, r20
    2670:	01 c0       	rjmp	.+2      	; 0x2674 <dtoa_prf+0x1ac>
    2672:	b1 2c       	mov	r11, r1
    2674:	2e 2d       	mov	r18, r14
    2676:	28 71       	andi	r18, 0x18	; 24
    2678:	59 f4       	brne	.+22     	; 0x2690 <dtoa_prf+0x1c8>
    267a:	f6 01       	movw	r30, r12
    267c:	2b 2d       	mov	r18, r11
    267e:	30 e2       	ldi	r19, 0x20	; 32
    2680:	22 23       	and	r18, r18
    2682:	19 f0       	breq	.+6      	; 0x268a <dtoa_prf+0x1c2>
    2684:	31 93       	st	Z+, r19
    2686:	21 50       	subi	r18, 0x01	; 1
    2688:	fb cf       	rjmp	.-10     	; 0x2680 <dtoa_prf+0x1b8>
    268a:	cb 0c       	add	r12, r11
    268c:	d1 1c       	adc	r13, r1
    268e:	b1 2c       	mov	r11, r1
    2690:	bb 23       	and	r27, r27
    2692:	31 f0       	breq	.+12     	; 0x26a0 <dtoa_prf+0x1d8>
    2694:	f6 01       	movw	r30, r12
    2696:	60 83       	st	Z, r22
    2698:	96 01       	movw	r18, r12
    269a:	2f 5f       	subi	r18, 0xFF	; 255
    269c:	3f 4f       	sbci	r19, 0xFF	; 255
    269e:	69 01       	movw	r12, r18
    26a0:	a1 11       	cpse	r26, r1
    26a2:	0b c0       	rjmp	.+22     	; 0x26ba <dtoa_prf+0x1f2>
    26a4:	f6 01       	movw	r30, r12
    26a6:	2b 2d       	mov	r18, r11
    26a8:	30 e3       	ldi	r19, 0x30	; 48
    26aa:	22 23       	and	r18, r18
    26ac:	19 f0       	breq	.+6      	; 0x26b4 <dtoa_prf+0x1ec>
    26ae:	31 93       	st	Z+, r19
    26b0:	21 50       	subi	r18, 0x01	; 1
    26b2:	fb cf       	rjmp	.-10     	; 0x26aa <dtoa_prf+0x1e2>
    26b4:	cb 0c       	add	r12, r11
    26b6:	d1 1c       	adc	r13, r1
    26b8:	b1 2c       	mov	r11, r1
    26ba:	f8 0e       	add	r15, r24
    26bc:	0a 81       	ldd	r16, Y+2	; 0x02
    26be:	37 2f       	mov	r19, r23
    26c0:	30 71       	andi	r19, 0x10	; 16
    26c2:	a3 2e       	mov	r10, r19
    26c4:	74 ff       	sbrs	r23, 4
    26c6:	03 c0       	rjmp	.+6      	; 0x26ce <dtoa_prf+0x206>
    26c8:	01 33       	cpi	r16, 0x31	; 49
    26ca:	09 f4       	brne	.+2      	; 0x26ce <dtoa_prf+0x206>
    26cc:	fa 94       	dec	r15
    26ce:	1f 14       	cp	r1, r15
    26d0:	2c f4       	brge	.+10     	; 0x26dc <dtoa_prf+0x214>
    26d2:	2f 2d       	mov	r18, r15
    26d4:	29 30       	cpi	r18, 0x09	; 9
    26d6:	18 f0       	brcs	.+6      	; 0x26de <dtoa_prf+0x216>
    26d8:	28 e0       	ldi	r18, 0x08	; 8
    26da:	01 c0       	rjmp	.+2      	; 0x26de <dtoa_prf+0x216>
    26dc:	21 e0       	ldi	r18, 0x01	; 1
    26de:	68 2f       	mov	r22, r24
    26e0:	39 2f       	mov	r19, r25
    26e2:	97 ff       	sbrs	r25, 7
    26e4:	02 c0       	rjmp	.+4      	; 0x26ea <dtoa_prf+0x222>
    26e6:	60 e0       	ldi	r22, 0x00	; 0
    26e8:	30 e0       	ldi	r19, 0x00	; 0
    26ea:	46 2f       	mov	r20, r22
    26ec:	53 2f       	mov	r21, r19
    26ee:	61 2c       	mov	r6, r1
    26f0:	71 2c       	mov	r7, r1
    26f2:	3e e2       	ldi	r19, 0x2E	; 46
    26f4:	93 2e       	mov	r9, r19
    26f6:	bc 01       	movw	r22, r24
    26f8:	62 1b       	sub	r22, r18
    26fa:	71 09       	sbc	r23, r1
    26fc:	9b 01       	movw	r18, r22
    26fe:	dc 01       	movw	r26, r24
    2700:	a4 1b       	sub	r26, r20
    2702:	b5 0b       	sbc	r27, r21
    2704:	e1 e0       	ldi	r30, 0x01	; 1
    2706:	f0 e0       	ldi	r31, 0x00	; 0
    2708:	ec 0f       	add	r30, r28
    270a:	fd 1f       	adc	r31, r29
    270c:	ae 0f       	add	r26, r30
    270e:	bf 1f       	adc	r27, r31
    2710:	e1 2e       	mov	r14, r17
    2712:	f1 2c       	mov	r15, r1
    2714:	f1 94       	neg	r15
    2716:	e1 94       	neg	r14
    2718:	f1 08       	sbc	r15, r1
    271a:	4f 3f       	cpi	r20, 0xFF	; 255
    271c:	ff ef       	ldi	r31, 0xFF	; 255
    271e:	5f 07       	cpc	r21, r31
    2720:	31 f4       	brne	.+12     	; 0x272e <dtoa_prf+0x266>
    2722:	f6 01       	movw	r30, r12
    2724:	90 82       	st	Z, r9
    2726:	b6 01       	movw	r22, r12
    2728:	6f 5f       	subi	r22, 0xFF	; 255
    272a:	7f 4f       	sbci	r23, 0xFF	; 255
    272c:	6b 01       	movw	r12, r22
    272e:	84 17       	cp	r24, r20
    2730:	95 07       	cpc	r25, r21
    2732:	4c f0       	brlt	.+18     	; 0x2746 <dtoa_prf+0x27e>
    2734:	24 17       	cp	r18, r20
    2736:	35 07       	cpc	r19, r21
    2738:	34 f4       	brge	.+12     	; 0x2746 <dtoa_prf+0x27e>
    273a:	bd 01       	movw	r22, r26
    273c:	66 0d       	add	r22, r6
    273e:	77 1d       	adc	r23, r7
    2740:	fb 01       	movw	r30, r22
    2742:	11 81       	ldd	r17, Z+1	; 0x01
    2744:	01 c0       	rjmp	.+2      	; 0x2748 <dtoa_prf+0x280>
    2746:	10 e3       	ldi	r17, 0x30	; 48
    2748:	41 50       	subi	r20, 0x01	; 1
    274a:	51 09       	sbc	r21, r1
    274c:	ff ef       	ldi	r31, 0xFF	; 255
    274e:	6f 1a       	sub	r6, r31
    2750:	7f 0a       	sbc	r7, r31
    2752:	b6 01       	movw	r22, r12
    2754:	6f 5f       	subi	r22, 0xFF	; 255
    2756:	7f 4f       	sbci	r23, 0xFF	; 255
    2758:	4e 15       	cp	r20, r14
    275a:	5f 05       	cpc	r21, r15
    275c:	24 f0       	brlt	.+8      	; 0x2766 <dtoa_prf+0x29e>
    275e:	f6 01       	movw	r30, r12
    2760:	10 83       	st	Z, r17
    2762:	6b 01       	movw	r12, r22
    2764:	da cf       	rjmp	.-76     	; 0x271a <dtoa_prf+0x252>
    2766:	48 17       	cp	r20, r24
    2768:	59 07       	cpc	r21, r25
    276a:	39 f4       	brne	.+14     	; 0x277a <dtoa_prf+0x2b2>
    276c:	06 33       	cpi	r16, 0x36	; 54
    276e:	20 f4       	brcc	.+8      	; 0x2778 <dtoa_prf+0x2b0>
    2770:	05 33       	cpi	r16, 0x35	; 53
    2772:	19 f4       	brne	.+6      	; 0x277a <dtoa_prf+0x2b2>
    2774:	a1 10       	cpse	r10, r1
    2776:	01 c0       	rjmp	.+2      	; 0x277a <dtoa_prf+0x2b2>
    2778:	11 e3       	ldi	r17, 0x31	; 49
    277a:	f6 01       	movw	r30, r12
    277c:	10 83       	st	Z, r17
    277e:	fb 01       	movw	r30, r22
    2780:	8b 2d       	mov	r24, r11
    2782:	90 e2       	ldi	r25, 0x20	; 32
    2784:	88 23       	and	r24, r24
    2786:	19 f0       	breq	.+6      	; 0x278e <dtoa_prf+0x2c6>
    2788:	91 93       	st	Z+, r25
    278a:	81 50       	subi	r24, 0x01	; 1
    278c:	fb cf       	rjmp	.-10     	; 0x2784 <dtoa_prf+0x2bc>
    278e:	fb 01       	movw	r30, r22
    2790:	eb 0d       	add	r30, r11
    2792:	f1 1d       	adc	r31, r1
    2794:	10 82       	st	Z, r1
    2796:	80 e0       	ldi	r24, 0x00	; 0
    2798:	90 e0       	ldi	r25, 0x00	; 0
    279a:	29 96       	adiw	r28, 0x09	; 9
    279c:	0f b6       	in	r0, 0x3f	; 63
    279e:	f8 94       	cli
    27a0:	de bf       	out	0x3e, r29	; 62
    27a2:	0f be       	out	0x3f, r0	; 63
    27a4:	cd bf       	out	0x3d, r28	; 61
    27a6:	df 91       	pop	r29
    27a8:	cf 91       	pop	r28
    27aa:	1f 91       	pop	r17
    27ac:	0f 91       	pop	r16
    27ae:	ff 90       	pop	r15
    27b0:	ef 90       	pop	r14
    27b2:	df 90       	pop	r13
    27b4:	cf 90       	pop	r12
    27b6:	bf 90       	pop	r11
    27b8:	af 90       	pop	r10
    27ba:	9f 90       	pop	r9
    27bc:	7f 90       	pop	r7
    27be:	6f 90       	pop	r6
    27c0:	08 95       	ret

000027c2 <strtod>:
    27c2:	8f 92       	push	r8
    27c4:	9f 92       	push	r9
    27c6:	af 92       	push	r10
    27c8:	bf 92       	push	r11
    27ca:	cf 92       	push	r12
    27cc:	df 92       	push	r13
    27ce:	ef 92       	push	r14
    27d0:	ff 92       	push	r15
    27d2:	0f 93       	push	r16
    27d4:	1f 93       	push	r17
    27d6:	cf 93       	push	r28
    27d8:	df 93       	push	r29
    27da:	8b 01       	movw	r16, r22
    27dc:	61 15       	cp	r22, r1
    27de:	71 05       	cpc	r23, r1
    27e0:	21 f0       	breq	.+8      	; 0x27ea <strtod+0x28>
    27e2:	db 01       	movw	r26, r22
    27e4:	8c 93       	st	X, r24
    27e6:	11 96       	adiw	r26, 0x01	; 1
    27e8:	9c 93       	st	X, r25
    27ea:	ec 01       	movw	r28, r24
    27ec:	5e 01       	movw	r10, r28
    27ee:	bf ef       	ldi	r27, 0xFF	; 255
    27f0:	ab 1a       	sub	r10, r27
    27f2:	bb 0a       	sbc	r11, r27
    27f4:	75 01       	movw	r14, r10
    27f6:	c8 80       	ld	r12, Y
    27f8:	8c 2d       	mov	r24, r12
    27fa:	90 e0       	ldi	r25, 0x00	; 0
    27fc:	22 d2       	rcall	.+1092   	; 0x2c42 <isspace>
    27fe:	89 2b       	or	r24, r25
    2800:	11 f0       	breq	.+4      	; 0x2806 <strtod+0x44>
    2802:	e5 01       	movw	r28, r10
    2804:	f3 cf       	rjmp	.-26     	; 0x27ec <strtod+0x2a>
    2806:	ed e2       	ldi	r30, 0x2D	; 45
    2808:	ce 12       	cpse	r12, r30
    280a:	08 c0       	rjmp	.+16     	; 0x281c <strtod+0x5a>
    280c:	7e 01       	movw	r14, r28
    280e:	f2 e0       	ldi	r31, 0x02	; 2
    2810:	ef 0e       	add	r14, r31
    2812:	f1 1c       	adc	r15, r1
    2814:	c9 80       	ldd	r12, Y+1	; 0x01
    2816:	dd 24       	eor	r13, r13
    2818:	d3 94       	inc	r13
    281a:	09 c0       	rjmp	.+18     	; 0x282e <strtod+0x6c>
    281c:	2b e2       	ldi	r18, 0x2B	; 43
    281e:	c2 12       	cpse	r12, r18
    2820:	05 c0       	rjmp	.+10     	; 0x282c <strtod+0x6a>
    2822:	7e 01       	movw	r14, r28
    2824:	42 e0       	ldi	r20, 0x02	; 2
    2826:	e4 0e       	add	r14, r20
    2828:	f1 1c       	adc	r15, r1
    282a:	c9 80       	ldd	r12, Y+1	; 0x01
    282c:	d1 2c       	mov	r13, r1
    282e:	e7 01       	movw	r28, r14
    2830:	21 97       	sbiw	r28, 0x01	; 1
    2832:	43 e0       	ldi	r20, 0x03	; 3
    2834:	50 e0       	ldi	r21, 0x00	; 0
    2836:	68 e3       	ldi	r22, 0x38	; 56
    2838:	71 e0       	ldi	r23, 0x01	; 1
    283a:	ce 01       	movw	r24, r28
    283c:	0a d2       	rcall	.+1044   	; 0x2c52 <strncasecmp_P>
    283e:	89 2b       	or	r24, r25
    2840:	b9 f4       	brne	.+46     	; 0x2870 <strtod+0xae>
    2842:	23 96       	adiw	r28, 0x03	; 3
    2844:	45 e0       	ldi	r20, 0x05	; 5
    2846:	50 e0       	ldi	r21, 0x00	; 0
    2848:	63 e3       	ldi	r22, 0x33	; 51
    284a:	71 e0       	ldi	r23, 0x01	; 1
    284c:	ce 01       	movw	r24, r28
    284e:	01 d2       	rcall	.+1026   	; 0x2c52 <strncasecmp_P>
    2850:	89 2b       	or	r24, r25
    2852:	09 f4       	brne	.+2      	; 0x2856 <strtod+0x94>
    2854:	25 96       	adiw	r28, 0x05	; 5
    2856:	01 15       	cp	r16, r1
    2858:	11 05       	cpc	r17, r1
    285a:	19 f0       	breq	.+6      	; 0x2862 <strtod+0xa0>
    285c:	d8 01       	movw	r26, r16
    285e:	cd 93       	st	X+, r28
    2860:	dc 93       	st	X, r29
    2862:	d1 10       	cpse	r13, r1
    2864:	00 c1       	rjmp	.+512    	; 0x2a66 <strtod+0x2a4>
    2866:	60 e0       	ldi	r22, 0x00	; 0
    2868:	70 e0       	ldi	r23, 0x00	; 0
    286a:	80 e8       	ldi	r24, 0x80	; 128
    286c:	9f e7       	ldi	r25, 0x7F	; 127
    286e:	04 c1       	rjmp	.+520    	; 0x2a78 <strtod+0x2b6>
    2870:	43 e0       	ldi	r20, 0x03	; 3
    2872:	50 e0       	ldi	r21, 0x00	; 0
    2874:	60 e3       	ldi	r22, 0x30	; 48
    2876:	71 e0       	ldi	r23, 0x01	; 1
    2878:	ce 01       	movw	r24, r28
    287a:	eb d1       	rcall	.+982    	; 0x2c52 <strncasecmp_P>
    287c:	89 2b       	or	r24, r25
    287e:	59 f4       	brne	.+22     	; 0x2896 <strtod+0xd4>
    2880:	01 15       	cp	r16, r1
    2882:	11 05       	cpc	r17, r1
    2884:	09 f4       	brne	.+2      	; 0x2888 <strtod+0xc6>
    2886:	f4 c0       	rjmp	.+488    	; 0x2a70 <strtod+0x2ae>
    2888:	b2 e0       	ldi	r27, 0x02	; 2
    288a:	eb 0e       	add	r14, r27
    288c:	f1 1c       	adc	r15, r1
    288e:	f8 01       	movw	r30, r16
    2890:	f1 82       	std	Z+1, r15	; 0x01
    2892:	e0 82       	st	Z, r14
    2894:	ed c0       	rjmp	.+474    	; 0x2a70 <strtod+0x2ae>
    2896:	f7 01       	movw	r30, r14
    2898:	60 e0       	ldi	r22, 0x00	; 0
    289a:	70 e0       	ldi	r23, 0x00	; 0
    289c:	cb 01       	movw	r24, r22
    289e:	c0 e0       	ldi	r28, 0x00	; 0
    28a0:	d0 e0       	ldi	r29, 0x00	; 0
    28a2:	7f 01       	movw	r14, r30
    28a4:	a0 ed       	ldi	r26, 0xD0	; 208
    28a6:	aa 2e       	mov	r10, r26
    28a8:	ac 0c       	add	r10, r12
    28aa:	29 e0       	ldi	r18, 0x09	; 9
    28ac:	2a 15       	cp	r18, r10
    28ae:	28 f1       	brcs	.+74     	; 0x28fa <strtod+0x138>
    28b0:	4d 2d       	mov	r20, r13
    28b2:	42 60       	ori	r20, 0x02	; 2
    28b4:	b4 2e       	mov	r11, r20
    28b6:	2d 2d       	mov	r18, r13
    28b8:	28 70       	andi	r18, 0x08	; 8
    28ba:	d2 fe       	sbrs	r13, 2
    28bc:	04 c0       	rjmp	.+8      	; 0x28c6 <strtod+0x104>
    28be:	21 11       	cpse	r18, r1
    28c0:	24 c0       	rjmp	.+72     	; 0x290a <strtod+0x148>
    28c2:	21 96       	adiw	r28, 0x01	; 1
    28c4:	22 c0       	rjmp	.+68     	; 0x290a <strtod+0x148>
    28c6:	21 11       	cpse	r18, r1
    28c8:	21 97       	sbiw	r28, 0x01	; 1
    28ca:	a5 e0       	ldi	r26, 0x05	; 5
    28cc:	b0 e0       	ldi	r27, 0x00	; 0
    28ce:	9b 01       	movw	r18, r22
    28d0:	ac 01       	movw	r20, r24
    28d2:	ea d1       	rcall	.+980    	; 0x2ca8 <__muluhisi3>
    28d4:	66 0f       	add	r22, r22
    28d6:	77 1f       	adc	r23, r23
    28d8:	88 1f       	adc	r24, r24
    28da:	99 1f       	adc	r25, r25
    28dc:	6a 0d       	add	r22, r10
    28de:	71 1d       	adc	r23, r1
    28e0:	81 1d       	adc	r24, r1
    28e2:	91 1d       	adc	r25, r1
    28e4:	68 39       	cpi	r22, 0x98	; 152
    28e6:	a9 e9       	ldi	r26, 0x99	; 153
    28e8:	7a 07       	cpc	r23, r26
    28ea:	8a 07       	cpc	r24, r26
    28ec:	a9 e1       	ldi	r26, 0x19	; 25
    28ee:	9a 07       	cpc	r25, r26
    28f0:	60 f0       	brcs	.+24     	; 0x290a <strtod+0x148>
    28f2:	bd 2d       	mov	r27, r13
    28f4:	b6 60       	ori	r27, 0x06	; 6
    28f6:	bb 2e       	mov	r11, r27
    28f8:	08 c0       	rjmp	.+16     	; 0x290a <strtod+0x148>
    28fa:	2e ef       	ldi	r18, 0xFE	; 254
    28fc:	a2 12       	cpse	r10, r18
    28fe:	0a c0       	rjmp	.+20     	; 0x2914 <strtod+0x152>
    2900:	d3 fc       	sbrc	r13, 3
    2902:	50 c0       	rjmp	.+160    	; 0x29a4 <strtod+0x1e2>
    2904:	4d 2d       	mov	r20, r13
    2906:	48 60       	ori	r20, 0x08	; 8
    2908:	b4 2e       	mov	r11, r20
    290a:	31 96       	adiw	r30, 0x01	; 1
    290c:	d7 01       	movw	r26, r14
    290e:	cc 90       	ld	r12, X
    2910:	db 2c       	mov	r13, r11
    2912:	c7 cf       	rjmp	.-114    	; 0x28a2 <strtod+0xe0>
    2914:	2c 2d       	mov	r18, r12
    2916:	2f 7d       	andi	r18, 0xDF	; 223
    2918:	25 34       	cpi	r18, 0x45	; 69
    291a:	09 f0       	breq	.+2      	; 0x291e <strtod+0x15c>
    291c:	43 c0       	rjmp	.+134    	; 0x29a4 <strtod+0x1e2>
    291e:	a0 81       	ld	r26, Z
    2920:	ad 32       	cpi	r26, 0x2D	; 45
    2922:	41 f4       	brne	.+16     	; 0x2934 <strtod+0x172>
    2924:	bd 2d       	mov	r27, r13
    2926:	b0 61       	ori	r27, 0x10	; 16
    2928:	db 2e       	mov	r13, r27
    292a:	7f 01       	movw	r14, r30
    292c:	22 e0       	ldi	r18, 0x02	; 2
    292e:	e2 0e       	add	r14, r18
    2930:	f1 1c       	adc	r15, r1
    2932:	0c c0       	rjmp	.+24     	; 0x294c <strtod+0x18a>
    2934:	7f 01       	movw	r14, r30
    2936:	ab 32       	cpi	r26, 0x2B	; 43
    2938:	31 f0       	breq	.+12     	; 0x2946 <strtod+0x184>
    293a:	4f ef       	ldi	r20, 0xFF	; 255
    293c:	e4 1a       	sub	r14, r20
    293e:	f4 0a       	sbc	r15, r20
    2940:	21 e0       	ldi	r18, 0x01	; 1
    2942:	30 e0       	ldi	r19, 0x00	; 0
    2944:	06 c0       	rjmp	.+12     	; 0x2952 <strtod+0x190>
    2946:	a2 e0       	ldi	r26, 0x02	; 2
    2948:	ea 0e       	add	r14, r26
    294a:	f1 1c       	adc	r15, r1
    294c:	a1 81       	ldd	r26, Z+1	; 0x01
    294e:	22 e0       	ldi	r18, 0x02	; 2
    2950:	30 e0       	ldi	r19, 0x00	; 0
    2952:	a0 53       	subi	r26, 0x30	; 48
    2954:	aa 30       	cpi	r26, 0x0A	; 10
    2956:	18 f0       	brcs	.+6      	; 0x295e <strtod+0x19c>
    2958:	e2 1a       	sub	r14, r18
    295a:	f3 0a       	sbc	r15, r19
    295c:	23 c0       	rjmp	.+70     	; 0x29a4 <strtod+0x1e2>
    295e:	f7 01       	movw	r30, r14
    2960:	20 e0       	ldi	r18, 0x00	; 0
    2962:	30 e0       	ldi	r19, 0x00	; 0
    2964:	20 38       	cpi	r18, 0x80	; 128
    2966:	bc e0       	ldi	r27, 0x0C	; 12
    2968:	3b 07       	cpc	r19, r27
    296a:	5c f4       	brge	.+22     	; 0x2982 <strtod+0x1c0>
    296c:	a9 01       	movw	r20, r18
    296e:	44 0f       	add	r20, r20
    2970:	55 1f       	adc	r21, r21
    2972:	44 0f       	add	r20, r20
    2974:	55 1f       	adc	r21, r21
    2976:	24 0f       	add	r18, r20
    2978:	35 1f       	adc	r19, r21
    297a:	22 0f       	add	r18, r18
    297c:	33 1f       	adc	r19, r19
    297e:	2a 0f       	add	r18, r26
    2980:	31 1d       	adc	r19, r1
    2982:	af 01       	movw	r20, r30
    2984:	4f 5f       	subi	r20, 0xFF	; 255
    2986:	5f 4f       	sbci	r21, 0xFF	; 255
    2988:	7a 01       	movw	r14, r20
    298a:	a0 81       	ld	r26, Z
    298c:	a0 53       	subi	r26, 0x30	; 48
    298e:	aa 30       	cpi	r26, 0x0A	; 10
    2990:	10 f4       	brcc	.+4      	; 0x2996 <strtod+0x1d4>
    2992:	fa 01       	movw	r30, r20
    2994:	e7 cf       	rjmp	.-50     	; 0x2964 <strtod+0x1a2>
    2996:	d4 fe       	sbrs	r13, 4
    2998:	03 c0       	rjmp	.+6      	; 0x29a0 <strtod+0x1de>
    299a:	31 95       	neg	r19
    299c:	21 95       	neg	r18
    299e:	31 09       	sbc	r19, r1
    29a0:	c2 0f       	add	r28, r18
    29a2:	d3 1f       	adc	r29, r19
    29a4:	d1 fe       	sbrs	r13, 1
    29a6:	09 c0       	rjmp	.+18     	; 0x29ba <strtod+0x1f8>
    29a8:	01 15       	cp	r16, r1
    29aa:	11 05       	cpc	r17, r1
    29ac:	31 f0       	breq	.+12     	; 0x29ba <strtod+0x1f8>
    29ae:	e1 e0       	ldi	r30, 0x01	; 1
    29b0:	ee 1a       	sub	r14, r30
    29b2:	f1 08       	sbc	r15, r1
    29b4:	d8 01       	movw	r26, r16
    29b6:	ed 92       	st	X+, r14
    29b8:	fc 92       	st	X, r15
    29ba:	b8 da       	rcall	.-2704   	; 0x1f2c <__floatunsisf>
    29bc:	2d 2d       	mov	r18, r13
    29be:	23 70       	andi	r18, 0x03	; 3
    29c0:	23 30       	cpi	r18, 0x03	; 3
    29c2:	19 f0       	breq	.+6      	; 0x29ca <strtod+0x208>
    29c4:	4b 01       	movw	r8, r22
    29c6:	5c 01       	movw	r10, r24
    29c8:	06 c0       	rjmp	.+12     	; 0x29d6 <strtod+0x214>
    29ca:	4b 01       	movw	r8, r22
    29cc:	5c 01       	movw	r10, r24
    29ce:	b7 fa       	bst	r11, 7
    29d0:	b0 94       	com	r11
    29d2:	b7 f8       	bld	r11, 7
    29d4:	b0 94       	com	r11
    29d6:	20 e0       	ldi	r18, 0x00	; 0
    29d8:	30 e0       	ldi	r19, 0x00	; 0
    29da:	a9 01       	movw	r20, r18
    29dc:	c5 01       	movw	r24, r10
    29de:	b4 01       	movw	r22, r8
    29e0:	05 da       	rcall	.-3062   	; 0x1dec <__cmpsf2>
    29e2:	88 23       	and	r24, r24
    29e4:	09 f4       	brne	.+2      	; 0x29e8 <strtod+0x226>
    29e6:	3c c0       	rjmp	.+120    	; 0x2a60 <strtod+0x29e>
    29e8:	d7 ff       	sbrs	r29, 7
    29ea:	06 c0       	rjmp	.+12     	; 0x29f8 <strtod+0x236>
    29ec:	d1 95       	neg	r29
    29ee:	c1 95       	neg	r28
    29f0:	d1 09       	sbc	r29, r1
    29f2:	0f e4       	ldi	r16, 0x4F	; 79
    29f4:	11 e0       	ldi	r17, 0x01	; 1
    29f6:	02 c0       	rjmp	.+4      	; 0x29fc <strtod+0x23a>
    29f8:	07 e6       	ldi	r16, 0x67	; 103
    29fa:	11 e0       	ldi	r17, 0x01	; 1
    29fc:	68 01       	movw	r12, r16
    29fe:	b8 e1       	ldi	r27, 0x18	; 24
    2a00:	cb 1a       	sub	r12, r27
    2a02:	d1 08       	sbc	r13, r1
    2a04:	90 e2       	ldi	r25, 0x20	; 32
    2a06:	e9 2e       	mov	r14, r25
    2a08:	f1 2c       	mov	r15, r1
    2a0a:	ce 15       	cp	r28, r14
    2a0c:	df 05       	cpc	r29, r15
    2a0e:	6c f0       	brlt	.+26     	; 0x2a2a <strtod+0x268>
    2a10:	f8 01       	movw	r30, r16
    2a12:	25 91       	lpm	r18, Z+
    2a14:	35 91       	lpm	r19, Z+
    2a16:	45 91       	lpm	r20, Z+
    2a18:	54 91       	lpm	r21, Z
    2a1a:	c5 01       	movw	r24, r10
    2a1c:	b4 01       	movw	r22, r8
    2a1e:	f4 db       	rcall	.-2072   	; 0x2208 <__mulsf3>
    2a20:	4b 01       	movw	r8, r22
    2a22:	5c 01       	movw	r10, r24
    2a24:	ce 19       	sub	r28, r14
    2a26:	df 09       	sbc	r29, r15
    2a28:	f0 cf       	rjmp	.-32     	; 0x2a0a <strtod+0x248>
    2a2a:	04 50       	subi	r16, 0x04	; 4
    2a2c:	11 09       	sbc	r17, r1
    2a2e:	f5 94       	asr	r15
    2a30:	e7 94       	ror	r14
    2a32:	0c 15       	cp	r16, r12
    2a34:	1d 05       	cpc	r17, r13
    2a36:	49 f7       	brne	.-46     	; 0x2a0a <strtod+0x248>
    2a38:	8a 2d       	mov	r24, r10
    2a3a:	88 0f       	add	r24, r24
    2a3c:	8b 2d       	mov	r24, r11
    2a3e:	88 1f       	adc	r24, r24
    2a40:	8f 3f       	cpi	r24, 0xFF	; 255
    2a42:	41 f0       	breq	.+16     	; 0x2a54 <strtod+0x292>
    2a44:	20 e0       	ldi	r18, 0x00	; 0
    2a46:	30 e0       	ldi	r19, 0x00	; 0
    2a48:	a9 01       	movw	r20, r18
    2a4a:	c5 01       	movw	r24, r10
    2a4c:	b4 01       	movw	r22, r8
    2a4e:	ce d9       	rcall	.-3172   	; 0x1dec <__cmpsf2>
    2a50:	81 11       	cpse	r24, r1
    2a52:	06 c0       	rjmp	.+12     	; 0x2a60 <strtod+0x29e>
    2a54:	82 e2       	ldi	r24, 0x22	; 34
    2a56:	90 e0       	ldi	r25, 0x00	; 0
    2a58:	90 93 55 06 	sts	0x0655, r25
    2a5c:	80 93 54 06 	sts	0x0654, r24
    2a60:	c5 01       	movw	r24, r10
    2a62:	b4 01       	movw	r22, r8
    2a64:	09 c0       	rjmp	.+18     	; 0x2a78 <strtod+0x2b6>
    2a66:	60 e0       	ldi	r22, 0x00	; 0
    2a68:	70 e0       	ldi	r23, 0x00	; 0
    2a6a:	80 e8       	ldi	r24, 0x80	; 128
    2a6c:	9f ef       	ldi	r25, 0xFF	; 255
    2a6e:	04 c0       	rjmp	.+8      	; 0x2a78 <strtod+0x2b6>
    2a70:	60 e0       	ldi	r22, 0x00	; 0
    2a72:	70 e0       	ldi	r23, 0x00	; 0
    2a74:	80 ec       	ldi	r24, 0xC0	; 192
    2a76:	9f e7       	ldi	r25, 0x7F	; 127
    2a78:	df 91       	pop	r29
    2a7a:	cf 91       	pop	r28
    2a7c:	1f 91       	pop	r17
    2a7e:	0f 91       	pop	r16
    2a80:	ff 90       	pop	r15
    2a82:	ef 90       	pop	r14
    2a84:	df 90       	pop	r13
    2a86:	cf 90       	pop	r12
    2a88:	bf 90       	pop	r11
    2a8a:	af 90       	pop	r10
    2a8c:	9f 90       	pop	r9
    2a8e:	8f 90       	pop	r8
    2a90:	08 95       	ret

00002a92 <__ftoa_engine>:
    2a92:	28 30       	cpi	r18, 0x08	; 8
    2a94:	08 f0       	brcs	.+2      	; 0x2a98 <__ftoa_engine+0x6>
    2a96:	27 e0       	ldi	r18, 0x07	; 7
    2a98:	33 27       	eor	r19, r19
    2a9a:	da 01       	movw	r26, r20
    2a9c:	99 0f       	add	r25, r25
    2a9e:	31 1d       	adc	r19, r1
    2aa0:	87 fd       	sbrc	r24, 7
    2aa2:	91 60       	ori	r25, 0x01	; 1
    2aa4:	00 96       	adiw	r24, 0x00	; 0
    2aa6:	61 05       	cpc	r22, r1
    2aa8:	71 05       	cpc	r23, r1
    2aaa:	39 f4       	brne	.+14     	; 0x2aba <__ftoa_engine+0x28>
    2aac:	32 60       	ori	r19, 0x02	; 2
    2aae:	2e 5f       	subi	r18, 0xFE	; 254
    2ab0:	3d 93       	st	X+, r19
    2ab2:	30 e3       	ldi	r19, 0x30	; 48
    2ab4:	2a 95       	dec	r18
    2ab6:	e1 f7       	brne	.-8      	; 0x2ab0 <__ftoa_engine+0x1e>
    2ab8:	08 95       	ret
    2aba:	9f 3f       	cpi	r25, 0xFF	; 255
    2abc:	30 f0       	brcs	.+12     	; 0x2aca <__ftoa_engine+0x38>
    2abe:	80 38       	cpi	r24, 0x80	; 128
    2ac0:	71 05       	cpc	r23, r1
    2ac2:	61 05       	cpc	r22, r1
    2ac4:	09 f0       	breq	.+2      	; 0x2ac8 <__ftoa_engine+0x36>
    2ac6:	3c 5f       	subi	r19, 0xFC	; 252
    2ac8:	3c 5f       	subi	r19, 0xFC	; 252
    2aca:	3d 93       	st	X+, r19
    2acc:	91 30       	cpi	r25, 0x01	; 1
    2ace:	08 f0       	brcs	.+2      	; 0x2ad2 <__ftoa_engine+0x40>
    2ad0:	80 68       	ori	r24, 0x80	; 128
    2ad2:	91 1d       	adc	r25, r1
    2ad4:	df 93       	push	r29
    2ad6:	cf 93       	push	r28
    2ad8:	1f 93       	push	r17
    2ada:	0f 93       	push	r16
    2adc:	ff 92       	push	r15
    2ade:	ef 92       	push	r14
    2ae0:	19 2f       	mov	r17, r25
    2ae2:	98 7f       	andi	r25, 0xF8	; 248
    2ae4:	96 95       	lsr	r25
    2ae6:	e9 2f       	mov	r30, r25
    2ae8:	96 95       	lsr	r25
    2aea:	96 95       	lsr	r25
    2aec:	e9 0f       	add	r30, r25
    2aee:	ff 27       	eor	r31, r31
    2af0:	eb 53       	subi	r30, 0x3B	; 59
    2af2:	fe 4f       	sbci	r31, 0xFE	; 254
    2af4:	99 27       	eor	r25, r25
    2af6:	33 27       	eor	r19, r19
    2af8:	ee 24       	eor	r14, r14
    2afa:	ff 24       	eor	r15, r15
    2afc:	a7 01       	movw	r20, r14
    2afe:	e7 01       	movw	r28, r14
    2b00:	05 90       	lpm	r0, Z+
    2b02:	08 94       	sec
    2b04:	07 94       	ror	r0
    2b06:	28 f4       	brcc	.+10     	; 0x2b12 <__ftoa_engine+0x80>
    2b08:	36 0f       	add	r19, r22
    2b0a:	e7 1e       	adc	r14, r23
    2b0c:	f8 1e       	adc	r15, r24
    2b0e:	49 1f       	adc	r20, r25
    2b10:	51 1d       	adc	r21, r1
    2b12:	66 0f       	add	r22, r22
    2b14:	77 1f       	adc	r23, r23
    2b16:	88 1f       	adc	r24, r24
    2b18:	99 1f       	adc	r25, r25
    2b1a:	06 94       	lsr	r0
    2b1c:	a1 f7       	brne	.-24     	; 0x2b06 <__ftoa_engine+0x74>
    2b1e:	05 90       	lpm	r0, Z+
    2b20:	07 94       	ror	r0
    2b22:	28 f4       	brcc	.+10     	; 0x2b2e <__ftoa_engine+0x9c>
    2b24:	e7 0e       	add	r14, r23
    2b26:	f8 1e       	adc	r15, r24
    2b28:	49 1f       	adc	r20, r25
    2b2a:	56 1f       	adc	r21, r22
    2b2c:	c1 1d       	adc	r28, r1
    2b2e:	77 0f       	add	r23, r23
    2b30:	88 1f       	adc	r24, r24
    2b32:	99 1f       	adc	r25, r25
    2b34:	66 1f       	adc	r22, r22
    2b36:	06 94       	lsr	r0
    2b38:	a1 f7       	brne	.-24     	; 0x2b22 <__ftoa_engine+0x90>
    2b3a:	05 90       	lpm	r0, Z+
    2b3c:	07 94       	ror	r0
    2b3e:	28 f4       	brcc	.+10     	; 0x2b4a <__ftoa_engine+0xb8>
    2b40:	f8 0e       	add	r15, r24
    2b42:	49 1f       	adc	r20, r25
    2b44:	56 1f       	adc	r21, r22
    2b46:	c7 1f       	adc	r28, r23
    2b48:	d1 1d       	adc	r29, r1
    2b4a:	88 0f       	add	r24, r24
    2b4c:	99 1f       	adc	r25, r25
    2b4e:	66 1f       	adc	r22, r22
    2b50:	77 1f       	adc	r23, r23
    2b52:	06 94       	lsr	r0
    2b54:	a1 f7       	brne	.-24     	; 0x2b3e <__ftoa_engine+0xac>
    2b56:	05 90       	lpm	r0, Z+
    2b58:	07 94       	ror	r0
    2b5a:	20 f4       	brcc	.+8      	; 0x2b64 <__ftoa_engine+0xd2>
    2b5c:	49 0f       	add	r20, r25
    2b5e:	56 1f       	adc	r21, r22
    2b60:	c7 1f       	adc	r28, r23
    2b62:	d8 1f       	adc	r29, r24
    2b64:	99 0f       	add	r25, r25
    2b66:	66 1f       	adc	r22, r22
    2b68:	77 1f       	adc	r23, r23
    2b6a:	88 1f       	adc	r24, r24
    2b6c:	06 94       	lsr	r0
    2b6e:	a9 f7       	brne	.-22     	; 0x2b5a <__ftoa_engine+0xc8>
    2b70:	84 91       	lpm	r24, Z
    2b72:	10 95       	com	r17
    2b74:	17 70       	andi	r17, 0x07	; 7
    2b76:	41 f0       	breq	.+16     	; 0x2b88 <__ftoa_engine+0xf6>
    2b78:	d6 95       	lsr	r29
    2b7a:	c7 95       	ror	r28
    2b7c:	57 95       	ror	r21
    2b7e:	47 95       	ror	r20
    2b80:	f7 94       	ror	r15
    2b82:	e7 94       	ror	r14
    2b84:	1a 95       	dec	r17
    2b86:	c1 f7       	brne	.-16     	; 0x2b78 <__ftoa_engine+0xe6>
    2b88:	eb e6       	ldi	r30, 0x6B	; 107
    2b8a:	f1 e0       	ldi	r31, 0x01	; 1
    2b8c:	68 94       	set
    2b8e:	15 90       	lpm	r1, Z+
    2b90:	15 91       	lpm	r17, Z+
    2b92:	35 91       	lpm	r19, Z+
    2b94:	65 91       	lpm	r22, Z+
    2b96:	95 91       	lpm	r25, Z+
    2b98:	05 90       	lpm	r0, Z+
    2b9a:	7f e2       	ldi	r23, 0x2F	; 47
    2b9c:	73 95       	inc	r23
    2b9e:	e1 18       	sub	r14, r1
    2ba0:	f1 0a       	sbc	r15, r17
    2ba2:	43 0b       	sbc	r20, r19
    2ba4:	56 0b       	sbc	r21, r22
    2ba6:	c9 0b       	sbc	r28, r25
    2ba8:	d0 09       	sbc	r29, r0
    2baa:	c0 f7       	brcc	.-16     	; 0x2b9c <__ftoa_engine+0x10a>
    2bac:	e1 0c       	add	r14, r1
    2bae:	f1 1e       	adc	r15, r17
    2bb0:	43 1f       	adc	r20, r19
    2bb2:	56 1f       	adc	r21, r22
    2bb4:	c9 1f       	adc	r28, r25
    2bb6:	d0 1d       	adc	r29, r0
    2bb8:	7e f4       	brtc	.+30     	; 0x2bd8 <__ftoa_engine+0x146>
    2bba:	70 33       	cpi	r23, 0x30	; 48
    2bbc:	11 f4       	brne	.+4      	; 0x2bc2 <__ftoa_engine+0x130>
    2bbe:	8a 95       	dec	r24
    2bc0:	e6 cf       	rjmp	.-52     	; 0x2b8e <__ftoa_engine+0xfc>
    2bc2:	e8 94       	clt
    2bc4:	01 50       	subi	r16, 0x01	; 1
    2bc6:	30 f0       	brcs	.+12     	; 0x2bd4 <__ftoa_engine+0x142>
    2bc8:	08 0f       	add	r16, r24
    2bca:	0a f4       	brpl	.+2      	; 0x2bce <__ftoa_engine+0x13c>
    2bcc:	00 27       	eor	r16, r16
    2bce:	02 17       	cp	r16, r18
    2bd0:	08 f4       	brcc	.+2      	; 0x2bd4 <__ftoa_engine+0x142>
    2bd2:	20 2f       	mov	r18, r16
    2bd4:	23 95       	inc	r18
    2bd6:	02 2f       	mov	r16, r18
    2bd8:	7a 33       	cpi	r23, 0x3A	; 58
    2bda:	28 f0       	brcs	.+10     	; 0x2be6 <__ftoa_engine+0x154>
    2bdc:	79 e3       	ldi	r23, 0x39	; 57
    2bde:	7d 93       	st	X+, r23
    2be0:	2a 95       	dec	r18
    2be2:	e9 f7       	brne	.-6      	; 0x2bde <__ftoa_engine+0x14c>
    2be4:	10 c0       	rjmp	.+32     	; 0x2c06 <__ftoa_engine+0x174>
    2be6:	7d 93       	st	X+, r23
    2be8:	2a 95       	dec	r18
    2bea:	89 f6       	brne	.-94     	; 0x2b8e <__ftoa_engine+0xfc>
    2bec:	06 94       	lsr	r0
    2bee:	97 95       	ror	r25
    2bf0:	67 95       	ror	r22
    2bf2:	37 95       	ror	r19
    2bf4:	17 95       	ror	r17
    2bf6:	17 94       	ror	r1
    2bf8:	e1 18       	sub	r14, r1
    2bfa:	f1 0a       	sbc	r15, r17
    2bfc:	43 0b       	sbc	r20, r19
    2bfe:	56 0b       	sbc	r21, r22
    2c00:	c9 0b       	sbc	r28, r25
    2c02:	d0 09       	sbc	r29, r0
    2c04:	98 f0       	brcs	.+38     	; 0x2c2c <__ftoa_engine+0x19a>
    2c06:	23 95       	inc	r18
    2c08:	7e 91       	ld	r23, -X
    2c0a:	73 95       	inc	r23
    2c0c:	7a 33       	cpi	r23, 0x3A	; 58
    2c0e:	08 f0       	brcs	.+2      	; 0x2c12 <__ftoa_engine+0x180>
    2c10:	70 e3       	ldi	r23, 0x30	; 48
    2c12:	7c 93       	st	X, r23
    2c14:	20 13       	cpse	r18, r16
    2c16:	b8 f7       	brcc	.-18     	; 0x2c06 <__ftoa_engine+0x174>
    2c18:	7e 91       	ld	r23, -X
    2c1a:	70 61       	ori	r23, 0x10	; 16
    2c1c:	7d 93       	st	X+, r23
    2c1e:	30 f0       	brcs	.+12     	; 0x2c2c <__ftoa_engine+0x19a>
    2c20:	83 95       	inc	r24
    2c22:	71 e3       	ldi	r23, 0x31	; 49
    2c24:	7d 93       	st	X+, r23
    2c26:	70 e3       	ldi	r23, 0x30	; 48
    2c28:	2a 95       	dec	r18
    2c2a:	e1 f7       	brne	.-8      	; 0x2c24 <__ftoa_engine+0x192>
    2c2c:	11 24       	eor	r1, r1
    2c2e:	ef 90       	pop	r14
    2c30:	ff 90       	pop	r15
    2c32:	0f 91       	pop	r16
    2c34:	1f 91       	pop	r17
    2c36:	cf 91       	pop	r28
    2c38:	df 91       	pop	r29
    2c3a:	99 27       	eor	r25, r25
    2c3c:	87 fd       	sbrc	r24, 7
    2c3e:	90 95       	com	r25
    2c40:	08 95       	ret

00002c42 <isspace>:
    2c42:	91 11       	cpse	r25, r1
    2c44:	2e c0       	rjmp	.+92     	; 0x2ca2 <__ctype_isfalse>
    2c46:	80 32       	cpi	r24, 0x20	; 32
    2c48:	19 f0       	breq	.+6      	; 0x2c50 <isspace+0xe>
    2c4a:	89 50       	subi	r24, 0x09	; 9
    2c4c:	85 50       	subi	r24, 0x05	; 5
    2c4e:	d0 f7       	brcc	.-12     	; 0x2c44 <isspace+0x2>
    2c50:	08 95       	ret

00002c52 <strncasecmp_P>:
    2c52:	fb 01       	movw	r30, r22
    2c54:	dc 01       	movw	r26, r24
    2c56:	41 50       	subi	r20, 0x01	; 1
    2c58:	50 40       	sbci	r21, 0x00	; 0
    2c5a:	88 f0       	brcs	.+34     	; 0x2c7e <strncasecmp_P+0x2c>
    2c5c:	8d 91       	ld	r24, X+
    2c5e:	81 34       	cpi	r24, 0x41	; 65
    2c60:	1c f0       	brlt	.+6      	; 0x2c68 <strncasecmp_P+0x16>
    2c62:	8b 35       	cpi	r24, 0x5B	; 91
    2c64:	0c f4       	brge	.+2      	; 0x2c68 <strncasecmp_P+0x16>
    2c66:	80 5e       	subi	r24, 0xE0	; 224
    2c68:	65 91       	lpm	r22, Z+
    2c6a:	61 34       	cpi	r22, 0x41	; 65
    2c6c:	1c f0       	brlt	.+6      	; 0x2c74 <strncasecmp_P+0x22>
    2c6e:	6b 35       	cpi	r22, 0x5B	; 91
    2c70:	0c f4       	brge	.+2      	; 0x2c74 <strncasecmp_P+0x22>
    2c72:	60 5e       	subi	r22, 0xE0	; 224
    2c74:	86 1b       	sub	r24, r22
    2c76:	61 11       	cpse	r22, r1
    2c78:	71 f3       	breq	.-36     	; 0x2c56 <strncasecmp_P+0x4>
    2c7a:	99 0b       	sbc	r25, r25
    2c7c:	08 95       	ret
    2c7e:	88 1b       	sub	r24, r24
    2c80:	fc cf       	rjmp	.-8      	; 0x2c7a <strncasecmp_P+0x28>

00002c82 <strrev>:
    2c82:	dc 01       	movw	r26, r24
    2c84:	fc 01       	movw	r30, r24
    2c86:	67 2f       	mov	r22, r23
    2c88:	71 91       	ld	r23, Z+
    2c8a:	77 23       	and	r23, r23
    2c8c:	e1 f7       	brne	.-8      	; 0x2c86 <strrev+0x4>
    2c8e:	32 97       	sbiw	r30, 0x02	; 2
    2c90:	04 c0       	rjmp	.+8      	; 0x2c9a <strrev+0x18>
    2c92:	7c 91       	ld	r23, X
    2c94:	6d 93       	st	X+, r22
    2c96:	70 83       	st	Z, r23
    2c98:	62 91       	ld	r22, -Z
    2c9a:	ae 17       	cp	r26, r30
    2c9c:	bf 07       	cpc	r27, r31
    2c9e:	c8 f3       	brcs	.-14     	; 0x2c92 <strrev+0x10>
    2ca0:	08 95       	ret

00002ca2 <__ctype_isfalse>:
    2ca2:	99 27       	eor	r25, r25
    2ca4:	88 27       	eor	r24, r24

00002ca6 <__ctype_istrue>:
    2ca6:	08 95       	ret

00002ca8 <__muluhisi3>:
    2ca8:	09 d0       	rcall	.+18     	; 0x2cbc <__umulhisi3>
    2caa:	a5 9f       	mul	r26, r21
    2cac:	90 0d       	add	r25, r0
    2cae:	b4 9f       	mul	r27, r20
    2cb0:	90 0d       	add	r25, r0
    2cb2:	a4 9f       	mul	r26, r20
    2cb4:	80 0d       	add	r24, r0
    2cb6:	91 1d       	adc	r25, r1
    2cb8:	11 24       	eor	r1, r1
    2cba:	08 95       	ret

00002cbc <__umulhisi3>:
    2cbc:	a2 9f       	mul	r26, r18
    2cbe:	b0 01       	movw	r22, r0
    2cc0:	b3 9f       	mul	r27, r19
    2cc2:	c0 01       	movw	r24, r0
    2cc4:	a3 9f       	mul	r26, r19
    2cc6:	70 0d       	add	r23, r0
    2cc8:	81 1d       	adc	r24, r1
    2cca:	11 24       	eor	r1, r1
    2ccc:	91 1d       	adc	r25, r1
    2cce:	b2 9f       	mul	r27, r18
    2cd0:	70 0d       	add	r23, r0
    2cd2:	81 1d       	adc	r24, r1
    2cd4:	11 24       	eor	r1, r1
    2cd6:	91 1d       	adc	r25, r1
    2cd8:	08 95       	ret

00002cda <_exit>:
    2cda:	f8 94       	cli

00002cdc <__stop_program>:
    2cdc:	ff cf       	rjmp	.-2      	; 0x2cdc <__stop_program>
