
waypointNavigator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000076  00800200  00001620  000016b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001620  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003d  00800276  00800276  0000172a  2**0
                  ALLOC
  3 .stab         00000024  00000000  00000000  0000172c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000001e  00000000  00000000  00001750  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000005c  00000000  00000000  0000176e  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000360  00000000  00000000  000017d0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003c3f  00000000  00000000  00001b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000012c1  00000000  00000000  0000576f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001f91  00000000  00000000  00006a30  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000009b4  00000000  00000000  000089c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001280  00000000  00000000  00009378  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000021b1  00000000  00000000  0000a5f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000280  00000000  00000000  0000c7a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	05 c1       	rjmp	.+522    	; 0x20c <__ctors_end>
       2:	00 00       	nop
       4:	23 c1       	rjmp	.+582    	; 0x24c <__bad_interrupt>
       6:	00 00       	nop
       8:	21 c1       	rjmp	.+578    	; 0x24c <__bad_interrupt>
       a:	00 00       	nop
       c:	1f c1       	rjmp	.+574    	; 0x24c <__bad_interrupt>
       e:	00 00       	nop
      10:	1d c1       	rjmp	.+570    	; 0x24c <__bad_interrupt>
      12:	00 00       	nop
      14:	1b c1       	rjmp	.+566    	; 0x24c <__bad_interrupt>
      16:	00 00       	nop
      18:	19 c1       	rjmp	.+562    	; 0x24c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	17 c1       	rjmp	.+558    	; 0x24c <__bad_interrupt>
      1e:	00 00       	nop
      20:	15 c1       	rjmp	.+554    	; 0x24c <__bad_interrupt>
      22:	00 00       	nop
      24:	95 c3       	rjmp	.+1834   	; 0x750 <__vector_9>
      26:	00 00       	nop
      28:	11 c1       	rjmp	.+546    	; 0x24c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0f c1       	rjmp	.+542    	; 0x24c <__bad_interrupt>
      2e:	00 00       	nop
      30:	0d c1       	rjmp	.+538    	; 0x24c <__bad_interrupt>
      32:	00 00       	nop
      34:	0b c1       	rjmp	.+534    	; 0x24c <__bad_interrupt>
      36:	00 00       	nop
      38:	09 c1       	rjmp	.+530    	; 0x24c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	07 c1       	rjmp	.+526    	; 0x24c <__bad_interrupt>
      3e:	00 00       	nop
      40:	05 c1       	rjmp	.+522    	; 0x24c <__bad_interrupt>
      42:	00 00       	nop
      44:	03 c1       	rjmp	.+518    	; 0x24c <__bad_interrupt>
      46:	00 00       	nop
      48:	01 c1       	rjmp	.+514    	; 0x24c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ff c0       	rjmp	.+510    	; 0x24c <__bad_interrupt>
      4e:	00 00       	nop
      50:	fd c0       	rjmp	.+506    	; 0x24c <__bad_interrupt>
      52:	00 00       	nop
      54:	fb c0       	rjmp	.+502    	; 0x24c <__bad_interrupt>
      56:	00 00       	nop
      58:	f9 c0       	rjmp	.+498    	; 0x24c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	79 c4       	rjmp	.+2290   	; 0x950 <__vector_23>
      5e:	00 00       	nop
      60:	f5 c0       	rjmp	.+490    	; 0x24c <__bad_interrupt>
      62:	00 00       	nop
      64:	f3 c0       	rjmp	.+486    	; 0x24c <__bad_interrupt>
      66:	00 00       	nop
      68:	f1 c0       	rjmp	.+482    	; 0x24c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ef c0       	rjmp	.+478    	; 0x24c <__bad_interrupt>
      6e:	00 00       	nop
      70:	ed c0       	rjmp	.+474    	; 0x24c <__bad_interrupt>
      72:	00 00       	nop
      74:	eb c0       	rjmp	.+470    	; 0x24c <__bad_interrupt>
      76:	00 00       	nop
      78:	e9 c0       	rjmp	.+466    	; 0x24c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e7 c0       	rjmp	.+462    	; 0x24c <__bad_interrupt>
      7e:	00 00       	nop
      80:	e5 c0       	rjmp	.+458    	; 0x24c <__bad_interrupt>
      82:	00 00       	nop
      84:	e3 c0       	rjmp	.+454    	; 0x24c <__bad_interrupt>
      86:	00 00       	nop
      88:	e1 c0       	rjmp	.+450    	; 0x24c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	df c0       	rjmp	.+446    	; 0x24c <__bad_interrupt>
      8e:	00 00       	nop
      90:	dd c0       	rjmp	.+442    	; 0x24c <__bad_interrupt>
      92:	00 00       	nop
      94:	db c0       	rjmp	.+438    	; 0x24c <__bad_interrupt>
      96:	00 00       	nop
      98:	d9 c0       	rjmp	.+434    	; 0x24c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d7 c0       	rjmp	.+430    	; 0x24c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d5 c0       	rjmp	.+426    	; 0x24c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d3 c0       	rjmp	.+422    	; 0x24c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d1 c0       	rjmp	.+418    	; 0x24c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	cf c0       	rjmp	.+414    	; 0x24c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	cd c0       	rjmp	.+410    	; 0x24c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cb c0       	rjmp	.+406    	; 0x24c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c9 c0       	rjmp	.+402    	; 0x24c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	c7 c0       	rjmp	.+398    	; 0x24c <__bad_interrupt>
      be:	00 00       	nop
      c0:	c5 c0       	rjmp	.+394    	; 0x24c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c3 c0       	rjmp	.+390    	; 0x24c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c1 c0       	rjmp	.+386    	; 0x24c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	bf c0       	rjmp	.+382    	; 0x24c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	bd c0       	rjmp	.+378    	; 0x24c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bb c0       	rjmp	.+374    	; 0x24c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	b9 c0       	rjmp	.+370    	; 0x24c <__bad_interrupt>
      da:	00 00       	nop
      dc:	b7 c0       	rjmp	.+366    	; 0x24c <__bad_interrupt>
      de:	00 00       	nop
      e0:	b5 c0       	rjmp	.+362    	; 0x24c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	00 40       	sbci	r16, 0x00	; 0
     114:	7a 10       	cpse	r7, r10
     116:	f3 5a       	subi	r31, 0xA3	; 163
     118:	00 a0       	ldd	r0, Z+32	; 0x20
     11a:	72 4e       	sbci	r23, 0xE2	; 226
     11c:	18 09       	sbc	r17, r8
     11e:	00 10       	cpse	r0, r0
     120:	a5 d4       	rcall	.+2378   	; 0xa6c <_Z10USART_initii+0x2a>
     122:	e8 00       	.word	0x00e8	; ????
     124:	00 e8       	ldi	r16, 0x80	; 128
     126:	76 48       	sbci	r23, 0x86	; 134
     128:	17 00       	.word	0x0017	; ????
     12a:	00 e4       	ldi	r16, 0x40	; 64
     12c:	0b 54       	subi	r16, 0x4B	; 75
     12e:	02 00       	.word	0x0002	; ????
     130:	00 ca       	rjmp	.-3072   	; 0xfffff532 <__eeprom_end+0xff7ef532>
     132:	9a 3b       	cpi	r25, 0xBA	; 186
     134:	00 00       	nop
     136:	00 e1       	ldi	r16, 0x10	; 16
     138:	f5 05       	cpc	r31, r5
     13a:	00 00       	nop
     13c:	80 96       	adiw	r24, 0x20	; 32
     13e:	98 00       	.word	0x0098	; ????
     140:	00 00       	nop
     142:	40 42       	sbci	r20, 0x20	; 32
     144:	0f 00       	.word	0x000f	; ????
     146:	00 00       	nop
     148:	a0 86       	std	Z+8, r10	; 0x08
     14a:	01 00       	.word	0x0001	; ????
     14c:	00 00       	nop
     14e:	10 27       	eor	r17, r16
     150:	00 00       	nop
     152:	00 00       	nop
     154:	e8 03       	fmulsu	r22, r16
     156:	00 00       	nop
     158:	00 00       	nop
     15a:	64 00       	.word	0x0064	; ????
     15c:	00 00       	nop
     15e:	00 00       	nop
     160:	0a 00       	.word	0x000a	; ????
     162:	00 00       	nop
     164:	00 00       	nop
     166:	01 00       	.word	0x0001	; ????
     168:	00 00       	nop
     16a:	00 00       	nop
     16c:	2c 76       	andi	r18, 0x6C	; 108
     16e:	d8 88       	ldd	r13, Y+16	; 0x10
     170:	dc 67       	ori	r29, 0x7C	; 124
     172:	4f 08       	sbc	r4, r15
     174:	23 df       	rcall	.-442    	; 0xffffffbc <__eeprom_end+0xff7effbc>
     176:	c1 df       	rcall	.-126    	; 0xfa <__SREG__+0xbb>
     178:	ae 59       	subi	r26, 0x9E	; 158
     17a:	e1 b1       	in	r30, 0x01	; 1
     17c:	b7 96       	adiw	r30, 0x27	; 39
     17e:	e5 e3       	ldi	r30, 0x35	; 53
     180:	e4 53       	subi	r30, 0x34	; 52
     182:	c6 3a       	cpi	r28, 0xA6	; 166
     184:	e6 51       	subi	r30, 0x16	; 22
     186:	99 76       	andi	r25, 0x69	; 105
     188:	96 e8       	ldi	r25, 0x86	; 134
     18a:	e6 c2       	rjmp	.+1484   	; 0x758 <__vector_9+0x8>
     18c:	84 26       	eor	r8, r20
     18e:	eb 89       	ldd	r30, Y+19	; 0x13
     190:	8c 9b       	sbis	0x11, 4	; 17
     192:	62 ed       	ldi	r22, 0xD2	; 210
     194:	40 7c       	andi	r20, 0xC0	; 192
     196:	6f fc       	.word	0xfc6f	; ????
     198:	ef bc       	out	0x2f, r14	; 47
     19a:	9c 9f       	mul	r25, r28
     19c:	40 f2       	brcs	.-112    	; 0x12e <__trampolines_end+0x1c>
     19e:	ba a5       	ldd	r27, Y+42	; 0x2a
     1a0:	6f a5       	ldd	r22, Y+47	; 0x2f
     1a2:	f4 90       	lpm	r15, Z
     1a4:	05 5a       	subi	r16, 0xA5	; 165
     1a6:	2a f7       	brpl	.-54     	; 0x172 <__trampolines_end+0x60>
     1a8:	5c 93       	st	X, r21
     1aa:	6b 6c       	ori	r22, 0xCB	; 203
     1ac:	f9 67       	ori	r31, 0x79	; 121
     1ae:	6d c1       	rjmp	.+730    	; 0x48a <_Z10getHeadingv+0x142>
     1b0:	1b fc       	.word	0xfc1b	; ????
     1b2:	e0 e4       	ldi	r30, 0x40	; 64
     1b4:	0d 47       	sbci	r16, 0x7D	; 125
     1b6:	fe f5       	brtc	.+126    	; 0x236 <__do_clear_bss>
     1b8:	20 e6       	ldi	r18, 0x60	; 96
     1ba:	b5 00       	.word	0x00b5	; ????
     1bc:	d0 ed       	ldi	r29, 0xD0	; 208
     1be:	90 2e       	mov	r9, r16
     1c0:	03 00       	.word	0x0003	; ????
     1c2:	94 35       	cpi	r25, 0x54	; 84
     1c4:	77 05       	cpc	r23, r7
     1c6:	00 80       	ld	r0, Z
     1c8:	84 1e       	adc	r8, r20
     1ca:	08 00       	.word	0x0008	; ????
     1cc:	00 20       	and	r0, r0
     1ce:	4e 0a       	sbc	r4, r30
     1d0:	00 00       	nop
     1d2:	00 c8       	rjmp	.-4096   	; 0xfffff1d4 <__eeprom_end+0xff7ef1d4>
     1d4:	0c 33       	cpi	r16, 0x3C	; 60
     1d6:	33 33       	cpi	r19, 0x33	; 51
     1d8:	33 0f       	add	r19, r19
     1da:	98 6e       	ori	r25, 0xE8	; 232
     1dc:	12 83       	std	Z+2, r17	; 0x02
     1de:	11 41       	sbci	r17, 0x11	; 17
     1e0:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1e2:	21 14       	cp	r2, r1
     1e4:	89 3b       	cpi	r24, 0xB9	; 185
     1e6:	e6 55       	subi	r30, 0x56	; 86
     1e8:	16 cf       	rjmp	.-468    	; 0x16 <__zero_reg__+0x15>
     1ea:	fe e6       	ldi	r31, 0x6E	; 110
     1ec:	db 18       	sub	r13, r11
     1ee:	d1 84       	ldd	r13, Z+9	; 0x09
     1f0:	4b 38       	cpi	r20, 0x8B	; 139
     1f2:	1b f7       	brvc	.-58     	; 0x1ba <__trampolines_end+0xa8>
     1f4:	7c 1d       	adc	r23, r12
     1f6:	90 1d       	adc	r25, r0
     1f8:	a4 bb       	out	0x14, r26	; 20
     1fa:	e4 24       	eor	r14, r4
     1fc:	20 32       	cpi	r18, 0x20	; 32
     1fe:	84 72       	andi	r24, 0x24	; 36
     200:	5e 22       	and	r5, r30
     202:	81 00       	.word	0x0081	; ????
     204:	c9 f1       	breq	.+114    	; 0x278 <i2c_rep_start+0x8>
     206:	24 ec       	ldi	r18, 0xC4	; 196
     208:	a1 e5       	ldi	r26, 0x51	; 81
     20a:	3d 27       	eor	r19, r29

0000020c <__ctors_end>:
     20c:	11 24       	eor	r1, r1
     20e:	1f be       	out	0x3f, r1	; 63
     210:	cf ef       	ldi	r28, 0xFF	; 255
     212:	d1 e2       	ldi	r29, 0x21	; 33
     214:	de bf       	out	0x3e, r29	; 62
     216:	cd bf       	out	0x3d, r28	; 61
     218:	00 e0       	ldi	r16, 0x00	; 0
     21a:	0c bf       	out	0x3c, r16	; 60

0000021c <__do_copy_data>:
     21c:	12 e0       	ldi	r17, 0x02	; 2
     21e:	a0 e0       	ldi	r26, 0x00	; 0
     220:	b2 e0       	ldi	r27, 0x02	; 2
     222:	e0 e2       	ldi	r30, 0x20	; 32
     224:	f6 e1       	ldi	r31, 0x16	; 22
     226:	00 e0       	ldi	r16, 0x00	; 0
     228:	0b bf       	out	0x3b, r16	; 59
     22a:	02 c0       	rjmp	.+4      	; 0x230 <__do_copy_data+0x14>
     22c:	07 90       	elpm	r0, Z+
     22e:	0d 92       	st	X+, r0
     230:	a6 37       	cpi	r26, 0x76	; 118
     232:	b1 07       	cpc	r27, r17
     234:	d9 f7       	brne	.-10     	; 0x22c <__do_copy_data+0x10>

00000236 <__do_clear_bss>:
     236:	22 e0       	ldi	r18, 0x02	; 2
     238:	a6 e7       	ldi	r26, 0x76	; 118
     23a:	b2 e0       	ldi	r27, 0x02	; 2
     23c:	01 c0       	rjmp	.+2      	; 0x240 <.do_clear_bss_start>

0000023e <.do_clear_bss_loop>:
     23e:	1d 92       	st	X+, r1

00000240 <.do_clear_bss_start>:
     240:	a3 3b       	cpi	r26, 0xB3	; 179
     242:	b2 07       	cpc	r27, r18
     244:	e1 f7       	brne	.-8      	; 0x23e <.do_clear_bss_loop>
     246:	cc d4       	rcall	.+2456   	; 0xbe0 <main>
     248:	0c 94 0e 0b 	jmp	0x161c	; 0x161c <_exit>

0000024c <__bad_interrupt>:
     24c:	d9 ce       	rjmp	.-590    	; 0x0 <__vectors>

0000024e <i2c_delay_T2>:
     24e:	00 c0       	rjmp	.+0      	; 0x250 <i2c_delay_T2+0x2>
     250:	00 c0       	rjmp	.+0      	; 0x252 <i2c_delay_T2+0x4>
     252:	00 c0       	rjmp	.+0      	; 0x254 <i2c_delay_T2+0x6>
     254:	00 c0       	rjmp	.+0      	; 0x256 <i2c_delay_T2+0x8>
     256:	00 c0       	rjmp	.+0      	; 0x258 <i2c_delay_T2+0xa>
     258:	00 c0       	rjmp	.+0      	; 0x25a <i2c_delay_T2+0xc>
     25a:	00 00       	nop
     25c:	08 95       	ret

0000025e <i2c_init>:
     25e:	51 98       	cbi	0x0a, 1	; 10
     260:	50 98       	cbi	0x0a, 0	; 10
     262:	59 98       	cbi	0x0b, 1	; 11
     264:	58 98       	cbi	0x0b, 0	; 11
     266:	08 95       	ret

00000268 <i2c_start>:
     268:	51 9a       	sbi	0x0a, 1	; 10
     26a:	f1 df       	rcall	.-30     	; 0x24e <i2c_delay_T2>
     26c:	1d c0       	rjmp	.+58     	; 0x2a8 <i2c_write>
     26e:	08 95       	ret

00000270 <i2c_rep_start>:
     270:	50 9a       	sbi	0x0a, 0	; 10
     272:	ed df       	rcall	.-38     	; 0x24e <i2c_delay_T2>
     274:	51 98       	cbi	0x0a, 1	; 10
     276:	eb df       	rcall	.-42     	; 0x24e <i2c_delay_T2>
     278:	50 98       	cbi	0x0a, 0	; 10
     27a:	e9 df       	rcall	.-46     	; 0x24e <i2c_delay_T2>
     27c:	51 9a       	sbi	0x0a, 1	; 10
     27e:	e7 df       	rcall	.-50     	; 0x24e <i2c_delay_T2>
     280:	13 c0       	rjmp	.+38     	; 0x2a8 <i2c_write>
     282:	08 95       	ret

00000284 <i2c_start_wait>:
     284:	08 2e       	mov	r0, r24

00000286 <i2c_start_wait1>:
     286:	51 9a       	sbi	0x0a, 1	; 10
     288:	e2 df       	rcall	.-60     	; 0x24e <i2c_delay_T2>
     28a:	80 2d       	mov	r24, r0
     28c:	0d d0       	rcall	.+26     	; 0x2a8 <i2c_write>
     28e:	88 23       	and	r24, r24
     290:	11 f0       	breq	.+4      	; 0x296 <i2c_start_wait_done>
     292:	02 d0       	rcall	.+4      	; 0x298 <i2c_stop>
     294:	f8 cf       	rjmp	.-16     	; 0x286 <i2c_start_wait1>

00000296 <i2c_start_wait_done>:
     296:	08 95       	ret

00000298 <i2c_stop>:
     298:	50 9a       	sbi	0x0a, 0	; 10
     29a:	51 9a       	sbi	0x0a, 1	; 10
     29c:	d8 df       	rcall	.-80     	; 0x24e <i2c_delay_T2>
     29e:	50 98       	cbi	0x0a, 0	; 10
     2a0:	d6 df       	rcall	.-84     	; 0x24e <i2c_delay_T2>
     2a2:	51 98       	cbi	0x0a, 1	; 10
     2a4:	d4 cf       	rjmp	.-88     	; 0x24e <i2c_delay_T2>
     2a6:	08 95       	ret

000002a8 <i2c_write>:
     2a8:	08 94       	sec
     2aa:	88 1f       	adc	r24, r24
     2ac:	01 c0       	rjmp	.+2      	; 0x2b0 <i2c_write_first>

000002ae <i2c_write_bit>:
     2ae:	88 0f       	add	r24, r24

000002b0 <i2c_write_first>:
     2b0:	59 f0       	breq	.+22     	; 0x2c8 <i2c_get_ack>
     2b2:	50 9a       	sbi	0x0a, 0	; 10
     2b4:	18 f4       	brcc	.+6      	; 0x2bc <i2c_write_low>
     2b6:	00 00       	nop
     2b8:	51 98       	cbi	0x0a, 1	; 10
     2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <i2c_write_high>

000002bc <i2c_write_low>:
     2bc:	51 9a       	sbi	0x0a, 1	; 10
     2be:	00 c0       	rjmp	.+0      	; 0x2c0 <i2c_write_high>

000002c0 <i2c_write_high>:
     2c0:	c6 df       	rcall	.-116    	; 0x24e <i2c_delay_T2>
     2c2:	50 98       	cbi	0x0a, 0	; 10
     2c4:	c4 df       	rcall	.-120    	; 0x24e <i2c_delay_T2>
     2c6:	f3 cf       	rjmp	.-26     	; 0x2ae <i2c_write_bit>

000002c8 <i2c_get_ack>:
     2c8:	50 9a       	sbi	0x0a, 0	; 10
     2ca:	51 98       	cbi	0x0a, 1	; 10
     2cc:	c0 df       	rcall	.-128    	; 0x24e <i2c_delay_T2>
     2ce:	50 98       	cbi	0x0a, 0	; 10

000002d0 <i2c_ack_wait>:
     2d0:	48 9b       	sbis	0x09, 0	; 9
     2d2:	fe cf       	rjmp	.-4      	; 0x2d0 <i2c_ack_wait>
     2d4:	88 27       	eor	r24, r24
     2d6:	49 99       	sbic	0x09, 1	; 9
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	b9 df       	rcall	.-142    	; 0x24e <i2c_delay_T2>
     2dc:	99 27       	eor	r25, r25
     2de:	08 95       	ret

000002e0 <i2c_readNak>:
     2e0:	88 27       	eor	r24, r24
     2e2:	01 c0       	rjmp	.+2      	; 0x2e6 <i2c_read>

000002e4 <i2c_readAck>:
     2e4:	81 e0       	ldi	r24, 0x01	; 1

000002e6 <i2c_read>:
     2e6:	71 e0       	ldi	r23, 0x01	; 1

000002e8 <i2c_read_bit>:
     2e8:	50 9a       	sbi	0x0a, 0	; 10
     2ea:	51 98       	cbi	0x0a, 1	; 10
     2ec:	b0 df       	rcall	.-160    	; 0x24e <i2c_delay_T2>
     2ee:	50 98       	cbi	0x0a, 0	; 10
     2f0:	ae df       	rcall	.-164    	; 0x24e <i2c_delay_T2>

000002f2 <i2c_read_stretch>:
     2f2:	48 9b       	sbis	0x09, 0	; 9
     2f4:	fe cf       	rjmp	.-4      	; 0x2f2 <i2c_read_stretch>
     2f6:	88 94       	clc
     2f8:	49 99       	sbic	0x09, 1	; 9
     2fa:	08 94       	sec
     2fc:	77 1f       	adc	r23, r23
     2fe:	a0 f7       	brcc	.-24     	; 0x2e8 <i2c_read_bit>

00000300 <i2c_put_ack>:
     300:	50 9a       	sbi	0x0a, 0	; 10
     302:	81 30       	cpi	r24, 0x01	; 1
     304:	11 f0       	breq	.+4      	; 0x30a <i2c_put_ack_low>
     306:	51 98       	cbi	0x0a, 1	; 10
     308:	01 c0       	rjmp	.+2      	; 0x30c <i2c_put_ack_high>

0000030a <i2c_put_ack_low>:
     30a:	51 9a       	sbi	0x0a, 1	; 10

0000030c <i2c_put_ack_high>:
     30c:	a0 df       	rcall	.-192    	; 0x24e <i2c_delay_T2>
     30e:	50 98       	cbi	0x0a, 0	; 10

00000310 <i2c_put_ack_wait>:
     310:	48 9b       	sbis	0x09, 0	; 9
     312:	fe cf       	rjmp	.-4      	; 0x310 <i2c_put_ack_wait>
     314:	9c df       	rcall	.-200    	; 0x24e <i2c_delay_T2>
     316:	87 2f       	mov	r24, r23
     318:	99 27       	eor	r25, r25
     31a:	08 95       	ret

0000031c <_Z13init_HMC5883Lv>:
int16_t k1y = 1;
int16_t k2y = -137.703532;

void init_HMC5883L(void){

	i2c_start(HMC5883L_WRITE);
     31c:	8c e3       	ldi	r24, 0x3C	; 60
     31e:	a4 df       	rcall	.-184    	; 0x268 <i2c_start>
	i2c_write(0x00); // set pointer to CRA
     320:	80 e0       	ldi	r24, 0x00	; 0
     322:	c2 df       	rcall	.-124    	; 0x2a8 <i2c_write>
	i2c_write(0x70); // write 0x70 to CRA
     324:	80 e7       	ldi	r24, 0x70	; 112
     326:	c0 df       	rcall	.-128    	; 0x2a8 <i2c_write>
	i2c_stop();
     328:	b7 df       	rcall	.-146    	; 0x298 <i2c_stop>

	i2c_start(HMC5883L_WRITE);
     32a:	8c e3       	ldi	r24, 0x3C	; 60
     32c:	9d df       	rcall	.-198    	; 0x268 <i2c_start>
	i2c_write(0x01); // set pointer to CRB
     32e:	81 e0       	ldi	r24, 0x01	; 1
     330:	bb df       	rcall	.-138    	; 0x2a8 <i2c_write>
	i2c_write(0xA0);
     332:	80 ea       	ldi	r24, 0xA0	; 160
     334:	b9 df       	rcall	.-142    	; 0x2a8 <i2c_write>
	i2c_stop();
     336:	b0 df       	rcall	.-160    	; 0x298 <i2c_stop>

	i2c_start(HMC5883L_WRITE);
     338:	8c e3       	ldi	r24, 0x3C	; 60
     33a:	96 df       	rcall	.-212    	; 0x268 <i2c_start>
	i2c_write(0x02); // set pointer to measurement mode
     33c:	82 e0       	ldi	r24, 0x02	; 2
     33e:	b4 df       	rcall	.-152    	; 0x2a8 <i2c_write>
	i2c_write(0x00); // continuous measurement
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	b2 df       	rcall	.-156    	; 0x2a8 <i2c_write>
	i2c_stop();
     344:	a9 cf       	rjmp	.-174    	; 0x298 <i2c_stop>
     346:	08 95       	ret

00000348 <_Z10getHeadingv>:
}

float getHeading(void){
     348:	8f 92       	push	r8
     34a:	9f 92       	push	r9
     34c:	af 92       	push	r10
     34e:	bf 92       	push	r11
     350:	cf 92       	push	r12
     352:	df 92       	push	r13
     354:	ef 92       	push	r14
     356:	ff 92       	push	r15

	i2c_start_wait(HMC5883L_WRITE);
     358:	8c e3       	ldi	r24, 0x3C	; 60
     35a:	94 df       	rcall	.-216    	; 0x284 <i2c_start_wait>
	i2c_write(0x03); //set pointer to X-axis MSB
     35c:	83 e0       	ldi	r24, 0x03	; 3
     35e:	a4 df       	rcall	.-184    	; 0x2a8 <i2c_write>
	i2c_stop();
     360:	9b df       	rcall	.-202    	; 0x298 <i2c_stop>

	i2c_rep_start(HMC5883L_READ);
     362:	8d e3       	ldi	r24, 0x3D	; 61
     364:	85 df       	rcall	.-246    	; 0x270 <i2c_rep_start>

	raw_x = ((uint8_t)i2c_readAck())<<8;
     366:	be df       	rcall	.-132    	; 0x2e4 <i2c_readAck>
     368:	10 92 7e 02 	sts	0x027E, r1
     36c:	80 93 7f 02 	sts	0x027F, r24
	raw_x |= i2c_readAck();
     370:	b9 df       	rcall	.-142    	; 0x2e4 <i2c_readAck>
     372:	20 91 7e 02 	lds	r18, 0x027E
     376:	30 91 7f 02 	lds	r19, 0x027F
     37a:	28 2b       	or	r18, r24
     37c:	30 93 7f 02 	sts	0x027F, r19
     380:	20 93 7e 02 	sts	0x027E, r18

	raw_z = ((uint8_t)i2c_readAck())<<8;
     384:	af df       	rcall	.-162    	; 0x2e4 <i2c_readAck>
     386:	10 92 7a 02 	sts	0x027A, r1
     38a:	80 93 7b 02 	sts	0x027B, r24
	raw_z |= i2c_readAck();
     38e:	aa df       	rcall	.-172    	; 0x2e4 <i2c_readAck>
     390:	20 91 7a 02 	lds	r18, 0x027A
     394:	30 91 7b 02 	lds	r19, 0x027B
     398:	28 2b       	or	r18, r24
     39a:	30 93 7b 02 	sts	0x027B, r19
     39e:	20 93 7a 02 	sts	0x027A, r18

	raw_y = ((uint8_t)i2c_readAck())<<8;
     3a2:	a0 df       	rcall	.-192    	; 0x2e4 <i2c_readAck>
     3a4:	10 92 7c 02 	sts	0x027C, r1
     3a8:	80 93 7d 02 	sts	0x027D, r24
	raw_y |= i2c_readNak();
     3ac:	99 df       	rcall	.-206    	; 0x2e0 <i2c_readNak>
     3ae:	20 91 7c 02 	lds	r18, 0x027C
     3b2:	30 91 7d 02 	lds	r19, 0x027D
     3b6:	a9 01       	movw	r20, r18
     3b8:	48 2b       	or	r20, r24
     3ba:	ca 01       	movw	r24, r20
     3bc:	90 93 7d 02 	sts	0x027D, r25
     3c0:	80 93 7c 02 	sts	0x027C, r24

	fixed_x = k1x * (raw_x - k2x);
     3c4:	60 91 7e 02 	lds	r22, 0x027E
     3c8:	70 91 7f 02 	lds	r23, 0x027F
     3cc:	20 91 04 02 	lds	r18, 0x0204
     3d0:	30 91 05 02 	lds	r19, 0x0205
     3d4:	62 1b       	sub	r22, r18
     3d6:	73 0b       	sbc	r23, r19
     3d8:	40 91 06 02 	lds	r20, 0x0206
     3dc:	50 91 07 02 	lds	r21, 0x0207
     3e0:	64 9f       	mul	r22, r20
     3e2:	90 01       	movw	r18, r0
     3e4:	65 9f       	mul	r22, r21
     3e6:	30 0d       	add	r19, r0
     3e8:	74 9f       	mul	r23, r20
     3ea:	30 0d       	add	r19, r0
     3ec:	11 24       	eor	r1, r1
     3ee:	30 93 79 02 	sts	0x0279, r19
     3f2:	20 93 78 02 	sts	0x0278, r18
	fixed_y = k1y * (raw_y - k2y);
     3f6:	20 91 00 02 	lds	r18, 0x0200
     3fa:	30 91 01 02 	lds	r19, 0x0201
     3fe:	82 1b       	sub	r24, r18
     400:	93 0b       	sbc	r25, r19
     402:	40 91 02 02 	lds	r20, 0x0202
     406:	50 91 03 02 	lds	r21, 0x0203
     40a:	84 9f       	mul	r24, r20
     40c:	90 01       	movw	r18, r0
     40e:	85 9f       	mul	r24, r21
     410:	30 0d       	add	r19, r0
     412:	94 9f       	mul	r25, r20
     414:	30 0d       	add	r19, r0
     416:	11 24       	eor	r1, r1
     418:	30 93 77 02 	sts	0x0277, r19
     41c:	20 93 76 02 	sts	0x0276, r18
	
	i2c_stop();
     420:	3b df       	rcall	.-394    	; 0x298 <i2c_stop>
	
	float heading = atan2(fixed_y,fixed_x);
     422:	60 91 78 02 	lds	r22, 0x0278
     426:	70 91 79 02 	lds	r23, 0x0279
     42a:	88 27       	eor	r24, r24
     42c:	77 fd       	sbrc	r23, 7
     42e:	80 95       	com	r24
     430:	98 2f       	mov	r25, r24
     432:	17 d5       	rcall	.+2606   	; 0xe62 <__floatsisf>
     434:	6b 01       	movw	r12, r22
     436:	7c 01       	movw	r14, r24
     438:	60 91 76 02 	lds	r22, 0x0276
     43c:	70 91 77 02 	lds	r23, 0x0277
     440:	88 27       	eor	r24, r24
     442:	77 fd       	sbrc	r23, 7
     444:	80 95       	com	r24
     446:	98 2f       	mov	r25, r24
     448:	0c d5       	rcall	.+2584   	; 0xe62 <__floatsisf>
     44a:	a7 01       	movw	r20, r14
     44c:	96 01       	movw	r18, r12
     44e:	48 d4       	rcall	.+2192   	; 0xce0 <atan2>
     450:	6b 01       	movw	r12, r22
     452:	7c 01       	movw	r14, r24
	float heading_dec = heading+DECLINATION;
     454:	25 e3       	ldi	r18, 0x35	; 53
     456:	3a ef       	ldi	r19, 0xFA	; 250
     458:	4e e0       	ldi	r20, 0x0E	; 14
     45a:	5e e3       	ldi	r21, 0x3E	; 62
     45c:	ce d3       	rcall	.+1948   	; 0xbfa <__addsf3>
     45e:	4b 01       	movw	r8, r22
     460:	5c 01       	movw	r10, r24
	
	
	if(heading < 0)
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	a9 01       	movw	r20, r18
     468:	c7 01       	movw	r24, r14
     46a:	b6 01       	movw	r22, r12
     46c:	8c d4       	rcall	.+2328   	; 0xd86 <__cmpsf2>
     46e:	88 23       	and	r24, r24
     470:	4c f4       	brge	.+18     	; 0x484 <_Z10getHeadingv+0x13c>
		heading += 2*PI;
     472:	2b ed       	ldi	r18, 0xDB	; 219
     474:	3f e0       	ldi	r19, 0x0F	; 15
     476:	49 ec       	ldi	r20, 0xC9	; 201
     478:	50 e4       	ldi	r21, 0x40	; 64
     47a:	c7 01       	movw	r24, r14
     47c:	b6 01       	movw	r22, r12
     47e:	bd d3       	rcall	.+1914   	; 0xbfa <__addsf3>
     480:	6b 01       	movw	r12, r22
     482:	7c 01       	movw	r14, r24
	
	if(heading>2*PI)
     484:	2b ed       	ldi	r18, 0xDB	; 219
     486:	3f e0       	ldi	r19, 0x0F	; 15
     488:	49 ec       	ldi	r20, 0xC9	; 201
     48a:	50 e4       	ldi	r21, 0x40	; 64
     48c:	c7 01       	movw	r24, r14
     48e:	b6 01       	movw	r22, r12
     490:	bd d5       	rcall	.+2938   	; 0x100c <__gesf2>
     492:	18 16       	cp	r1, r24
     494:	4c f4       	brge	.+18     	; 0x4a8 <_Z10getHeadingv+0x160>
		heading-=2*PI;
     496:	2b ed       	ldi	r18, 0xDB	; 219
     498:	3f e0       	ldi	r19, 0x0F	; 15
     49a:	49 ec       	ldi	r20, 0xC9	; 201
     49c:	50 e4       	ldi	r21, 0x40	; 64
     49e:	c7 01       	movw	r24, r14
     4a0:	b6 01       	movw	r22, r12
     4a2:	aa d3       	rcall	.+1876   	; 0xbf8 <__subsf3>
     4a4:	6b 01       	movw	r12, r22
     4a6:	7c 01       	movw	r14, r24
		
	if(heading_dec < 0)
     4a8:	20 e0       	ldi	r18, 0x00	; 0
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	a9 01       	movw	r20, r18
     4ae:	c5 01       	movw	r24, r10
     4b0:	b4 01       	movw	r22, r8
     4b2:	69 d4       	rcall	.+2258   	; 0xd86 <__cmpsf2>
     4b4:	88 23       	and	r24, r24
     4b6:	4c f4       	brge	.+18     	; 0x4ca <_Z10getHeadingv+0x182>
	heading_dec += 2*PI;
     4b8:	2b ed       	ldi	r18, 0xDB	; 219
     4ba:	3f e0       	ldi	r19, 0x0F	; 15
     4bc:	49 ec       	ldi	r20, 0xC9	; 201
     4be:	50 e4       	ldi	r21, 0x40	; 64
     4c0:	c5 01       	movw	r24, r10
     4c2:	b4 01       	movw	r22, r8
     4c4:	9a d3       	rcall	.+1844   	; 0xbfa <__addsf3>
     4c6:	4b 01       	movw	r8, r22
     4c8:	5c 01       	movw	r10, r24
	
	if(heading_dec>2*PI)
     4ca:	2b ed       	ldi	r18, 0xDB	; 219
     4cc:	3f e0       	ldi	r19, 0x0F	; 15
     4ce:	49 ec       	ldi	r20, 0xC9	; 201
     4d0:	50 e4       	ldi	r21, 0x40	; 64
     4d2:	c5 01       	movw	r24, r10
     4d4:	b4 01       	movw	r22, r8
     4d6:	9a d5       	rcall	.+2868   	; 0x100c <__gesf2>
     4d8:	18 16       	cp	r1, r24
     4da:	4c f4       	brge	.+18     	; 0x4ee <_Z10getHeadingv+0x1a6>
	heading_dec-=2*PI;
     4dc:	2b ed       	ldi	r18, 0xDB	; 219
     4de:	3f e0       	ldi	r19, 0x0F	; 15
     4e0:	49 ec       	ldi	r20, 0xC9	; 201
     4e2:	50 e4       	ldi	r21, 0x40	; 64
     4e4:	c5 01       	movw	r24, r10
     4e6:	b4 01       	movw	r22, r8
     4e8:	87 d3       	rcall	.+1806   	; 0xbf8 <__subsf3>
     4ea:	4b 01       	movw	r8, r22
     4ec:	5c 01       	movw	r10, r24
	
		
	float heading_degrees = heading * 180 / PI;
	float heading_dec_degrees = heading_dec * 180 / PI;
	
	debug_print("Raw x: ");
     4ee:	88 e0       	ldi	r24, 0x08	; 8
     4f0:	92 e0       	ldi	r25, 0x02	; 2
     4f2:	67 d0       	rcall	.+206    	; 0x5c2 <_Z11debug_printPKc>
	debug_printf(raw_x);
     4f4:	60 91 7e 02 	lds	r22, 0x027E
     4f8:	70 91 7f 02 	lds	r23, 0x027F
     4fc:	88 27       	eor	r24, r24
     4fe:	77 fd       	sbrc	r23, 7
     500:	80 95       	com	r24
     502:	98 2f       	mov	r25, r24
     504:	ae d4       	rcall	.+2396   	; 0xe62 <__floatsisf>
     506:	6c d0       	rcall	.+216    	; 0x5e0 <_Z12debug_printff>
	debug_print("\t Heading (radians): ");
     508:	80 e1       	ldi	r24, 0x10	; 16
     50a:	92 e0       	ldi	r25, 0x02	; 2
     50c:	5a d0       	rcall	.+180    	; 0x5c2 <_Z11debug_printPKc>
	debug_printf(heading);
     50e:	c7 01       	movw	r24, r14
     510:	b6 01       	movw	r22, r12
     512:	66 d0       	rcall	.+204    	; 0x5e0 <_Z12debug_printff>
	debug_print("\t Heading (degrees): ");
     514:	86 e2       	ldi	r24, 0x26	; 38
     516:	92 e0       	ldi	r25, 0x02	; 2
     518:	54 d0       	rcall	.+168    	; 0x5c2 <_Z11debug_printPKc>
	
	if(heading_dec>2*PI)
	heading_dec-=2*PI;
	
		
	float heading_degrees = heading * 180 / PI;
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	44 e3       	ldi	r20, 0x34	; 52
     520:	53 e4       	ldi	r21, 0x43	; 67
     522:	c7 01       	movw	r24, r14
     524:	b6 01       	movw	r22, r12
     526:	7d d5       	rcall	.+2810   	; 0x1022 <__mulsf3>
     528:	2b ed       	ldi	r18, 0xDB	; 219
     52a:	3f e0       	ldi	r19, 0x0F	; 15
     52c:	49 e4       	ldi	r20, 0x49	; 73
     52e:	50 e4       	ldi	r21, 0x40	; 64
     530:	2e d4       	rcall	.+2140   	; 0xd8e <__divsf3>
	debug_print("Raw x: ");
	debug_printf(raw_x);
	debug_print("\t Heading (radians): ");
	debug_printf(heading);
	debug_print("\t Heading (degrees): ");
	debug_printf(heading_degrees);
     532:	56 d0       	rcall	.+172    	; 0x5e0 <_Z12debug_printff>
	debug_print("\t Heading (w/Declination): ");
     534:	8c e3       	ldi	r24, 0x3C	; 60
     536:	92 e0       	ldi	r25, 0x02	; 2
     538:	44 d0       	rcall	.+136    	; 0x5c2 <_Z11debug_printPKc>
	if(heading_dec>2*PI)
	heading_dec-=2*PI;
	
		
	float heading_degrees = heading * 180 / PI;
	float heading_dec_degrees = heading_dec * 180 / PI;
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	44 e3       	ldi	r20, 0x34	; 52
     540:	53 e4       	ldi	r21, 0x43	; 67
     542:	c5 01       	movw	r24, r10
     544:	b4 01       	movw	r22, r8
     546:	6d d5       	rcall	.+2778   	; 0x1022 <__mulsf3>
     548:	2b ed       	ldi	r18, 0xDB	; 219
     54a:	3f e0       	ldi	r19, 0x0F	; 15
     54c:	49 e4       	ldi	r20, 0x49	; 73
     54e:	50 e4       	ldi	r21, 0x40	; 64
     550:	1e d4       	rcall	.+2108   	; 0xd8e <__divsf3>
	debug_print("\t Heading (radians): ");
	debug_printf(heading);
	debug_print("\t Heading (degrees): ");
	debug_printf(heading_degrees);
	debug_print("\t Heading (w/Declination): ");
	debug_printf(heading_dec_degrees);
     552:	46 d0       	rcall	.+140    	; 0x5e0 <_Z12debug_printff>
	debug_println("");
     554:	8a e5       	ldi	r24, 0x5A	; 90
     556:	92 e0       	ldi	r25, 0x02	; 2
     558:	39 d0       	rcall	.+114    	; 0x5cc <_Z13debug_printlnPKc>
	
	
	return (atan2((double)raw_y,(double)raw_x)* 180) / 3.14159265 + 180 + DECLINATION;
     55a:	60 91 7e 02 	lds	r22, 0x027E
     55e:	70 91 7f 02 	lds	r23, 0x027F
     562:	88 27       	eor	r24, r24
     564:	77 fd       	sbrc	r23, 7
     566:	80 95       	com	r24
     568:	98 2f       	mov	r25, r24
     56a:	7b d4       	rcall	.+2294   	; 0xe62 <__floatsisf>
     56c:	6b 01       	movw	r12, r22
     56e:	7c 01       	movw	r14, r24
     570:	60 91 7c 02 	lds	r22, 0x027C
     574:	70 91 7d 02 	lds	r23, 0x027D
     578:	88 27       	eor	r24, r24
     57a:	77 fd       	sbrc	r23, 7
     57c:	80 95       	com	r24
     57e:	98 2f       	mov	r25, r24
     580:	70 d4       	rcall	.+2272   	; 0xe62 <__floatsisf>
     582:	a7 01       	movw	r20, r14
     584:	96 01       	movw	r18, r12
     586:	ac d3       	rcall	.+1880   	; 0xce0 <atan2>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	44 e3       	ldi	r20, 0x34	; 52
     58e:	53 e4       	ldi	r21, 0x43	; 67
     590:	48 d5       	rcall	.+2704   	; 0x1022 <__mulsf3>
     592:	2b ed       	ldi	r18, 0xDB	; 219
     594:	3f e0       	ldi	r19, 0x0F	; 15
     596:	49 e4       	ldi	r20, 0x49	; 73
     598:	50 e4       	ldi	r21, 0x40	; 64
     59a:	f9 d3       	rcall	.+2034   	; 0xd8e <__divsf3>
     59c:	20 e0       	ldi	r18, 0x00	; 0
     59e:	30 e0       	ldi	r19, 0x00	; 0
     5a0:	44 e3       	ldi	r20, 0x34	; 52
     5a2:	53 e4       	ldi	r21, 0x43	; 67
     5a4:	2a d3       	rcall	.+1620   	; 0xbfa <__addsf3>
     5a6:	25 e3       	ldi	r18, 0x35	; 53
     5a8:	3a ef       	ldi	r19, 0xFA	; 250
     5aa:	4e e0       	ldi	r20, 0x0E	; 14
     5ac:	5e e3       	ldi	r21, 0x3E	; 62
     5ae:	25 d3       	rcall	.+1610   	; 0xbfa <__addsf3>
}
     5b0:	ff 90       	pop	r15
     5b2:	ef 90       	pop	r14
     5b4:	df 90       	pop	r13
     5b6:	cf 90       	pop	r12
     5b8:	bf 90       	pop	r11
     5ba:	af 90       	pop	r10
     5bc:	9f 90       	pop	r9
     5be:	8f 90       	pop	r8
     5c0:	08 95       	ret

000005c2 <_Z11debug_printPKc>:
	{
		char string[10]; 
		itoa(debugNum,string,10);
		debug_print(string);		
	}
}
     5c2:	bc 01       	movw	r22, r24
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	bf c2       	rjmp	.+1406   	; 0xb48 <_Z15USART_putstringiPKc>
     5ca:	08 95       	ret

000005cc <_Z13debug_printlnPKc>:
     5cc:	bc 01       	movw	r22, r24
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	ba d2       	rcall	.+1396   	; 0xb48 <_Z15USART_putstringiPKc>
     5d4:	68 e5       	ldi	r22, 0x58	; 88
     5d6:	72 e0       	ldi	r23, 0x02	; 2
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	b5 c2       	rjmp	.+1386   	; 0xb48 <_Z15USART_putstringiPKc>
     5de:	08 95       	ret

000005e0 <_Z12debug_printff>:

void debug_printf(float debugNum)
{
     5e0:	0f 93       	push	r16
     5e2:	1f 93       	push	r17
     5e4:	cf 93       	push	r28
     5e6:	df 93       	push	r29
     5e8:	cd b7       	in	r28, 0x3d	; 61
     5ea:	de b7       	in	r29, 0x3e	; 62
     5ec:	64 97       	sbiw	r28, 0x14	; 20
     5ee:	0f b6       	in	r0, 0x3f	; 63
     5f0:	f8 94       	cli
     5f2:	de bf       	out	0x3e, r29	; 62
     5f4:	0f be       	out	0x3f, r0	; 63
     5f6:	cd bf       	out	0x3d, r28	; 61
	if(DEBUG_ENABLE == true)
	{
		char string[20];
		dtostrf(debugNum,10,5,string);
     5f8:	8e 01       	movw	r16, r28
     5fa:	0f 5f       	subi	r16, 0xFF	; 255
     5fc:	1f 4f       	sbci	r17, 0xFF	; 255
     5fe:	25 e0       	ldi	r18, 0x05	; 5
     600:	4a e0       	ldi	r20, 0x0A	; 10
     602:	97 d5       	rcall	.+2862   	; 0x1132 <dtostrf>
		debug_print(string);
     604:	c8 01       	movw	r24, r16
     606:	dd df       	rcall	.-70     	; 0x5c2 <_Z11debug_printPKc>
	}
}
     608:	64 96       	adiw	r28, 0x14	; 20
     60a:	0f b6       	in	r0, 0x3f	; 63
     60c:	f8 94       	cli
     60e:	de bf       	out	0x3e, r29	; 62
     610:	0f be       	out	0x3f, r0	; 63
     612:	cd bf       	out	0x3d, r28	; 61
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	1f 91       	pop	r17
     61a:	0f 91       	pop	r16
     61c:	08 95       	ret

0000061e <_Z10debug_beepv>:


//beep for 50ms, buzzer attached to PORTB.7 (Digital Pin 13, next to GND)
void debug_beep()
{
	sbi(PORTB,7);
     61e:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     620:	2f ef       	ldi	r18, 0xFF	; 255
     622:	80 e7       	ldi	r24, 0x70	; 112
     624:	92 e0       	ldi	r25, 0x02	; 2
     626:	21 50       	subi	r18, 0x01	; 1
     628:	80 40       	sbci	r24, 0x00	; 0
     62a:	90 40       	sbci	r25, 0x00	; 0
     62c:	e1 f7       	brne	.-8      	; 0x626 <_Z10debug_beepv+0x8>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <_Z10debug_beepv+0x12>
     630:	00 00       	nop
	_delay_ms(50);
	cbi(PORTB,7);
     632:	2f 98       	cbi	0x05, 7	; 5
     634:	08 95       	ret

00000636 <_Z15debug_beep_longv>:
}

//beep for 250ms, buzzer attached to PORTB.7 (Digital Pin 13, next to GND)
void debug_beep_long()
{
	sbi(PORTB,7);
     636:	2f 9a       	sbi	0x05, 7	; 5
     638:	2f ef       	ldi	r18, 0xFF	; 255
     63a:	84 e3       	ldi	r24, 0x34	; 52
     63c:	9c e0       	ldi	r25, 0x0C	; 12
     63e:	21 50       	subi	r18, 0x01	; 1
     640:	80 40       	sbci	r24, 0x00	; 0
     642:	90 40       	sbci	r25, 0x00	; 0
     644:	e1 f7       	brne	.-8      	; 0x63e <_Z15debug_beep_longv+0x8>
     646:	00 c0       	rjmp	.+0      	; 0x648 <_Z15debug_beep_longv+0x12>
     648:	00 00       	nop
	_delay_ms(250);
	cbi(PORTB,7);
     64a:	2f 98       	cbi	0x05, 7	; 5
     64c:	08 95       	ret

0000064e <_Z24quad_output_set_throttlei>:
}

//setters for outputs
void quad_output_set_throttle(int throttle)
{
	THROTTLE_OUT = throttle;
     64e:	90 93 a9 00 	sts	0x00A9, r25
     652:	80 93 a8 00 	sts	0x00A8, r24
	throttle_out = throttle;
     656:	bc 01       	movw	r22, r24
     658:	88 27       	eor	r24, r24
     65a:	77 fd       	sbrc	r23, 7
     65c:	80 95       	com	r24
     65e:	98 2f       	mov	r25, r24
     660:	00 d4       	rcall	.+2048   	; 0xe62 <__floatsisf>
     662:	60 93 80 02 	sts	0x0280, r22
     666:	70 93 81 02 	sts	0x0281, r23
     66a:	80 93 82 02 	sts	0x0282, r24
     66e:	90 93 83 02 	sts	0x0283, r25
     672:	08 95       	ret

00000674 <_Z16quad_output_initv>:
#include "quad_output.h"

float throttle_out;

void quad_output_init()
{
     674:	8f 92       	push	r8
     676:	9f 92       	push	r9
     678:	af 92       	push	r10
     67a:	bf 92       	push	r11
     67c:	cf 92       	push	r12
     67e:	df 92       	push	r13
     680:	ef 92       	push	r14
     682:	ff 92       	push	r15
     684:	0f 93       	push	r16
     686:	1f 93       	push	r17
     688:	cf 93       	push	r28
     68a:	df 93       	push	r29
	DDRH = 0xFF;  //set OC4x to output
     68c:	8f ef       	ldi	r24, 0xFF	; 255
     68e:	80 93 01 01 	sts	0x0101, r24
	DDRE = 0xFF; //output
     692:	8d b9       	out	0x0d, r24	; 13
	//System Clock as source
	//Mode 8: Phase and Freq. Correct PWM top=ICR1
	//OC1A output: Non-inverted
	//OC1B output: currently disabled
	//OC1C output: currently disabled
	ICR4 = (F_CPU / (SERVO_HZ*8)) - 1;
     694:	8f e3       	ldi	r24, 0x3F	; 63
     696:	9c e9       	ldi	r25, 0x9C	; 156
     698:	90 93 a7 00 	sts	0x00A7, r25
     69c:	80 93 a6 00 	sts	0x00A6, r24
	TCCR4A=(1<<COM4A1)|(1<<COM4B1)|(1<<COM4C1);//COM1A1 Clear OCnA when match counting up,Set on
     6a0:	38 ea       	ldi	r19, 0xA8	; 168
     6a2:	30 93 a0 00 	sts	0x00A0, r19
	TCCR4B=(1<<WGM43)|(1<<CS41);// Phase and Freq correct ICR1=Top
     6a6:	22 e1       	ldi	r18, 0x12	; 18
     6a8:	20 93 a1 00 	sts	0x00A1, r18
	
	ICR3 = (F_CPU / (SERVO_HZ*8)) - 1;
     6ac:	90 93 97 00 	sts	0x0097, r25
     6b0:	80 93 96 00 	sts	0x0096, r24
	TCCR3A=(1<<COM3A1)|(1<<COM3B1)|(1<<COM3C1);//COM1A1 Clear OCnA when match counting up,Set on
     6b4:	30 93 90 00 	sts	0x0090, r19
	TCCR3B=(1<<WGM33)|(1<<CS31);// Phase and Freq correct ICR1=Top
     6b8:	20 93 91 00 	sts	0x0091, r18
		
	THROTTLE_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     6bc:	c6 eb       	ldi	r28, 0xB6	; 182
     6be:	d3 e0       	ldi	r29, 0x03	; 3
     6c0:	d0 93 a9 00 	sts	0x00A9, r29
     6c4:	c0 93 a8 00 	sts	0x00A8, r28
	AILERON_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     6c8:	0f 2e       	mov	r0, r31
     6ca:	fa ea       	ldi	r31, 0xAA	; 170
     6cc:	8f 2e       	mov	r8, r31
     6ce:	91 2c       	mov	r9, r1
     6d0:	f0 2d       	mov	r31, r0
     6d2:	f4 01       	movw	r30, r8
     6d4:	d1 83       	std	Z+1, r29	; 0x01
     6d6:	c0 83       	st	Z, r28
	ELEVATOR_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     6d8:	0f 2e       	mov	r0, r31
     6da:	fc ea       	ldi	r31, 0xAC	; 172
     6dc:	af 2e       	mov	r10, r31
     6de:	b1 2c       	mov	r11, r1
     6e0:	f0 2d       	mov	r31, r0
     6e2:	f5 01       	movw	r30, r10
     6e4:	d1 83       	std	Z+1, r29	; 0x01
     6e6:	c0 83       	st	Z, r28
	RUDDER_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     6e8:	0f 2e       	mov	r0, r31
     6ea:	f8 e9       	ldi	r31, 0x98	; 152
     6ec:	cf 2e       	mov	r12, r31
     6ee:	d1 2c       	mov	r13, r1
     6f0:	f0 2d       	mov	r31, r0
     6f2:	f6 01       	movw	r30, r12
     6f4:	d1 83       	std	Z+1, r29	; 0x01
     6f6:	c0 83       	st	Z, r28
	GEAR_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     6f8:	0f 2e       	mov	r0, r31
     6fa:	fa e9       	ldi	r31, 0x9A	; 154
     6fc:	ef 2e       	mov	r14, r31
     6fe:	f1 2c       	mov	r15, r1
     700:	f0 2d       	mov	r31, r0
     702:	f7 01       	movw	r30, r14
     704:	d1 83       	std	Z+1, r29	; 0x01
     706:	c0 83       	st	Z, r28
	AUX_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     708:	0c e9       	ldi	r16, 0x9C	; 156
     70a:	10 e0       	ldi	r17, 0x00	; 0
     70c:	f8 01       	movw	r30, r16
     70e:	d1 83       	std	Z+1, r29	; 0x01
     710:	c0 83       	st	Z, r28
	
	quad_output_set_throttle(DEFAULT_PWM_OUTPUT);
     712:	86 eb       	ldi	r24, 0xB6	; 182
     714:	93 e0       	ldi	r25, 0x03	; 3
     716:	9b df       	rcall	.-202    	; 0x64e <_Z24quad_output_set_throttlei>
	throttle_out = throttle;
}

void quad_output_set_aileron(int aileron)
{
	AILERON_OUT = aileron;
     718:	f4 01       	movw	r30, r8
     71a:	d1 83       	std	Z+1, r29	; 0x01
     71c:	c0 83       	st	Z, r28
}

void quad_output_set_elevator(int elevator)
{
	ELEVATOR_OUT = elevator;
     71e:	f5 01       	movw	r30, r10
     720:	d1 83       	std	Z+1, r29	; 0x01
     722:	c0 83       	st	Z, r28
}

void quad_output_set_rudder(int rudder)
{
	RUDDER_OUT = rudder;
     724:	f6 01       	movw	r30, r12
     726:	d1 83       	std	Z+1, r29	; 0x01
     728:	c0 83       	st	Z, r28
}

void quad_output_set_gear(int gear)
{
	GEAR_OUT = gear;
     72a:	f7 01       	movw	r30, r14
     72c:	d1 83       	std	Z+1, r29	; 0x01
     72e:	c0 83       	st	Z, r28
}

void quad_output_set_aux(int aux)
{
	AUX_OUT = aux;
     730:	f8 01       	movw	r30, r16
     732:	d1 83       	std	Z+1, r29	; 0x01
     734:	c0 83       	st	Z, r28
	quad_output_set_aileron(DEFAULT_PWM_OUTPUT);
	quad_output_set_elevator(DEFAULT_PWM_OUTPUT);
	quad_output_set_rudder(DEFAULT_PWM_OUTPUT);
	quad_output_set_gear(DEFAULT_PWM_OUTPUT);
	quad_output_set_aux(DEFAULT_PWM_OUTPUT);
}
     736:	df 91       	pop	r29
     738:	cf 91       	pop	r28
     73a:	1f 91       	pop	r17
     73c:	0f 91       	pop	r16
     73e:	ff 90       	pop	r15
     740:	ef 90       	pop	r14
     742:	df 90       	pop	r13
     744:	cf 90       	pop	r12
     746:	bf 90       	pop	r11
     748:	af 90       	pop	r10
     74a:	9f 90       	pop	r9
     74c:	8f 90       	pop	r8
     74e:	08 95       	ret

00000750 <__vector_9>:

volatile uint8_t portHistory = 0x00;     // default is low

//Pin Change Interrupt for reading Channel Values
ISR(PCINT0_vect)
{
     750:	1f 92       	push	r1
     752:	0f 92       	push	r0
     754:	0f b6       	in	r0, 0x3f	; 63
     756:	0f 92       	push	r0
     758:	11 24       	eor	r1, r1
     75a:	0b b6       	in	r0, 0x3b	; 59
     75c:	0f 92       	push	r0
     75e:	2f 93       	push	r18
     760:	3f 93       	push	r19
     762:	4f 93       	push	r20
     764:	5f 93       	push	r21
     766:	6f 93       	push	r22
     768:	7f 93       	push	r23
     76a:	8f 93       	push	r24
     76c:	9f 93       	push	r25
     76e:	af 93       	push	r26
     770:	bf 93       	push	r27
     772:	cf 93       	push	r28
     774:	ef 93       	push	r30
     776:	ff 93       	push	r31
	uint8_t changedBits;
	
	//determine which pin on RX_PORT changed:
	changedBits = RX_PORT ^ portHistory;
     778:	83 b1       	in	r24, 0x03	; 3
     77a:	c0 91 84 02 	lds	r28, 0x0284
     77e:	c8 27       	eor	r28, r24
	portHistory = RX_PORT;
     780:	83 b1       	in	r24, 0x03	; 3
     782:	80 93 84 02 	sts	0x0284, r24
	
	
	//Now, operate for that pin:
	
	if(changedBits & (1 << THROTTLE_IN_PIN))	//if the pin assigned to throttle has changed (high->low or low->high)
     786:	c0 ff       	sbrs	r28, 0
     788:	1c c0       	rjmp	.+56     	; 0x7c2 <__vector_9+0x72>
	{
		if(RX_PORT & (1<<THROTTLE_IN_PIN))	//if the pin is high
     78a:	18 9b       	sbis	0x03, 0	; 3
     78c:	0a c0       	rjmp	.+20     	; 0x7a2 <__vector_9+0x52>
		{
			ulThrottleStart = micros();	//note the current time
     78e:	2a d1       	rcall	.+596    	; 0x9e4 <_Z6microsv>
     790:	60 93 99 02 	sts	0x0299, r22
     794:	70 93 9a 02 	sts	0x029A, r23
     798:	80 93 9b 02 	sts	0x029B, r24
     79c:	90 93 9c 02 	sts	0x029C, r25
     7a0:	10 c0       	rjmp	.+32     	; 0x7c2 <__vector_9+0x72>
		}
		else	//if the pin has gone low
		{
			unThrottleInShared = (uint16_t)(micros()-ulThrottleStart);		//we are interested in how long it was high for
     7a2:	20 d1       	rcall	.+576    	; 0x9e4 <_Z6microsv>
     7a4:	20 91 99 02 	lds	r18, 0x0299
     7a8:	30 91 9a 02 	lds	r19, 0x029A
     7ac:	62 1b       	sub	r22, r18
     7ae:	73 0b       	sbc	r23, r19
     7b0:	70 93 a9 02 	sts	0x02A9, r23
     7b4:	60 93 a8 02 	sts	0x02A8, r22
			rxUpdateFlagsShared |= THROTTLE_FLAG;		//and we need to let our code know that there is new data for the throttle
     7b8:	80 91 9d 02 	lds	r24, 0x029D
     7bc:	81 60       	ori	r24, 0x01	; 1
     7be:	80 93 9d 02 	sts	0x029D, r24
		}
	}
	
	if(changedBits & (1 << AILERON_IN_PIN))
     7c2:	c1 ff       	sbrs	r28, 1
     7c4:	1c c0       	rjmp	.+56     	; 0x7fe <__vector_9+0xae>
	{
		if(RX_PORT & (1<<AILERON_IN_PIN))
     7c6:	19 9b       	sbis	0x03, 1	; 3
     7c8:	0a c0       	rjmp	.+20     	; 0x7de <__vector_9+0x8e>
		{
			ulAileronStart = micros();
     7ca:	0c d1       	rcall	.+536    	; 0x9e4 <_Z6microsv>
     7cc:	60 93 95 02 	sts	0x0295, r22
     7d0:	70 93 96 02 	sts	0x0296, r23
     7d4:	80 93 97 02 	sts	0x0297, r24
     7d8:	90 93 98 02 	sts	0x0298, r25
     7dc:	10 c0       	rjmp	.+32     	; 0x7fe <__vector_9+0xae>
		}
		else
		{
			unAileronInShared = (uint16_t)(micros()-ulAileronStart);
     7de:	02 d1       	rcall	.+516    	; 0x9e4 <_Z6microsv>
     7e0:	20 91 95 02 	lds	r18, 0x0295
     7e4:	30 91 96 02 	lds	r19, 0x0296
     7e8:	62 1b       	sub	r22, r18
     7ea:	73 0b       	sbc	r23, r19
     7ec:	70 93 a7 02 	sts	0x02A7, r23
     7f0:	60 93 a6 02 	sts	0x02A6, r22
			rxUpdateFlagsShared |= AILERON_FLAG;
     7f4:	80 91 9d 02 	lds	r24, 0x029D
     7f8:	82 60       	ori	r24, 0x02	; 2
     7fa:	80 93 9d 02 	sts	0x029D, r24
		}
	}
	
	if(changedBits & (1 << ELEVATOR_IN_PIN))
     7fe:	c2 ff       	sbrs	r28, 2
     800:	1c c0       	rjmp	.+56     	; 0x83a <__vector_9+0xea>
	{
		if(RX_PORT & (1<<ELEVATOR_IN_PIN))
     802:	1a 9b       	sbis	0x03, 2	; 3
     804:	0a c0       	rjmp	.+20     	; 0x81a <__vector_9+0xca>
		{
			ulElevatorStart = micros();
     806:	ee d0       	rcall	.+476    	; 0x9e4 <_Z6microsv>
     808:	60 93 91 02 	sts	0x0291, r22
     80c:	70 93 92 02 	sts	0x0292, r23
     810:	80 93 93 02 	sts	0x0293, r24
     814:	90 93 94 02 	sts	0x0294, r25
     818:	10 c0       	rjmp	.+32     	; 0x83a <__vector_9+0xea>
		}
		else
		{
			unElevatorInShared = (uint16_t)(micros()-ulElevatorStart);
     81a:	e4 d0       	rcall	.+456    	; 0x9e4 <_Z6microsv>
     81c:	20 91 91 02 	lds	r18, 0x0291
     820:	30 91 92 02 	lds	r19, 0x0292
     824:	62 1b       	sub	r22, r18
     826:	73 0b       	sbc	r23, r19
     828:	70 93 a5 02 	sts	0x02A5, r23
     82c:	60 93 a4 02 	sts	0x02A4, r22
			rxUpdateFlagsShared |= ELEVATOR_FLAG;
     830:	80 91 9d 02 	lds	r24, 0x029D
     834:	84 60       	ori	r24, 0x04	; 4
     836:	80 93 9d 02 	sts	0x029D, r24
		}
	}
	
	if(changedBits & (1 << RUDDER_IN_PIN))
     83a:	c3 ff       	sbrs	r28, 3
     83c:	1c c0       	rjmp	.+56     	; 0x876 <__vector_9+0x126>
	{
		if(RX_PORT & (1<<RUDDER_IN_PIN))
     83e:	1b 9b       	sbis	0x03, 3	; 3
     840:	0a c0       	rjmp	.+20     	; 0x856 <__vector_9+0x106>
		{
			ulRudderStart = micros();
     842:	d0 d0       	rcall	.+416    	; 0x9e4 <_Z6microsv>
     844:	60 93 8d 02 	sts	0x028D, r22
     848:	70 93 8e 02 	sts	0x028E, r23
     84c:	80 93 8f 02 	sts	0x028F, r24
     850:	90 93 90 02 	sts	0x0290, r25
     854:	10 c0       	rjmp	.+32     	; 0x876 <__vector_9+0x126>
		}
		else
		{
			unRudderInShared = (uint16_t)(micros()-ulRudderStart);
     856:	c6 d0       	rcall	.+396    	; 0x9e4 <_Z6microsv>
     858:	20 91 8d 02 	lds	r18, 0x028D
     85c:	30 91 8e 02 	lds	r19, 0x028E
     860:	62 1b       	sub	r22, r18
     862:	73 0b       	sbc	r23, r19
     864:	70 93 a3 02 	sts	0x02A3, r23
     868:	60 93 a2 02 	sts	0x02A2, r22
			rxUpdateFlagsShared |= RUDDER_FLAG;
     86c:	80 91 9d 02 	lds	r24, 0x029D
     870:	88 60       	ori	r24, 0x08	; 8
     872:	80 93 9d 02 	sts	0x029D, r24
		}
	}
	
	if(changedBits & (1 << GEAR_IN_PIN))
     876:	c4 ff       	sbrs	r28, 4
     878:	1c c0       	rjmp	.+56     	; 0x8b2 <__vector_9+0x162>
	{
		if(RX_PORT & (1<<GEAR_IN_PIN))
     87a:	1c 9b       	sbis	0x03, 4	; 3
     87c:	0a c0       	rjmp	.+20     	; 0x892 <__vector_9+0x142>
		{
			ulGearStart = micros();
     87e:	b2 d0       	rcall	.+356    	; 0x9e4 <_Z6microsv>
     880:	60 93 89 02 	sts	0x0289, r22
     884:	70 93 8a 02 	sts	0x028A, r23
     888:	80 93 8b 02 	sts	0x028B, r24
     88c:	90 93 8c 02 	sts	0x028C, r25
     890:	10 c0       	rjmp	.+32     	; 0x8b2 <__vector_9+0x162>
		}
		else
		{
			unGearInShared = (uint16_t)(micros()-ulGearStart);
     892:	a8 d0       	rcall	.+336    	; 0x9e4 <_Z6microsv>
     894:	20 91 89 02 	lds	r18, 0x0289
     898:	30 91 8a 02 	lds	r19, 0x028A
     89c:	62 1b       	sub	r22, r18
     89e:	73 0b       	sbc	r23, r19
     8a0:	70 93 a1 02 	sts	0x02A1, r23
     8a4:	60 93 a0 02 	sts	0x02A0, r22
			rxUpdateFlagsShared |= GEAR_FLAG;
     8a8:	80 91 9d 02 	lds	r24, 0x029D
     8ac:	80 61       	ori	r24, 0x10	; 16
     8ae:	80 93 9d 02 	sts	0x029D, r24
		}
	}
	
	if(changedBits & (1 << AUX_IN_PIN))
     8b2:	c5 ff       	sbrs	r28, 5
     8b4:	1c c0       	rjmp	.+56     	; 0x8ee <__vector_9+0x19e>
	{
		if(RX_PORT & (1<<AUX_IN_PIN))
     8b6:	1d 9b       	sbis	0x03, 5	; 3
     8b8:	0a c0       	rjmp	.+20     	; 0x8ce <__vector_9+0x17e>
		{
			ulAuxStart = micros();
     8ba:	94 d0       	rcall	.+296    	; 0x9e4 <_Z6microsv>
     8bc:	60 93 85 02 	sts	0x0285, r22
     8c0:	70 93 86 02 	sts	0x0286, r23
     8c4:	80 93 87 02 	sts	0x0287, r24
     8c8:	90 93 88 02 	sts	0x0288, r25
     8cc:	10 c0       	rjmp	.+32     	; 0x8ee <__vector_9+0x19e>
		}
		else
		{
			unAuxInShared = (uint16_t)(micros()-ulAuxStart);
     8ce:	8a d0       	rcall	.+276    	; 0x9e4 <_Z6microsv>
     8d0:	20 91 85 02 	lds	r18, 0x0285
     8d4:	30 91 86 02 	lds	r19, 0x0286
     8d8:	62 1b       	sub	r22, r18
     8da:	73 0b       	sbc	r23, r19
     8dc:	70 93 9f 02 	sts	0x029F, r23
     8e0:	60 93 9e 02 	sts	0x029E, r22
			rxUpdateFlagsShared |= AUX_FLAG;
     8e4:	80 91 9d 02 	lds	r24, 0x029D
     8e8:	80 62       	ori	r24, 0x20	; 32
     8ea:	80 93 9d 02 	sts	0x029D, r24
		}
	}
}
     8ee:	ff 91       	pop	r31
     8f0:	ef 91       	pop	r30
     8f2:	cf 91       	pop	r28
     8f4:	bf 91       	pop	r27
     8f6:	af 91       	pop	r26
     8f8:	9f 91       	pop	r25
     8fa:	8f 91       	pop	r24
     8fc:	7f 91       	pop	r23
     8fe:	6f 91       	pop	r22
     900:	5f 91       	pop	r21
     902:	4f 91       	pop	r20
     904:	3f 91       	pop	r19
     906:	2f 91       	pop	r18
     908:	0f 90       	pop	r0
     90a:	0b be       	out	0x3b, r0	; 59
     90c:	0f 90       	pop	r0
     90e:	0f be       	out	0x3f, r0	; 63
     910:	0f 90       	pop	r0
     912:	1f 90       	pop	r1
     914:	18 95       	reti

00000916 <_Z7rx_initv>:

void rx_init()
{
	DDRB = 0x00;
     916:	14 b8       	out	0x04, r1	; 4
	sbi(DDRB,7);
     918:	27 9a       	sbi	0x04, 7	; 4
	//Enable pin change interrupts
	PCMSK0 |= (1<<PCINT0);	//enable PCINT0
     91a:	eb e6       	ldi	r30, 0x6B	; 107
     91c:	f0 e0       	ldi	r31, 0x00	; 0
     91e:	80 81       	ld	r24, Z
     920:	81 60       	ori	r24, 0x01	; 1
     922:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT1);	//enable PCINT1
     924:	80 81       	ld	r24, Z
     926:	82 60       	ori	r24, 0x02	; 2
     928:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT2);	//enable PCINT2
     92a:	80 81       	ld	r24, Z
     92c:	84 60       	ori	r24, 0x04	; 4
     92e:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT3);	//enable PCINT3
     930:	80 81       	ld	r24, Z
     932:	88 60       	ori	r24, 0x08	; 8
     934:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT4);	//enable PCINT4
     936:	80 81       	ld	r24, Z
     938:	80 61       	ori	r24, 0x10	; 16
     93a:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT5);	//enable PCINT5
     93c:	80 81       	ld	r24, Z
     93e:	80 62       	ori	r24, 0x20	; 32
     940:	80 83       	st	Z, r24
	PCICR |= (1<<PCIE0);	//enable pin change interrupts 0:7
     942:	e8 e6       	ldi	r30, 0x68	; 104
     944:	f0 e0       	ldi	r31, 0x00	; 0
     946:	80 81       	ld	r24, Z
     948:	81 60       	ori	r24, 0x01	; 1
     94a:	80 83       	st	Z, r24
	sei(); //enable interrupts
     94c:	78 94       	sei
     94e:	08 95       	ret

00000950 <__vector_23>:
	m = timer0_millis;
	SREG = oldSREG;
	sei();

	return m;
}
     950:	1f 92       	push	r1
     952:	0f 92       	push	r0
     954:	0f b6       	in	r0, 0x3f	; 63
     956:	0f 92       	push	r0
     958:	11 24       	eor	r1, r1
     95a:	2f 93       	push	r18
     95c:	3f 93       	push	r19
     95e:	8f 93       	push	r24
     960:	9f 93       	push	r25
     962:	af 93       	push	r26
     964:	bf 93       	push	r27
     966:	80 91 ab 02 	lds	r24, 0x02AB
     96a:	90 91 ac 02 	lds	r25, 0x02AC
     96e:	a0 91 ad 02 	lds	r26, 0x02AD
     972:	b0 91 ae 02 	lds	r27, 0x02AE
     976:	30 91 aa 02 	lds	r19, 0x02AA
     97a:	23 e0       	ldi	r18, 0x03	; 3
     97c:	23 0f       	add	r18, r19
     97e:	2d 37       	cpi	r18, 0x7D	; 125
     980:	20 f4       	brcc	.+8      	; 0x98a <__vector_23+0x3a>
     982:	01 96       	adiw	r24, 0x01	; 1
     984:	a1 1d       	adc	r26, r1
     986:	b1 1d       	adc	r27, r1
     988:	05 c0       	rjmp	.+10     	; 0x994 <__vector_23+0x44>
     98a:	26 e8       	ldi	r18, 0x86	; 134
     98c:	23 0f       	add	r18, r19
     98e:	02 96       	adiw	r24, 0x02	; 2
     990:	a1 1d       	adc	r26, r1
     992:	b1 1d       	adc	r27, r1
     994:	20 93 aa 02 	sts	0x02AA, r18
     998:	80 93 ab 02 	sts	0x02AB, r24
     99c:	90 93 ac 02 	sts	0x02AC, r25
     9a0:	a0 93 ad 02 	sts	0x02AD, r26
     9a4:	b0 93 ae 02 	sts	0x02AE, r27
     9a8:	80 91 af 02 	lds	r24, 0x02AF
     9ac:	90 91 b0 02 	lds	r25, 0x02B0
     9b0:	a0 91 b1 02 	lds	r26, 0x02B1
     9b4:	b0 91 b2 02 	lds	r27, 0x02B2
     9b8:	01 96       	adiw	r24, 0x01	; 1
     9ba:	a1 1d       	adc	r26, r1
     9bc:	b1 1d       	adc	r27, r1
     9be:	80 93 af 02 	sts	0x02AF, r24
     9c2:	90 93 b0 02 	sts	0x02B0, r25
     9c6:	a0 93 b1 02 	sts	0x02B1, r26
     9ca:	b0 93 b2 02 	sts	0x02B2, r27
     9ce:	bf 91       	pop	r27
     9d0:	af 91       	pop	r26
     9d2:	9f 91       	pop	r25
     9d4:	8f 91       	pop	r24
     9d6:	3f 91       	pop	r19
     9d8:	2f 91       	pop	r18
     9da:	0f 90       	pop	r0
     9dc:	0f be       	out	0x3f, r0	; 63
     9de:	0f 90       	pop	r0
     9e0:	1f 90       	pop	r1
     9e2:	18 95       	reti

000009e4 <_Z6microsv>:

long  micros() {

	unsigned long m;
	uint8_t oldSREG = SREG, t;
     9e4:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
     9e6:	f8 94       	cli
	m = timer0_overflow_count;
     9e8:	80 91 af 02 	lds	r24, 0x02AF
     9ec:	90 91 b0 02 	lds	r25, 0x02B0
     9f0:	a0 91 b1 02 	lds	r26, 0x02B1
     9f4:	b0 91 b2 02 	lds	r27, 0x02B2
	t = TCNT0;
     9f8:	26 b5       	in	r18, 0x26	; 38
  
#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
     9fa:	a8 9b       	sbis	0x15, 0	; 21
     9fc:	02 c0       	rjmp	.+4      	; 0xa02 <_Z6microsv+0x1e>
     9fe:	2f 3f       	cpi	r18, 0xFF	; 255
     a00:	a9 f4       	brne	.+42     	; 0xa2c <_Z6microsv+0x48>
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
     a02:	3f bf       	out	0x3f, r19	; 63
	
	sei();
     a04:	78 94       	sei
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
     a06:	ba 2f       	mov	r27, r26
     a08:	a9 2f       	mov	r26, r25
     a0a:	98 2f       	mov	r25, r24
     a0c:	88 27       	eor	r24, r24
     a0e:	82 0f       	add	r24, r18
     a10:	91 1d       	adc	r25, r1
     a12:	a1 1d       	adc	r26, r1
     a14:	b1 1d       	adc	r27, r1
     a16:	bc 01       	movw	r22, r24
     a18:	cd 01       	movw	r24, r26
     a1a:	66 0f       	add	r22, r22
     a1c:	77 1f       	adc	r23, r23
     a1e:	88 1f       	adc	r24, r24
     a20:	99 1f       	adc	r25, r25
     a22:	66 0f       	add	r22, r22
     a24:	77 1f       	adc	r23, r23
     a26:	88 1f       	adc	r24, r24
     a28:	99 1f       	adc	r25, r25
     a2a:	08 95       	ret
	m = timer0_overflow_count;
	t = TCNT0;
  
#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
		m++;
     a2c:	01 96       	adiw	r24, 0x01	; 1
     a2e:	a1 1d       	adc	r26, r1
     a30:	b1 1d       	adc	r27, r1
     a32:	e7 cf       	rjmp	.-50     	; 0xa02 <_Z6microsv+0x1e>

00000a34 <_Z10initTimersv>:


void initTimers()
{
	// enable timer overflow interrupt for Timer0
	TIMSK0=(1<<TOIE0);
     a34:	81 e0       	ldi	r24, 0x01	; 1
     a36:	80 93 6e 00 	sts	0x006E, r24
	
	//set timer to zero
	TCNT0=0x00;
     a3a:	16 bc       	out	0x26, r1	; 38

	// start timer0 with /1024 prescaler
	TCCR0B = (1<<CS01) | (1<<CS00);
     a3c:	83 e0       	ldi	r24, 0x03	; 3
     a3e:	85 bd       	out	0x25, r24	; 37
     a40:	08 95       	ret

00000a42 <_Z10USART_initii>:
	{
		while(!(UCSR3A & (1<<RXC3)));
		return UDR3;
	}
	
}
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	ec 01       	movw	r28, r24
     a48:	cb 01       	movw	r24, r22
     a4a:	aa 27       	eor	r26, r26
     a4c:	97 fd       	sbrc	r25, 7
     a4e:	a0 95       	com	r26
     a50:	ba 2f       	mov	r27, r26
     a52:	88 0f       	add	r24, r24
     a54:	99 1f       	adc	r25, r25
     a56:	aa 1f       	adc	r26, r26
     a58:	bb 1f       	adc	r27, r27
     a5a:	88 0f       	add	r24, r24
     a5c:	99 1f       	adc	r25, r25
     a5e:	aa 1f       	adc	r26, r26
     a60:	bb 1f       	adc	r27, r27
     a62:	9c 01       	movw	r18, r24
     a64:	ad 01       	movw	r20, r26
     a66:	22 0f       	add	r18, r18
     a68:	33 1f       	adc	r19, r19
     a6a:	44 1f       	adc	r20, r20
     a6c:	55 1f       	adc	r21, r21
     a6e:	22 0f       	add	r18, r18
     a70:	33 1f       	adc	r19, r19
     a72:	44 1f       	adc	r20, r20
     a74:	55 1f       	adc	r21, r21
     a76:	60 e0       	ldi	r22, 0x00	; 0
     a78:	74 e2       	ldi	r23, 0x24	; 36
     a7a:	84 ef       	ldi	r24, 0xF4	; 244
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	37 d3       	rcall	.+1646   	; 0x10ee <__udivmodsi4>
     a80:	21 50       	subi	r18, 0x01	; 1
     a82:	31 09       	sbc	r19, r1
     a84:	20 97       	sbiw	r28, 0x00	; 0
     a86:	59 f4       	brne	.+22     	; 0xa9e <_Z10USART_initii+0x5c>
     a88:	30 93 c5 00 	sts	0x00C5, r19
     a8c:	20 93 c4 00 	sts	0x00C4, r18
     a90:	88 e1       	ldi	r24, 0x18	; 24
     a92:	80 93 c1 00 	sts	0x00C1, r24
     a96:	86 e0       	ldi	r24, 0x06	; 6
     a98:	80 93 c2 00 	sts	0x00C2, r24
     a9c:	28 c0       	rjmp	.+80     	; 0xaee <_Z10USART_initii+0xac>
     a9e:	c1 30       	cpi	r28, 0x01	; 1
     aa0:	d1 05       	cpc	r29, r1
     aa2:	59 f4       	brne	.+22     	; 0xaba <_Z10USART_initii+0x78>
     aa4:	30 93 cd 00 	sts	0x00CD, r19
     aa8:	20 93 cc 00 	sts	0x00CC, r18
     aac:	88 e1       	ldi	r24, 0x18	; 24
     aae:	80 93 c9 00 	sts	0x00C9, r24
     ab2:	86 e0       	ldi	r24, 0x06	; 6
     ab4:	80 93 ca 00 	sts	0x00CA, r24
     ab8:	1a c0       	rjmp	.+52     	; 0xaee <_Z10USART_initii+0xac>
     aba:	c2 30       	cpi	r28, 0x02	; 2
     abc:	d1 05       	cpc	r29, r1
     abe:	59 f4       	brne	.+22     	; 0xad6 <_Z10USART_initii+0x94>
     ac0:	30 93 d5 00 	sts	0x00D5, r19
     ac4:	20 93 d4 00 	sts	0x00D4, r18
     ac8:	88 e1       	ldi	r24, 0x18	; 24
     aca:	80 93 d1 00 	sts	0x00D1, r24
     ace:	86 e0       	ldi	r24, 0x06	; 6
     ad0:	80 93 d2 00 	sts	0x00D2, r24
     ad4:	0c c0       	rjmp	.+24     	; 0xaee <_Z10USART_initii+0xac>
     ad6:	23 97       	sbiw	r28, 0x03	; 3
     ad8:	51 f4       	brne	.+20     	; 0xaee <_Z10USART_initii+0xac>
     ada:	30 93 35 01 	sts	0x0135, r19
     ade:	20 93 34 01 	sts	0x0134, r18
     ae2:	88 e1       	ldi	r24, 0x18	; 24
     ae4:	80 93 31 01 	sts	0x0131, r24
     ae8:	86 e0       	ldi	r24, 0x06	; 6
     aea:	80 93 32 01 	sts	0x0132, r24
     aee:	df 91       	pop	r29
     af0:	cf 91       	pop	r28
     af2:	08 95       	ret

00000af4 <_Z10USART_sendih>:
     af4:	00 97       	sbiw	r24, 0x00	; 0
     af6:	41 f4       	brne	.+16     	; 0xb08 <_Z10USART_sendih+0x14>
     af8:	e0 ec       	ldi	r30, 0xC0	; 192
     afa:	f0 e0       	ldi	r31, 0x00	; 0
     afc:	80 81       	ld	r24, Z
     afe:	85 ff       	sbrs	r24, 5
     b00:	fd cf       	rjmp	.-6      	; 0xafc <_Z10USART_sendih+0x8>
     b02:	60 93 c6 00 	sts	0x00C6, r22
     b06:	08 95       	ret
     b08:	81 30       	cpi	r24, 0x01	; 1
     b0a:	91 05       	cpc	r25, r1
     b0c:	41 f4       	brne	.+16     	; 0xb1e <_Z10USART_sendih+0x2a>
     b0e:	e8 ec       	ldi	r30, 0xC8	; 200
     b10:	f0 e0       	ldi	r31, 0x00	; 0
     b12:	80 81       	ld	r24, Z
     b14:	85 ff       	sbrs	r24, 5
     b16:	fd cf       	rjmp	.-6      	; 0xb12 <_Z10USART_sendih+0x1e>
     b18:	60 93 ce 00 	sts	0x00CE, r22
     b1c:	08 95       	ret
     b1e:	82 30       	cpi	r24, 0x02	; 2
     b20:	91 05       	cpc	r25, r1
     b22:	41 f4       	brne	.+16     	; 0xb34 <_Z10USART_sendih+0x40>
     b24:	e0 ed       	ldi	r30, 0xD0	; 208
     b26:	f0 e0       	ldi	r31, 0x00	; 0
     b28:	80 81       	ld	r24, Z
     b2a:	85 ff       	sbrs	r24, 5
     b2c:	fd cf       	rjmp	.-6      	; 0xb28 <_Z10USART_sendih+0x34>
     b2e:	60 93 d6 00 	sts	0x00D6, r22
     b32:	08 95       	ret
     b34:	03 97       	sbiw	r24, 0x03	; 3
     b36:	39 f4       	brne	.+14     	; 0xb46 <_Z10USART_sendih+0x52>
     b38:	e0 e3       	ldi	r30, 0x30	; 48
     b3a:	f1 e0       	ldi	r31, 0x01	; 1
     b3c:	80 81       	ld	r24, Z
     b3e:	85 ff       	sbrs	r24, 5
     b40:	fd cf       	rjmp	.-6      	; 0xb3c <_Z10USART_sendih+0x48>
     b42:	60 93 36 01 	sts	0x0136, r22
     b46:	08 95       	ret

00000b48 <_Z15USART_putstringiPKc>:

	//return the received string
	return(string);
}*/

void USART_putstring(int usartNum, const char* StringPtr){
     b48:	0f 93       	push	r16
     b4a:	1f 93       	push	r17
     b4c:	cf 93       	push	r28
     b4e:	df 93       	push	r29
     b50:	8c 01       	movw	r16, r24
     b52:	eb 01       	movw	r28, r22
	
	while(*StringPtr != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
     b54:	68 81       	ld	r22, Y
     b56:	66 23       	and	r22, r22
     b58:	31 f0       	breq	.+12     	; 0xb66 <_Z15USART_putstringiPKc+0x1e>
     b5a:	21 96       	adiw	r28, 0x01	; 1
		USART_send(usartNum, *StringPtr);    //Using the simple send function we send one char at a time
     b5c:	c8 01       	movw	r24, r16
     b5e:	ca df       	rcall	.-108    	; 0xaf4 <_Z10USART_sendih>
	return(string);
}*/

void USART_putstring(int usartNum, const char* StringPtr){
	
	while(*StringPtr != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
     b60:	69 91       	ld	r22, Y+
     b62:	61 11       	cpse	r22, r1
     b64:	fb cf       	rjmp	.-10     	; 0xb5c <_Z15USART_putstringiPKc+0x14>
		USART_send(usartNum, *StringPtr);    //Using the simple send function we send one char at a time
	StringPtr++;}        //We increment the pointer so we can read the next char
	
}
     b66:	df 91       	pop	r29
     b68:	cf 91       	pop	r28
     b6a:	1f 91       	pop	r17
     b6c:	0f 91       	pop	r16
     b6e:	08 95       	ret

00000b70 <_Z10initialisev>:

bool initialise()
{
	bool success = true;
	
	USART_init(USART_PC,9600);
     b70:	60 e8       	ldi	r22, 0x80	; 128
     b72:	75 e2       	ldi	r23, 0x25	; 37
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	64 df       	rcall	.-312    	; 0xa42 <_Z10USART_initii>
	initTimers();
     b7a:	5c df       	rcall	.-328    	; 0xa34 <_Z10initTimersv>
	rx_init();
     b7c:	cc de       	rcall	.-616    	; 0x916 <_Z7rx_initv>
	/*
	if(altimeter_init()==false)
		success=false;
		*/

	quad_output_init();
     b7e:	7a dd       	rcall	.-1292   	; 0x674 <_Z16quad_output_initv>
			_delay_ms(200);
		}
	}
	*/
	
	i2c_init();
     b80:	6e db       	rcall	.-2340   	; 0x25e <i2c_init>
	
	init_HMC5883L();
     b82:	cc db       	rcall	.-2152   	; 0x31c <_Z13init_HMC5883Lv>
	
	debug_println("Initialization succeeded!");
     b84:	8b e5       	ldi	r24, 0x5B	; 91
     b86:	92 e0       	ldi	r25, 0x02	; 2
     b88:	21 dd       	rcall	.-1470   	; 0x5cc <_Z13debug_printlnPKc>
	
	//beep some pattern I can recognize
	debug_beep_long();
     b8a:	55 dd       	rcall	.-1366   	; 0x636 <_Z15debug_beep_longv>
     b8c:	2f ef       	ldi	r18, 0xFF	; 255
     b8e:	84 e3       	ldi	r24, 0x34	; 52
     b90:	9c e0       	ldi	r25, 0x0C	; 12
     b92:	21 50       	subi	r18, 0x01	; 1
     b94:	80 40       	sbci	r24, 0x00	; 0
     b96:	90 40       	sbci	r25, 0x00	; 0
     b98:	e1 f7       	brne	.-8      	; 0xb92 <_Z10initialisev+0x22>
     b9a:	00 c0       	rjmp	.+0      	; 0xb9c <_Z10initialisev+0x2c>
     b9c:	00 00       	nop
	_delay_ms(250);
	debug_beep();
     b9e:	3f dd       	rcall	.-1410   	; 0x61e <_Z10debug_beepv>
     ba0:	2f ef       	ldi	r18, 0xFF	; 255
     ba2:	84 e3       	ldi	r24, 0x34	; 52
     ba4:	9c e0       	ldi	r25, 0x0C	; 12
     ba6:	21 50       	subi	r18, 0x01	; 1
     ba8:	80 40       	sbci	r24, 0x00	; 0
     baa:	90 40       	sbci	r25, 0x00	; 0
     bac:	e1 f7       	brne	.-8      	; 0xba6 <_Z10initialisev+0x36>
     bae:	00 c0       	rjmp	.+0      	; 0xbb0 <_Z10initialisev+0x40>
     bb0:	00 00       	nop
	_delay_ms(250);
	debug_beep();
     bb2:	35 dd       	rcall	.-1430   	; 0x61e <_Z10debug_beepv>
     bb4:	2f ef       	ldi	r18, 0xFF	; 255
     bb6:	84 e3       	ldi	r24, 0x34	; 52
     bb8:	9c e0       	ldi	r25, 0x0C	; 12
     bba:	21 50       	subi	r18, 0x01	; 1
     bbc:	80 40       	sbci	r24, 0x00	; 0
     bbe:	90 40       	sbci	r25, 0x00	; 0
     bc0:	e1 f7       	brne	.-8      	; 0xbba <_Z10initialisev+0x4a>
     bc2:	00 c0       	rjmp	.+0      	; 0xbc4 <_Z10initialisev+0x54>
     bc4:	00 00       	nop
	_delay_ms(250);
	debug_beep();
     bc6:	2b dd       	rcall	.-1450   	; 0x61e <_Z10debug_beepv>
     bc8:	2f ef       	ldi	r18, 0xFF	; 255
     bca:	84 e3       	ldi	r24, 0x34	; 52
     bcc:	9c e0       	ldi	r25, 0x0C	; 12
     bce:	21 50       	subi	r18, 0x01	; 1
     bd0:	80 40       	sbci	r24, 0x00	; 0
     bd2:	90 40       	sbci	r25, 0x00	; 0
     bd4:	e1 f7       	brne	.-8      	; 0xbce <_Z10initialisev+0x5e>
     bd6:	00 c0       	rjmp	.+0      	; 0xbd8 <_Z10initialisev+0x68>
     bd8:	00 00       	nop
	_delay_ms(250);
	debug_beep_long();
     bda:	2d dd       	rcall	.-1446   	; 0x636 <_Z15debug_beep_longv>
	
	return success;
}
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	08 95       	ret

00000be0 <main>:

bool initialise();

int main(void)
{
	initialise();
     be0:	c7 df       	rcall	.-114    	; 0xb70 <_Z10initialisev>
     be2:	2f ef       	ldi	r18, 0xFF	; 255
     be4:	89 e6       	ldi	r24, 0x69	; 105
     be6:	98 e1       	ldi	r25, 0x18	; 24
     be8:	21 50       	subi	r18, 0x01	; 1
     bea:	80 40       	sbci	r24, 0x00	; 0
     bec:	90 40       	sbci	r25, 0x00	; 0
     bee:	e1 f7       	brne	.-8      	; 0xbe8 <main+0x8>
     bf0:	00 c0       	rjmp	.+0      	; 0xbf2 <main+0x12>
     bf2:	00 00       	nop
	while(1)
	{
		//rx_update();
		_delay_ms(500);
		//debug_printf(getHeading());
		getHeading();
     bf4:	a9 db       	rcall	.-2222   	; 0x348 <_Z10getHeadingv>
     bf6:	f5 cf       	rjmp	.-22     	; 0xbe2 <main+0x2>

00000bf8 <__subsf3>:
     bf8:	50 58       	subi	r21, 0x80	; 128

00000bfa <__addsf3>:
     bfa:	bb 27       	eor	r27, r27
     bfc:	aa 27       	eor	r26, r26
     bfe:	0e d0       	rcall	.+28     	; 0xc1c <__addsf3x>
     c00:	cb c1       	rjmp	.+918    	; 0xf98 <__fp_round>
     c02:	bc d1       	rcall	.+888    	; 0xf7c <__fp_pscA>
     c04:	30 f0       	brcs	.+12     	; 0xc12 <__addsf3+0x18>
     c06:	c1 d1       	rcall	.+898    	; 0xf8a <__fp_pscB>
     c08:	20 f0       	brcs	.+8      	; 0xc12 <__addsf3+0x18>
     c0a:	31 f4       	brne	.+12     	; 0xc18 <__addsf3+0x1e>
     c0c:	9f 3f       	cpi	r25, 0xFF	; 255
     c0e:	11 f4       	brne	.+4      	; 0xc14 <__addsf3+0x1a>
     c10:	1e f4       	brtc	.+6      	; 0xc18 <__addsf3+0x1e>
     c12:	8c c1       	rjmp	.+792    	; 0xf2c <__fp_nan>
     c14:	0e f4       	brtc	.+2      	; 0xc18 <__addsf3+0x1e>
     c16:	e0 95       	com	r30
     c18:	e7 fb       	bst	r30, 7
     c1a:	82 c1       	rjmp	.+772    	; 0xf20 <__fp_inf>

00000c1c <__addsf3x>:
     c1c:	e9 2f       	mov	r30, r25
     c1e:	cd d1       	rcall	.+922    	; 0xfba <__fp_split3>
     c20:	80 f3       	brcs	.-32     	; 0xc02 <__addsf3+0x8>
     c22:	ba 17       	cp	r27, r26
     c24:	62 07       	cpc	r22, r18
     c26:	73 07       	cpc	r23, r19
     c28:	84 07       	cpc	r24, r20
     c2a:	95 07       	cpc	r25, r21
     c2c:	18 f0       	brcs	.+6      	; 0xc34 <__addsf3x+0x18>
     c2e:	71 f4       	brne	.+28     	; 0xc4c <__addsf3x+0x30>
     c30:	9e f5       	brtc	.+102    	; 0xc98 <__addsf3x+0x7c>
     c32:	e5 c1       	rjmp	.+970    	; 0xffe <__fp_zero>
     c34:	0e f4       	brtc	.+2      	; 0xc38 <__addsf3x+0x1c>
     c36:	e0 95       	com	r30
     c38:	0b 2e       	mov	r0, r27
     c3a:	ba 2f       	mov	r27, r26
     c3c:	a0 2d       	mov	r26, r0
     c3e:	0b 01       	movw	r0, r22
     c40:	b9 01       	movw	r22, r18
     c42:	90 01       	movw	r18, r0
     c44:	0c 01       	movw	r0, r24
     c46:	ca 01       	movw	r24, r20
     c48:	a0 01       	movw	r20, r0
     c4a:	11 24       	eor	r1, r1
     c4c:	ff 27       	eor	r31, r31
     c4e:	59 1b       	sub	r21, r25
     c50:	99 f0       	breq	.+38     	; 0xc78 <__addsf3x+0x5c>
     c52:	59 3f       	cpi	r21, 0xF9	; 249
     c54:	50 f4       	brcc	.+20     	; 0xc6a <__addsf3x+0x4e>
     c56:	50 3e       	cpi	r21, 0xE0	; 224
     c58:	68 f1       	brcs	.+90     	; 0xcb4 <__addsf3x+0x98>
     c5a:	1a 16       	cp	r1, r26
     c5c:	f0 40       	sbci	r31, 0x00	; 0
     c5e:	a2 2f       	mov	r26, r18
     c60:	23 2f       	mov	r18, r19
     c62:	34 2f       	mov	r19, r20
     c64:	44 27       	eor	r20, r20
     c66:	58 5f       	subi	r21, 0xF8	; 248
     c68:	f3 cf       	rjmp	.-26     	; 0xc50 <__addsf3x+0x34>
     c6a:	46 95       	lsr	r20
     c6c:	37 95       	ror	r19
     c6e:	27 95       	ror	r18
     c70:	a7 95       	ror	r26
     c72:	f0 40       	sbci	r31, 0x00	; 0
     c74:	53 95       	inc	r21
     c76:	c9 f7       	brne	.-14     	; 0xc6a <__addsf3x+0x4e>
     c78:	7e f4       	brtc	.+30     	; 0xc98 <__addsf3x+0x7c>
     c7a:	1f 16       	cp	r1, r31
     c7c:	ba 0b       	sbc	r27, r26
     c7e:	62 0b       	sbc	r22, r18
     c80:	73 0b       	sbc	r23, r19
     c82:	84 0b       	sbc	r24, r20
     c84:	ba f0       	brmi	.+46     	; 0xcb4 <__addsf3x+0x98>
     c86:	91 50       	subi	r25, 0x01	; 1
     c88:	a1 f0       	breq	.+40     	; 0xcb2 <__addsf3x+0x96>
     c8a:	ff 0f       	add	r31, r31
     c8c:	bb 1f       	adc	r27, r27
     c8e:	66 1f       	adc	r22, r22
     c90:	77 1f       	adc	r23, r23
     c92:	88 1f       	adc	r24, r24
     c94:	c2 f7       	brpl	.-16     	; 0xc86 <__addsf3x+0x6a>
     c96:	0e c0       	rjmp	.+28     	; 0xcb4 <__addsf3x+0x98>
     c98:	ba 0f       	add	r27, r26
     c9a:	62 1f       	adc	r22, r18
     c9c:	73 1f       	adc	r23, r19
     c9e:	84 1f       	adc	r24, r20
     ca0:	48 f4       	brcc	.+18     	; 0xcb4 <__addsf3x+0x98>
     ca2:	87 95       	ror	r24
     ca4:	77 95       	ror	r23
     ca6:	67 95       	ror	r22
     ca8:	b7 95       	ror	r27
     caa:	f7 95       	ror	r31
     cac:	9e 3f       	cpi	r25, 0xFE	; 254
     cae:	08 f0       	brcs	.+2      	; 0xcb2 <__addsf3x+0x96>
     cb0:	b3 cf       	rjmp	.-154    	; 0xc18 <__addsf3+0x1e>
     cb2:	93 95       	inc	r25
     cb4:	88 0f       	add	r24, r24
     cb6:	08 f0       	brcs	.+2      	; 0xcba <__addsf3x+0x9e>
     cb8:	99 27       	eor	r25, r25
     cba:	ee 0f       	add	r30, r30
     cbc:	97 95       	ror	r25
     cbe:	87 95       	ror	r24
     cc0:	08 95       	ret
     cc2:	5c d1       	rcall	.+696    	; 0xf7c <__fp_pscA>
     cc4:	58 f0       	brcs	.+22     	; 0xcdc <__addsf3x+0xc0>
     cc6:	80 e8       	ldi	r24, 0x80	; 128
     cc8:	91 e0       	ldi	r25, 0x01	; 1
     cca:	09 f4       	brne	.+2      	; 0xcce <__addsf3x+0xb2>
     ccc:	9e ef       	ldi	r25, 0xFE	; 254
     cce:	5d d1       	rcall	.+698    	; 0xf8a <__fp_pscB>
     cd0:	28 f0       	brcs	.+10     	; 0xcdc <__addsf3x+0xc0>
     cd2:	40 e8       	ldi	r20, 0x80	; 128
     cd4:	51 e0       	ldi	r21, 0x01	; 1
     cd6:	59 f4       	brne	.+22     	; 0xcee <atan2+0xe>
     cd8:	5e ef       	ldi	r21, 0xFE	; 254
     cda:	09 c0       	rjmp	.+18     	; 0xcee <atan2+0xe>
     cdc:	27 c1       	rjmp	.+590    	; 0xf2c <__fp_nan>
     cde:	8f c1       	rjmp	.+798    	; 0xffe <__fp_zero>

00000ce0 <atan2>:
     ce0:	e9 2f       	mov	r30, r25
     ce2:	e0 78       	andi	r30, 0x80	; 128
     ce4:	6a d1       	rcall	.+724    	; 0xfba <__fp_split3>
     ce6:	68 f3       	brcs	.-38     	; 0xcc2 <__addsf3x+0xa6>
     ce8:	09 2e       	mov	r0, r25
     cea:	05 2a       	or	r0, r21
     cec:	c1 f3       	breq	.-16     	; 0xcde <__addsf3x+0xc2>
     cee:	26 17       	cp	r18, r22
     cf0:	37 07       	cpc	r19, r23
     cf2:	48 07       	cpc	r20, r24
     cf4:	59 07       	cpc	r21, r25
     cf6:	38 f0       	brcs	.+14     	; 0xd06 <atan2+0x26>
     cf8:	0e 2e       	mov	r0, r30
     cfa:	07 f8       	bld	r0, 7
     cfc:	e0 25       	eor	r30, r0
     cfe:	69 f0       	breq	.+26     	; 0xd1a <atan2+0x3a>
     d00:	e0 25       	eor	r30, r0
     d02:	e0 64       	ori	r30, 0x40	; 64
     d04:	0a c0       	rjmp	.+20     	; 0xd1a <atan2+0x3a>
     d06:	ef 63       	ori	r30, 0x3F	; 63
     d08:	07 f8       	bld	r0, 7
     d0a:	00 94       	com	r0
     d0c:	07 fa       	bst	r0, 7
     d0e:	db 01       	movw	r26, r22
     d10:	b9 01       	movw	r22, r18
     d12:	9d 01       	movw	r18, r26
     d14:	dc 01       	movw	r26, r24
     d16:	ca 01       	movw	r24, r20
     d18:	ad 01       	movw	r20, r26
     d1a:	ef 93       	push	r30
     d1c:	47 d0       	rcall	.+142    	; 0xdac <__divsf3_pse>
     d1e:	3c d1       	rcall	.+632    	; 0xf98 <__fp_round>
     d20:	0a d0       	rcall	.+20     	; 0xd36 <atan>
     d22:	5f 91       	pop	r21
     d24:	55 23       	and	r21, r21
     d26:	31 f0       	breq	.+12     	; 0xd34 <atan2+0x54>
     d28:	2b ed       	ldi	r18, 0xDB	; 219
     d2a:	3f e0       	ldi	r19, 0x0F	; 15
     d2c:	49 e4       	ldi	r20, 0x49	; 73
     d2e:	50 fd       	sbrc	r21, 0
     d30:	49 ec       	ldi	r20, 0xC9	; 201
     d32:	63 cf       	rjmp	.-314    	; 0xbfa <__addsf3>
     d34:	08 95       	ret

00000d36 <atan>:
     d36:	df 93       	push	r29
     d38:	dd 27       	eor	r29, r29
     d3a:	b9 2f       	mov	r27, r25
     d3c:	bf 77       	andi	r27, 0x7F	; 127
     d3e:	40 e8       	ldi	r20, 0x80	; 128
     d40:	5f e3       	ldi	r21, 0x3F	; 63
     d42:	16 16       	cp	r1, r22
     d44:	17 06       	cpc	r1, r23
     d46:	48 07       	cpc	r20, r24
     d48:	5b 07       	cpc	r21, r27
     d4a:	10 f4       	brcc	.+4      	; 0xd50 <atan+0x1a>
     d4c:	d9 2f       	mov	r29, r25
     d4e:	62 d1       	rcall	.+708    	; 0x1014 <inverse>
     d50:	9f 93       	push	r25
     d52:	8f 93       	push	r24
     d54:	7f 93       	push	r23
     d56:	6f 93       	push	r22
     d58:	c7 d1       	rcall	.+910    	; 0x10e8 <square>
     d5a:	e4 ee       	ldi	r30, 0xE4	; 228
     d5c:	f0 e0       	ldi	r31, 0x00	; 0
     d5e:	e9 d0       	rcall	.+466    	; 0xf32 <__fp_powser>
     d60:	1b d1       	rcall	.+566    	; 0xf98 <__fp_round>
     d62:	2f 91       	pop	r18
     d64:	3f 91       	pop	r19
     d66:	4f 91       	pop	r20
     d68:	5f 91       	pop	r21
     d6a:	67 d1       	rcall	.+718    	; 0x103a <__mulsf3x>
     d6c:	dd 23       	and	r29, r29
     d6e:	49 f0       	breq	.+18     	; 0xd82 <atan+0x4c>
     d70:	90 58       	subi	r25, 0x80	; 128
     d72:	a2 ea       	ldi	r26, 0xA2	; 162
     d74:	2a ed       	ldi	r18, 0xDA	; 218
     d76:	3f e0       	ldi	r19, 0x0F	; 15
     d78:	49 ec       	ldi	r20, 0xC9	; 201
     d7a:	5f e3       	ldi	r21, 0x3F	; 63
     d7c:	d0 78       	andi	r29, 0x80	; 128
     d7e:	5d 27       	eor	r21, r29
     d80:	4d df       	rcall	.-358    	; 0xc1c <__addsf3x>
     d82:	df 91       	pop	r29
     d84:	09 c1       	rjmp	.+530    	; 0xf98 <__fp_round>

00000d86 <__cmpsf2>:
     d86:	a8 d0       	rcall	.+336    	; 0xed8 <__fp_cmp>
     d88:	08 f4       	brcc	.+2      	; 0xd8c <__cmpsf2+0x6>
     d8a:	81 e0       	ldi	r24, 0x01	; 1
     d8c:	08 95       	ret

00000d8e <__divsf3>:
     d8e:	0c d0       	rcall	.+24     	; 0xda8 <__divsf3x>
     d90:	03 c1       	rjmp	.+518    	; 0xf98 <__fp_round>
     d92:	fb d0       	rcall	.+502    	; 0xf8a <__fp_pscB>
     d94:	40 f0       	brcs	.+16     	; 0xda6 <__divsf3+0x18>
     d96:	f2 d0       	rcall	.+484    	; 0xf7c <__fp_pscA>
     d98:	30 f0       	brcs	.+12     	; 0xda6 <__divsf3+0x18>
     d9a:	21 f4       	brne	.+8      	; 0xda4 <__divsf3+0x16>
     d9c:	5f 3f       	cpi	r21, 0xFF	; 255
     d9e:	19 f0       	breq	.+6      	; 0xda6 <__divsf3+0x18>
     da0:	bf c0       	rjmp	.+382    	; 0xf20 <__fp_inf>
     da2:	51 11       	cpse	r21, r1
     da4:	2d c1       	rjmp	.+602    	; 0x1000 <__fp_szero>
     da6:	c2 c0       	rjmp	.+388    	; 0xf2c <__fp_nan>

00000da8 <__divsf3x>:
     da8:	08 d1       	rcall	.+528    	; 0xfba <__fp_split3>
     daa:	98 f3       	brcs	.-26     	; 0xd92 <__divsf3+0x4>

00000dac <__divsf3_pse>:
     dac:	99 23       	and	r25, r25
     dae:	c9 f3       	breq	.-14     	; 0xda2 <__divsf3+0x14>
     db0:	55 23       	and	r21, r21
     db2:	b1 f3       	breq	.-20     	; 0xda0 <__divsf3+0x12>
     db4:	95 1b       	sub	r25, r21
     db6:	55 0b       	sbc	r21, r21
     db8:	bb 27       	eor	r27, r27
     dba:	aa 27       	eor	r26, r26
     dbc:	62 17       	cp	r22, r18
     dbe:	73 07       	cpc	r23, r19
     dc0:	84 07       	cpc	r24, r20
     dc2:	38 f0       	brcs	.+14     	; 0xdd2 <__divsf3_pse+0x26>
     dc4:	9f 5f       	subi	r25, 0xFF	; 255
     dc6:	5f 4f       	sbci	r21, 0xFF	; 255
     dc8:	22 0f       	add	r18, r18
     dca:	33 1f       	adc	r19, r19
     dcc:	44 1f       	adc	r20, r20
     dce:	aa 1f       	adc	r26, r26
     dd0:	a9 f3       	breq	.-22     	; 0xdbc <__divsf3_pse+0x10>
     dd2:	33 d0       	rcall	.+102    	; 0xe3a <__divsf3_pse+0x8e>
     dd4:	0e 2e       	mov	r0, r30
     dd6:	3a f0       	brmi	.+14     	; 0xde6 <__divsf3_pse+0x3a>
     dd8:	e0 e8       	ldi	r30, 0x80	; 128
     dda:	30 d0       	rcall	.+96     	; 0xe3c <__divsf3_pse+0x90>
     ddc:	91 50       	subi	r25, 0x01	; 1
     dde:	50 40       	sbci	r21, 0x00	; 0
     de0:	e6 95       	lsr	r30
     de2:	00 1c       	adc	r0, r0
     de4:	ca f7       	brpl	.-14     	; 0xdd8 <__divsf3_pse+0x2c>
     de6:	29 d0       	rcall	.+82     	; 0xe3a <__divsf3_pse+0x8e>
     de8:	fe 2f       	mov	r31, r30
     dea:	27 d0       	rcall	.+78     	; 0xe3a <__divsf3_pse+0x8e>
     dec:	66 0f       	add	r22, r22
     dee:	77 1f       	adc	r23, r23
     df0:	88 1f       	adc	r24, r24
     df2:	bb 1f       	adc	r27, r27
     df4:	26 17       	cp	r18, r22
     df6:	37 07       	cpc	r19, r23
     df8:	48 07       	cpc	r20, r24
     dfa:	ab 07       	cpc	r26, r27
     dfc:	b0 e8       	ldi	r27, 0x80	; 128
     dfe:	09 f0       	breq	.+2      	; 0xe02 <__divsf3_pse+0x56>
     e00:	bb 0b       	sbc	r27, r27
     e02:	80 2d       	mov	r24, r0
     e04:	bf 01       	movw	r22, r30
     e06:	ff 27       	eor	r31, r31
     e08:	93 58       	subi	r25, 0x83	; 131
     e0a:	5f 4f       	sbci	r21, 0xFF	; 255
     e0c:	2a f0       	brmi	.+10     	; 0xe18 <__divsf3_pse+0x6c>
     e0e:	9e 3f       	cpi	r25, 0xFE	; 254
     e10:	51 05       	cpc	r21, r1
     e12:	68 f0       	brcs	.+26     	; 0xe2e <__divsf3_pse+0x82>
     e14:	85 c0       	rjmp	.+266    	; 0xf20 <__fp_inf>
     e16:	f4 c0       	rjmp	.+488    	; 0x1000 <__fp_szero>
     e18:	5f 3f       	cpi	r21, 0xFF	; 255
     e1a:	ec f3       	brlt	.-6      	; 0xe16 <__divsf3_pse+0x6a>
     e1c:	98 3e       	cpi	r25, 0xE8	; 232
     e1e:	dc f3       	brlt	.-10     	; 0xe16 <__divsf3_pse+0x6a>
     e20:	86 95       	lsr	r24
     e22:	77 95       	ror	r23
     e24:	67 95       	ror	r22
     e26:	b7 95       	ror	r27
     e28:	f7 95       	ror	r31
     e2a:	9f 5f       	subi	r25, 0xFF	; 255
     e2c:	c9 f7       	brne	.-14     	; 0xe20 <__divsf3_pse+0x74>
     e2e:	88 0f       	add	r24, r24
     e30:	91 1d       	adc	r25, r1
     e32:	96 95       	lsr	r25
     e34:	87 95       	ror	r24
     e36:	97 f9       	bld	r25, 7
     e38:	08 95       	ret
     e3a:	e1 e0       	ldi	r30, 0x01	; 1
     e3c:	66 0f       	add	r22, r22
     e3e:	77 1f       	adc	r23, r23
     e40:	88 1f       	adc	r24, r24
     e42:	bb 1f       	adc	r27, r27
     e44:	62 17       	cp	r22, r18
     e46:	73 07       	cpc	r23, r19
     e48:	84 07       	cpc	r24, r20
     e4a:	ba 07       	cpc	r27, r26
     e4c:	20 f0       	brcs	.+8      	; 0xe56 <__divsf3_pse+0xaa>
     e4e:	62 1b       	sub	r22, r18
     e50:	73 0b       	sbc	r23, r19
     e52:	84 0b       	sbc	r24, r20
     e54:	ba 0b       	sbc	r27, r26
     e56:	ee 1f       	adc	r30, r30
     e58:	88 f7       	brcc	.-30     	; 0xe3c <__divsf3_pse+0x90>
     e5a:	e0 95       	com	r30
     e5c:	08 95       	ret

00000e5e <__floatunsisf>:
     e5e:	e8 94       	clt
     e60:	09 c0       	rjmp	.+18     	; 0xe74 <__floatsisf+0x12>

00000e62 <__floatsisf>:
     e62:	97 fb       	bst	r25, 7
     e64:	3e f4       	brtc	.+14     	; 0xe74 <__floatsisf+0x12>
     e66:	90 95       	com	r25
     e68:	80 95       	com	r24
     e6a:	70 95       	com	r23
     e6c:	61 95       	neg	r22
     e6e:	7f 4f       	sbci	r23, 0xFF	; 255
     e70:	8f 4f       	sbci	r24, 0xFF	; 255
     e72:	9f 4f       	sbci	r25, 0xFF	; 255
     e74:	99 23       	and	r25, r25
     e76:	a9 f0       	breq	.+42     	; 0xea2 <__floatsisf+0x40>
     e78:	f9 2f       	mov	r31, r25
     e7a:	96 e9       	ldi	r25, 0x96	; 150
     e7c:	bb 27       	eor	r27, r27
     e7e:	93 95       	inc	r25
     e80:	f6 95       	lsr	r31
     e82:	87 95       	ror	r24
     e84:	77 95       	ror	r23
     e86:	67 95       	ror	r22
     e88:	b7 95       	ror	r27
     e8a:	f1 11       	cpse	r31, r1
     e8c:	f8 cf       	rjmp	.-16     	; 0xe7e <__floatsisf+0x1c>
     e8e:	fa f4       	brpl	.+62     	; 0xece <__floatsisf+0x6c>
     e90:	bb 0f       	add	r27, r27
     e92:	11 f4       	brne	.+4      	; 0xe98 <__floatsisf+0x36>
     e94:	60 ff       	sbrs	r22, 0
     e96:	1b c0       	rjmp	.+54     	; 0xece <__floatsisf+0x6c>
     e98:	6f 5f       	subi	r22, 0xFF	; 255
     e9a:	7f 4f       	sbci	r23, 0xFF	; 255
     e9c:	8f 4f       	sbci	r24, 0xFF	; 255
     e9e:	9f 4f       	sbci	r25, 0xFF	; 255
     ea0:	16 c0       	rjmp	.+44     	; 0xece <__floatsisf+0x6c>
     ea2:	88 23       	and	r24, r24
     ea4:	11 f0       	breq	.+4      	; 0xeaa <__floatsisf+0x48>
     ea6:	96 e9       	ldi	r25, 0x96	; 150
     ea8:	11 c0       	rjmp	.+34     	; 0xecc <__floatsisf+0x6a>
     eaa:	77 23       	and	r23, r23
     eac:	21 f0       	breq	.+8      	; 0xeb6 <__floatsisf+0x54>
     eae:	9e e8       	ldi	r25, 0x8E	; 142
     eb0:	87 2f       	mov	r24, r23
     eb2:	76 2f       	mov	r23, r22
     eb4:	05 c0       	rjmp	.+10     	; 0xec0 <__floatsisf+0x5e>
     eb6:	66 23       	and	r22, r22
     eb8:	71 f0       	breq	.+28     	; 0xed6 <__floatsisf+0x74>
     eba:	96 e8       	ldi	r25, 0x86	; 134
     ebc:	86 2f       	mov	r24, r22
     ebe:	70 e0       	ldi	r23, 0x00	; 0
     ec0:	60 e0       	ldi	r22, 0x00	; 0
     ec2:	2a f0       	brmi	.+10     	; 0xece <__floatsisf+0x6c>
     ec4:	9a 95       	dec	r25
     ec6:	66 0f       	add	r22, r22
     ec8:	77 1f       	adc	r23, r23
     eca:	88 1f       	adc	r24, r24
     ecc:	da f7       	brpl	.-10     	; 0xec4 <__floatsisf+0x62>
     ece:	88 0f       	add	r24, r24
     ed0:	96 95       	lsr	r25
     ed2:	87 95       	ror	r24
     ed4:	97 f9       	bld	r25, 7
     ed6:	08 95       	ret

00000ed8 <__fp_cmp>:
     ed8:	99 0f       	add	r25, r25
     eda:	00 08       	sbc	r0, r0
     edc:	55 0f       	add	r21, r21
     ede:	aa 0b       	sbc	r26, r26
     ee0:	e0 e8       	ldi	r30, 0x80	; 128
     ee2:	fe ef       	ldi	r31, 0xFE	; 254
     ee4:	16 16       	cp	r1, r22
     ee6:	17 06       	cpc	r1, r23
     ee8:	e8 07       	cpc	r30, r24
     eea:	f9 07       	cpc	r31, r25
     eec:	c0 f0       	brcs	.+48     	; 0xf1e <__fp_cmp+0x46>
     eee:	12 16       	cp	r1, r18
     ef0:	13 06       	cpc	r1, r19
     ef2:	e4 07       	cpc	r30, r20
     ef4:	f5 07       	cpc	r31, r21
     ef6:	98 f0       	brcs	.+38     	; 0xf1e <__fp_cmp+0x46>
     ef8:	62 1b       	sub	r22, r18
     efa:	73 0b       	sbc	r23, r19
     efc:	84 0b       	sbc	r24, r20
     efe:	95 0b       	sbc	r25, r21
     f00:	39 f4       	brne	.+14     	; 0xf10 <__fp_cmp+0x38>
     f02:	0a 26       	eor	r0, r26
     f04:	61 f0       	breq	.+24     	; 0xf1e <__fp_cmp+0x46>
     f06:	23 2b       	or	r18, r19
     f08:	24 2b       	or	r18, r20
     f0a:	25 2b       	or	r18, r21
     f0c:	21 f4       	brne	.+8      	; 0xf16 <__fp_cmp+0x3e>
     f0e:	08 95       	ret
     f10:	0a 26       	eor	r0, r26
     f12:	09 f4       	brne	.+2      	; 0xf16 <__fp_cmp+0x3e>
     f14:	a1 40       	sbci	r26, 0x01	; 1
     f16:	a6 95       	lsr	r26
     f18:	8f ef       	ldi	r24, 0xFF	; 255
     f1a:	81 1d       	adc	r24, r1
     f1c:	81 1d       	adc	r24, r1
     f1e:	08 95       	ret

00000f20 <__fp_inf>:
     f20:	97 f9       	bld	r25, 7
     f22:	9f 67       	ori	r25, 0x7F	; 127
     f24:	80 e8       	ldi	r24, 0x80	; 128
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	60 e0       	ldi	r22, 0x00	; 0
     f2a:	08 95       	ret

00000f2c <__fp_nan>:
     f2c:	9f ef       	ldi	r25, 0xFF	; 255
     f2e:	80 ec       	ldi	r24, 0xC0	; 192
     f30:	08 95       	ret

00000f32 <__fp_powser>:
     f32:	df 93       	push	r29
     f34:	cf 93       	push	r28
     f36:	1f 93       	push	r17
     f38:	0f 93       	push	r16
     f3a:	ff 92       	push	r15
     f3c:	ef 92       	push	r14
     f3e:	df 92       	push	r13
     f40:	7b 01       	movw	r14, r22
     f42:	8c 01       	movw	r16, r24
     f44:	68 94       	set
     f46:	05 c0       	rjmp	.+10     	; 0xf52 <__fp_powser+0x20>
     f48:	da 2e       	mov	r13, r26
     f4a:	ef 01       	movw	r28, r30
     f4c:	76 d0       	rcall	.+236    	; 0x103a <__mulsf3x>
     f4e:	fe 01       	movw	r30, r28
     f50:	e8 94       	clt
     f52:	a5 91       	lpm	r26, Z+
     f54:	25 91       	lpm	r18, Z+
     f56:	35 91       	lpm	r19, Z+
     f58:	45 91       	lpm	r20, Z+
     f5a:	55 91       	lpm	r21, Z+
     f5c:	ae f3       	brts	.-22     	; 0xf48 <__fp_powser+0x16>
     f5e:	ef 01       	movw	r28, r30
     f60:	5d de       	rcall	.-838    	; 0xc1c <__addsf3x>
     f62:	fe 01       	movw	r30, r28
     f64:	97 01       	movw	r18, r14
     f66:	a8 01       	movw	r20, r16
     f68:	da 94       	dec	r13
     f6a:	79 f7       	brne	.-34     	; 0xf4a <__fp_powser+0x18>
     f6c:	df 90       	pop	r13
     f6e:	ef 90       	pop	r14
     f70:	ff 90       	pop	r15
     f72:	0f 91       	pop	r16
     f74:	1f 91       	pop	r17
     f76:	cf 91       	pop	r28
     f78:	df 91       	pop	r29
     f7a:	08 95       	ret

00000f7c <__fp_pscA>:
     f7c:	00 24       	eor	r0, r0
     f7e:	0a 94       	dec	r0
     f80:	16 16       	cp	r1, r22
     f82:	17 06       	cpc	r1, r23
     f84:	18 06       	cpc	r1, r24
     f86:	09 06       	cpc	r0, r25
     f88:	08 95       	ret

00000f8a <__fp_pscB>:
     f8a:	00 24       	eor	r0, r0
     f8c:	0a 94       	dec	r0
     f8e:	12 16       	cp	r1, r18
     f90:	13 06       	cpc	r1, r19
     f92:	14 06       	cpc	r1, r20
     f94:	05 06       	cpc	r0, r21
     f96:	08 95       	ret

00000f98 <__fp_round>:
     f98:	09 2e       	mov	r0, r25
     f9a:	03 94       	inc	r0
     f9c:	00 0c       	add	r0, r0
     f9e:	11 f4       	brne	.+4      	; 0xfa4 <__fp_round+0xc>
     fa0:	88 23       	and	r24, r24
     fa2:	52 f0       	brmi	.+20     	; 0xfb8 <__fp_round+0x20>
     fa4:	bb 0f       	add	r27, r27
     fa6:	40 f4       	brcc	.+16     	; 0xfb8 <__fp_round+0x20>
     fa8:	bf 2b       	or	r27, r31
     faa:	11 f4       	brne	.+4      	; 0xfb0 <__fp_round+0x18>
     fac:	60 ff       	sbrs	r22, 0
     fae:	04 c0       	rjmp	.+8      	; 0xfb8 <__fp_round+0x20>
     fb0:	6f 5f       	subi	r22, 0xFF	; 255
     fb2:	7f 4f       	sbci	r23, 0xFF	; 255
     fb4:	8f 4f       	sbci	r24, 0xFF	; 255
     fb6:	9f 4f       	sbci	r25, 0xFF	; 255
     fb8:	08 95       	ret

00000fba <__fp_split3>:
     fba:	57 fd       	sbrc	r21, 7
     fbc:	90 58       	subi	r25, 0x80	; 128
     fbe:	44 0f       	add	r20, r20
     fc0:	55 1f       	adc	r21, r21
     fc2:	59 f0       	breq	.+22     	; 0xfda <__fp_splitA+0x10>
     fc4:	5f 3f       	cpi	r21, 0xFF	; 255
     fc6:	71 f0       	breq	.+28     	; 0xfe4 <__fp_splitA+0x1a>
     fc8:	47 95       	ror	r20

00000fca <__fp_splitA>:
     fca:	88 0f       	add	r24, r24
     fcc:	97 fb       	bst	r25, 7
     fce:	99 1f       	adc	r25, r25
     fd0:	61 f0       	breq	.+24     	; 0xfea <__fp_splitA+0x20>
     fd2:	9f 3f       	cpi	r25, 0xFF	; 255
     fd4:	79 f0       	breq	.+30     	; 0xff4 <__fp_splitA+0x2a>
     fd6:	87 95       	ror	r24
     fd8:	08 95       	ret
     fda:	12 16       	cp	r1, r18
     fdc:	13 06       	cpc	r1, r19
     fde:	14 06       	cpc	r1, r20
     fe0:	55 1f       	adc	r21, r21
     fe2:	f2 cf       	rjmp	.-28     	; 0xfc8 <__fp_split3+0xe>
     fe4:	46 95       	lsr	r20
     fe6:	f1 df       	rcall	.-30     	; 0xfca <__fp_splitA>
     fe8:	08 c0       	rjmp	.+16     	; 0xffa <__fp_splitA+0x30>
     fea:	16 16       	cp	r1, r22
     fec:	17 06       	cpc	r1, r23
     fee:	18 06       	cpc	r1, r24
     ff0:	99 1f       	adc	r25, r25
     ff2:	f1 cf       	rjmp	.-30     	; 0xfd6 <__fp_splitA+0xc>
     ff4:	86 95       	lsr	r24
     ff6:	71 05       	cpc	r23, r1
     ff8:	61 05       	cpc	r22, r1
     ffa:	08 94       	sec
     ffc:	08 95       	ret

00000ffe <__fp_zero>:
     ffe:	e8 94       	clt

00001000 <__fp_szero>:
    1000:	bb 27       	eor	r27, r27
    1002:	66 27       	eor	r22, r22
    1004:	77 27       	eor	r23, r23
    1006:	cb 01       	movw	r24, r22
    1008:	97 f9       	bld	r25, 7
    100a:	08 95       	ret

0000100c <__gesf2>:
    100c:	65 df       	rcall	.-310    	; 0xed8 <__fp_cmp>
    100e:	08 f4       	brcc	.+2      	; 0x1012 <__gesf2+0x6>
    1010:	8f ef       	ldi	r24, 0xFF	; 255
    1012:	08 95       	ret

00001014 <inverse>:
    1014:	9b 01       	movw	r18, r22
    1016:	ac 01       	movw	r20, r24
    1018:	60 e0       	ldi	r22, 0x00	; 0
    101a:	70 e0       	ldi	r23, 0x00	; 0
    101c:	80 e8       	ldi	r24, 0x80	; 128
    101e:	9f e3       	ldi	r25, 0x3F	; 63
    1020:	b6 ce       	rjmp	.-660    	; 0xd8e <__divsf3>

00001022 <__mulsf3>:
    1022:	0b d0       	rcall	.+22     	; 0x103a <__mulsf3x>
    1024:	b9 cf       	rjmp	.-142    	; 0xf98 <__fp_round>
    1026:	aa df       	rcall	.-172    	; 0xf7c <__fp_pscA>
    1028:	28 f0       	brcs	.+10     	; 0x1034 <__mulsf3+0x12>
    102a:	af df       	rcall	.-162    	; 0xf8a <__fp_pscB>
    102c:	18 f0       	brcs	.+6      	; 0x1034 <__mulsf3+0x12>
    102e:	95 23       	and	r25, r21
    1030:	09 f0       	breq	.+2      	; 0x1034 <__mulsf3+0x12>
    1032:	76 cf       	rjmp	.-276    	; 0xf20 <__fp_inf>
    1034:	7b cf       	rjmp	.-266    	; 0xf2c <__fp_nan>
    1036:	11 24       	eor	r1, r1
    1038:	e3 cf       	rjmp	.-58     	; 0x1000 <__fp_szero>

0000103a <__mulsf3x>:
    103a:	bf df       	rcall	.-130    	; 0xfba <__fp_split3>
    103c:	a0 f3       	brcs	.-24     	; 0x1026 <__mulsf3+0x4>

0000103e <__mulsf3_pse>:
    103e:	95 9f       	mul	r25, r21
    1040:	d1 f3       	breq	.-12     	; 0x1036 <__mulsf3+0x14>
    1042:	95 0f       	add	r25, r21
    1044:	50 e0       	ldi	r21, 0x00	; 0
    1046:	55 1f       	adc	r21, r21
    1048:	62 9f       	mul	r22, r18
    104a:	f0 01       	movw	r30, r0
    104c:	72 9f       	mul	r23, r18
    104e:	bb 27       	eor	r27, r27
    1050:	f0 0d       	add	r31, r0
    1052:	b1 1d       	adc	r27, r1
    1054:	63 9f       	mul	r22, r19
    1056:	aa 27       	eor	r26, r26
    1058:	f0 0d       	add	r31, r0
    105a:	b1 1d       	adc	r27, r1
    105c:	aa 1f       	adc	r26, r26
    105e:	64 9f       	mul	r22, r20
    1060:	66 27       	eor	r22, r22
    1062:	b0 0d       	add	r27, r0
    1064:	a1 1d       	adc	r26, r1
    1066:	66 1f       	adc	r22, r22
    1068:	82 9f       	mul	r24, r18
    106a:	22 27       	eor	r18, r18
    106c:	b0 0d       	add	r27, r0
    106e:	a1 1d       	adc	r26, r1
    1070:	62 1f       	adc	r22, r18
    1072:	73 9f       	mul	r23, r19
    1074:	b0 0d       	add	r27, r0
    1076:	a1 1d       	adc	r26, r1
    1078:	62 1f       	adc	r22, r18
    107a:	83 9f       	mul	r24, r19
    107c:	a0 0d       	add	r26, r0
    107e:	61 1d       	adc	r22, r1
    1080:	22 1f       	adc	r18, r18
    1082:	74 9f       	mul	r23, r20
    1084:	33 27       	eor	r19, r19
    1086:	a0 0d       	add	r26, r0
    1088:	61 1d       	adc	r22, r1
    108a:	23 1f       	adc	r18, r19
    108c:	84 9f       	mul	r24, r20
    108e:	60 0d       	add	r22, r0
    1090:	21 1d       	adc	r18, r1
    1092:	82 2f       	mov	r24, r18
    1094:	76 2f       	mov	r23, r22
    1096:	6a 2f       	mov	r22, r26
    1098:	11 24       	eor	r1, r1
    109a:	9f 57       	subi	r25, 0x7F	; 127
    109c:	50 40       	sbci	r21, 0x00	; 0
    109e:	8a f0       	brmi	.+34     	; 0x10c2 <__mulsf3_pse+0x84>
    10a0:	e1 f0       	breq	.+56     	; 0x10da <__mulsf3_pse+0x9c>
    10a2:	88 23       	and	r24, r24
    10a4:	4a f0       	brmi	.+18     	; 0x10b8 <__mulsf3_pse+0x7a>
    10a6:	ee 0f       	add	r30, r30
    10a8:	ff 1f       	adc	r31, r31
    10aa:	bb 1f       	adc	r27, r27
    10ac:	66 1f       	adc	r22, r22
    10ae:	77 1f       	adc	r23, r23
    10b0:	88 1f       	adc	r24, r24
    10b2:	91 50       	subi	r25, 0x01	; 1
    10b4:	50 40       	sbci	r21, 0x00	; 0
    10b6:	a9 f7       	brne	.-22     	; 0x10a2 <__mulsf3_pse+0x64>
    10b8:	9e 3f       	cpi	r25, 0xFE	; 254
    10ba:	51 05       	cpc	r21, r1
    10bc:	70 f0       	brcs	.+28     	; 0x10da <__mulsf3_pse+0x9c>
    10be:	30 cf       	rjmp	.-416    	; 0xf20 <__fp_inf>
    10c0:	9f cf       	rjmp	.-194    	; 0x1000 <__fp_szero>
    10c2:	5f 3f       	cpi	r21, 0xFF	; 255
    10c4:	ec f3       	brlt	.-6      	; 0x10c0 <__mulsf3_pse+0x82>
    10c6:	98 3e       	cpi	r25, 0xE8	; 232
    10c8:	dc f3       	brlt	.-10     	; 0x10c0 <__mulsf3_pse+0x82>
    10ca:	86 95       	lsr	r24
    10cc:	77 95       	ror	r23
    10ce:	67 95       	ror	r22
    10d0:	b7 95       	ror	r27
    10d2:	f7 95       	ror	r31
    10d4:	e7 95       	ror	r30
    10d6:	9f 5f       	subi	r25, 0xFF	; 255
    10d8:	c1 f7       	brne	.-16     	; 0x10ca <__mulsf3_pse+0x8c>
    10da:	fe 2b       	or	r31, r30
    10dc:	88 0f       	add	r24, r24
    10de:	91 1d       	adc	r25, r1
    10e0:	96 95       	lsr	r25
    10e2:	87 95       	ror	r24
    10e4:	97 f9       	bld	r25, 7
    10e6:	08 95       	ret

000010e8 <square>:
    10e8:	9b 01       	movw	r18, r22
    10ea:	ac 01       	movw	r20, r24
    10ec:	9a cf       	rjmp	.-204    	; 0x1022 <__mulsf3>

000010ee <__udivmodsi4>:
    10ee:	a1 e2       	ldi	r26, 0x21	; 33
    10f0:	1a 2e       	mov	r1, r26
    10f2:	aa 1b       	sub	r26, r26
    10f4:	bb 1b       	sub	r27, r27
    10f6:	fd 01       	movw	r30, r26
    10f8:	0d c0       	rjmp	.+26     	; 0x1114 <__udivmodsi4_ep>

000010fa <__udivmodsi4_loop>:
    10fa:	aa 1f       	adc	r26, r26
    10fc:	bb 1f       	adc	r27, r27
    10fe:	ee 1f       	adc	r30, r30
    1100:	ff 1f       	adc	r31, r31
    1102:	a2 17       	cp	r26, r18
    1104:	b3 07       	cpc	r27, r19
    1106:	e4 07       	cpc	r30, r20
    1108:	f5 07       	cpc	r31, r21
    110a:	20 f0       	brcs	.+8      	; 0x1114 <__udivmodsi4_ep>
    110c:	a2 1b       	sub	r26, r18
    110e:	b3 0b       	sbc	r27, r19
    1110:	e4 0b       	sbc	r30, r20
    1112:	f5 0b       	sbc	r31, r21

00001114 <__udivmodsi4_ep>:
    1114:	66 1f       	adc	r22, r22
    1116:	77 1f       	adc	r23, r23
    1118:	88 1f       	adc	r24, r24
    111a:	99 1f       	adc	r25, r25
    111c:	1a 94       	dec	r1
    111e:	69 f7       	brne	.-38     	; 0x10fa <__udivmodsi4_loop>
    1120:	60 95       	com	r22
    1122:	70 95       	com	r23
    1124:	80 95       	com	r24
    1126:	90 95       	com	r25
    1128:	9b 01       	movw	r18, r22
    112a:	ac 01       	movw	r20, r24
    112c:	bd 01       	movw	r22, r26
    112e:	cf 01       	movw	r24, r30
    1130:	08 95       	ret

00001132 <dtostrf>:
    1132:	ef 92       	push	r14
    1134:	0f 93       	push	r16
    1136:	1f 93       	push	r17
    1138:	cf 93       	push	r28
    113a:	df 93       	push	r29
    113c:	e8 01       	movw	r28, r16
    113e:	47 ff       	sbrs	r20, 7
    1140:	02 c0       	rjmp	.+4      	; 0x1146 <dtostrf+0x14>
    1142:	34 e1       	ldi	r19, 0x14	; 20
    1144:	01 c0       	rjmp	.+2      	; 0x1148 <dtostrf+0x16>
    1146:	34 e0       	ldi	r19, 0x04	; 4
    1148:	e4 2f       	mov	r30, r20
    114a:	ff 27       	eor	r31, r31
    114c:	e7 fd       	sbrc	r30, 7
    114e:	f0 95       	com	r31
    1150:	f7 ff       	sbrs	r31, 7
    1152:	03 c0       	rjmp	.+6      	; 0x115a <dtostrf+0x28>
    1154:	f1 95       	neg	r31
    1156:	e1 95       	neg	r30
    1158:	f1 09       	sbc	r31, r1
    115a:	e3 2e       	mov	r14, r19
    115c:	02 2f       	mov	r16, r18
    115e:	2e 2f       	mov	r18, r30
    1160:	ae 01       	movw	r20, r28
    1162:	07 d0       	rcall	.+14     	; 0x1172 <dtoa_prf>
    1164:	ce 01       	movw	r24, r28
    1166:	df 91       	pop	r29
    1168:	cf 91       	pop	r28
    116a:	1f 91       	pop	r17
    116c:	0f 91       	pop	r16
    116e:	ef 90       	pop	r14
    1170:	08 95       	ret

00001172 <dtoa_prf>:
    1172:	6f 92       	push	r6
    1174:	7f 92       	push	r7
    1176:	9f 92       	push	r9
    1178:	af 92       	push	r10
    117a:	bf 92       	push	r11
    117c:	cf 92       	push	r12
    117e:	df 92       	push	r13
    1180:	ef 92       	push	r14
    1182:	ff 92       	push	r15
    1184:	0f 93       	push	r16
    1186:	1f 93       	push	r17
    1188:	cf 93       	push	r28
    118a:	df 93       	push	r29
    118c:	cd b7       	in	r28, 0x3d	; 61
    118e:	de b7       	in	r29, 0x3e	; 62
    1190:	29 97       	sbiw	r28, 0x09	; 9
    1192:	0f b6       	in	r0, 0x3f	; 63
    1194:	f8 94       	cli
    1196:	de bf       	out	0x3e, r29	; 62
    1198:	0f be       	out	0x3f, r0	; 63
    119a:	cd bf       	out	0x3d, r28	; 61
    119c:	6a 01       	movw	r12, r20
    119e:	b2 2e       	mov	r11, r18
    11a0:	10 2f       	mov	r17, r16
    11a2:	0c 33       	cpi	r16, 0x3C	; 60
    11a4:	20 f4       	brcc	.+8      	; 0x11ae <dtoa_prf+0x3c>
    11a6:	ff 24       	eor	r15, r15
    11a8:	f3 94       	inc	r15
    11aa:	f0 0e       	add	r15, r16
    11ac:	02 c0       	rjmp	.+4      	; 0x11b2 <dtoa_prf+0x40>
    11ae:	4c e3       	ldi	r20, 0x3C	; 60
    11b0:	f4 2e       	mov	r15, r20
    11b2:	0f 2d       	mov	r16, r15
    11b4:	27 e0       	ldi	r18, 0x07	; 7
    11b6:	ae 01       	movw	r20, r28
    11b8:	4f 5f       	subi	r20, 0xFF	; 255
    11ba:	5f 4f       	sbci	r21, 0xFF	; 255
    11bc:	57 d1       	rcall	.+686    	; 0x146c <__ftoa_engine>
    11be:	79 81       	ldd	r23, Y+1	; 0x01
    11c0:	27 2f       	mov	r18, r23
    11c2:	29 70       	andi	r18, 0x09	; 9
    11c4:	21 30       	cpi	r18, 0x01	; 1
    11c6:	31 f0       	breq	.+12     	; 0x11d4 <dtoa_prf+0x62>
    11c8:	e1 fc       	sbrc	r14, 1
    11ca:	06 c0       	rjmp	.+12     	; 0x11d8 <dtoa_prf+0x66>
    11cc:	e0 fc       	sbrc	r14, 0
    11ce:	06 c0       	rjmp	.+12     	; 0x11dc <dtoa_prf+0x6a>
    11d0:	60 e0       	ldi	r22, 0x00	; 0
    11d2:	05 c0       	rjmp	.+10     	; 0x11de <dtoa_prf+0x6c>
    11d4:	6d e2       	ldi	r22, 0x2D	; 45
    11d6:	03 c0       	rjmp	.+6      	; 0x11de <dtoa_prf+0x6c>
    11d8:	6b e2       	ldi	r22, 0x2B	; 43
    11da:	01 c0       	rjmp	.+2      	; 0x11de <dtoa_prf+0x6c>
    11dc:	60 e2       	ldi	r22, 0x20	; 32
    11de:	ae 2d       	mov	r26, r14
    11e0:	a0 71       	andi	r26, 0x10	; 16
    11e2:	73 ff       	sbrs	r23, 3
    11e4:	36 c0       	rjmp	.+108    	; 0x1252 <dtoa_prf+0xe0>
    11e6:	66 23       	and	r22, r22
    11e8:	11 f0       	breq	.+4      	; 0x11ee <dtoa_prf+0x7c>
    11ea:	84 e0       	ldi	r24, 0x04	; 4
    11ec:	01 c0       	rjmp	.+2      	; 0x11f0 <dtoa_prf+0x7e>
    11ee:	83 e0       	ldi	r24, 0x03	; 3
    11f0:	8b 15       	cp	r24, r11
    11f2:	10 f4       	brcc	.+4      	; 0x11f8 <dtoa_prf+0x86>
    11f4:	b8 1a       	sub	r11, r24
    11f6:	01 c0       	rjmp	.+2      	; 0x11fa <dtoa_prf+0x88>
    11f8:	b1 2c       	mov	r11, r1
    11fa:	a1 11       	cpse	r26, r1
    11fc:	0b c0       	rjmp	.+22     	; 0x1214 <dtoa_prf+0xa2>
    11fe:	f6 01       	movw	r30, r12
    1200:	8b 2d       	mov	r24, r11
    1202:	90 e2       	ldi	r25, 0x20	; 32
    1204:	88 23       	and	r24, r24
    1206:	19 f0       	breq	.+6      	; 0x120e <dtoa_prf+0x9c>
    1208:	91 93       	st	Z+, r25
    120a:	81 50       	subi	r24, 0x01	; 1
    120c:	fb cf       	rjmp	.-10     	; 0x1204 <dtoa_prf+0x92>
    120e:	cb 0c       	add	r12, r11
    1210:	d1 1c       	adc	r13, r1
    1212:	b1 2c       	mov	r11, r1
    1214:	66 23       	and	r22, r22
    1216:	31 f0       	breq	.+12     	; 0x1224 <dtoa_prf+0xb2>
    1218:	f6 01       	movw	r30, r12
    121a:	60 83       	st	Z, r22
    121c:	96 01       	movw	r18, r12
    121e:	2f 5f       	subi	r18, 0xFF	; 255
    1220:	3f 4f       	sbci	r19, 0xFF	; 255
    1222:	69 01       	movw	r12, r18
    1224:	c6 01       	movw	r24, r12
    1226:	03 96       	adiw	r24, 0x03	; 3
    1228:	e2 fe       	sbrs	r14, 2
    122a:	05 c0       	rjmp	.+10     	; 0x1236 <dtoa_prf+0xc4>
    122c:	2e e4       	ldi	r18, 0x4E	; 78
    122e:	f6 01       	movw	r30, r12
    1230:	20 83       	st	Z, r18
    1232:	31 e4       	ldi	r19, 0x41	; 65
    1234:	04 c0       	rjmp	.+8      	; 0x123e <dtoa_prf+0xcc>
    1236:	2e e6       	ldi	r18, 0x6E	; 110
    1238:	f6 01       	movw	r30, r12
    123a:	20 83       	st	Z, r18
    123c:	31 e6       	ldi	r19, 0x61	; 97
    123e:	31 83       	std	Z+1, r19	; 0x01
    1240:	22 83       	std	Z+2, r18	; 0x02
    1242:	fc 01       	movw	r30, r24
    1244:	2b 2d       	mov	r18, r11
    1246:	30 e2       	ldi	r19, 0x20	; 32
    1248:	22 23       	and	r18, r18
    124a:	f1 f1       	breq	.+124    	; 0x12c8 <dtoa_prf+0x156>
    124c:	31 93       	st	Z+, r19
    124e:	21 50       	subi	r18, 0x01	; 1
    1250:	fb cf       	rjmp	.-10     	; 0x1248 <dtoa_prf+0xd6>
    1252:	72 ff       	sbrs	r23, 2
    1254:	40 c0       	rjmp	.+128    	; 0x12d6 <dtoa_prf+0x164>
    1256:	66 23       	and	r22, r22
    1258:	11 f0       	breq	.+4      	; 0x125e <dtoa_prf+0xec>
    125a:	84 e0       	ldi	r24, 0x04	; 4
    125c:	01 c0       	rjmp	.+2      	; 0x1260 <dtoa_prf+0xee>
    125e:	83 e0       	ldi	r24, 0x03	; 3
    1260:	8b 15       	cp	r24, r11
    1262:	10 f4       	brcc	.+4      	; 0x1268 <dtoa_prf+0xf6>
    1264:	b8 1a       	sub	r11, r24
    1266:	01 c0       	rjmp	.+2      	; 0x126a <dtoa_prf+0xf8>
    1268:	b1 2c       	mov	r11, r1
    126a:	a1 11       	cpse	r26, r1
    126c:	0b c0       	rjmp	.+22     	; 0x1284 <dtoa_prf+0x112>
    126e:	f6 01       	movw	r30, r12
    1270:	8b 2d       	mov	r24, r11
    1272:	90 e2       	ldi	r25, 0x20	; 32
    1274:	88 23       	and	r24, r24
    1276:	19 f0       	breq	.+6      	; 0x127e <dtoa_prf+0x10c>
    1278:	91 93       	st	Z+, r25
    127a:	81 50       	subi	r24, 0x01	; 1
    127c:	fb cf       	rjmp	.-10     	; 0x1274 <dtoa_prf+0x102>
    127e:	cb 0c       	add	r12, r11
    1280:	d1 1c       	adc	r13, r1
    1282:	b1 2c       	mov	r11, r1
    1284:	66 23       	and	r22, r22
    1286:	31 f0       	breq	.+12     	; 0x1294 <dtoa_prf+0x122>
    1288:	f6 01       	movw	r30, r12
    128a:	60 83       	st	Z, r22
    128c:	96 01       	movw	r18, r12
    128e:	2f 5f       	subi	r18, 0xFF	; 255
    1290:	3f 4f       	sbci	r19, 0xFF	; 255
    1292:	69 01       	movw	r12, r18
    1294:	c6 01       	movw	r24, r12
    1296:	03 96       	adiw	r24, 0x03	; 3
    1298:	e2 fe       	sbrs	r14, 2
    129a:	07 c0       	rjmp	.+14     	; 0x12aa <dtoa_prf+0x138>
    129c:	29 e4       	ldi	r18, 0x49	; 73
    129e:	f6 01       	movw	r30, r12
    12a0:	20 83       	st	Z, r18
    12a2:	2e e4       	ldi	r18, 0x4E	; 78
    12a4:	21 83       	std	Z+1, r18	; 0x01
    12a6:	26 e4       	ldi	r18, 0x46	; 70
    12a8:	06 c0       	rjmp	.+12     	; 0x12b6 <dtoa_prf+0x144>
    12aa:	29 e6       	ldi	r18, 0x69	; 105
    12ac:	f6 01       	movw	r30, r12
    12ae:	20 83       	st	Z, r18
    12b0:	2e e6       	ldi	r18, 0x6E	; 110
    12b2:	21 83       	std	Z+1, r18	; 0x01
    12b4:	26 e6       	ldi	r18, 0x66	; 102
    12b6:	22 83       	std	Z+2, r18	; 0x02
    12b8:	fc 01       	movw	r30, r24
    12ba:	2b 2d       	mov	r18, r11
    12bc:	30 e2       	ldi	r19, 0x20	; 32
    12be:	22 23       	and	r18, r18
    12c0:	19 f0       	breq	.+6      	; 0x12c8 <dtoa_prf+0x156>
    12c2:	31 93       	st	Z+, r19
    12c4:	21 50       	subi	r18, 0x01	; 1
    12c6:	fb cf       	rjmp	.-10     	; 0x12be <dtoa_prf+0x14c>
    12c8:	fc 01       	movw	r30, r24
    12ca:	eb 0d       	add	r30, r11
    12cc:	f1 1d       	adc	r31, r1
    12ce:	10 82       	st	Z, r1
    12d0:	8e ef       	ldi	r24, 0xFE	; 254
    12d2:	9f ef       	ldi	r25, 0xFF	; 255
    12d4:	b7 c0       	rjmp	.+366    	; 0x1444 <dtoa_prf+0x2d2>
    12d6:	b1 e0       	ldi	r27, 0x01	; 1
    12d8:	61 11       	cpse	r22, r1
    12da:	01 c0       	rjmp	.+2      	; 0x12de <dtoa_prf+0x16c>
    12dc:	b0 e0       	ldi	r27, 0x00	; 0
    12de:	4b 2f       	mov	r20, r27
    12e0:	50 e0       	ldi	r21, 0x00	; 0
    12e2:	18 16       	cp	r1, r24
    12e4:	19 06       	cpc	r1, r25
    12e6:	24 f4       	brge	.+8      	; 0x12f0 <dtoa_prf+0x17e>
    12e8:	9c 01       	movw	r18, r24
    12ea:	2f 5f       	subi	r18, 0xFF	; 255
    12ec:	3f 4f       	sbci	r19, 0xFF	; 255
    12ee:	02 c0       	rjmp	.+4      	; 0x12f4 <dtoa_prf+0x182>
    12f0:	21 e0       	ldi	r18, 0x01	; 1
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	24 0f       	add	r18, r20
    12f6:	35 1f       	adc	r19, r21
    12f8:	11 23       	and	r17, r17
    12fa:	29 f0       	breq	.+10     	; 0x1306 <dtoa_prf+0x194>
    12fc:	41 2f       	mov	r20, r17
    12fe:	50 e0       	ldi	r21, 0x00	; 0
    1300:	4f 5f       	subi	r20, 0xFF	; 255
    1302:	5f 4f       	sbci	r21, 0xFF	; 255
    1304:	02 c0       	rjmp	.+4      	; 0x130a <dtoa_prf+0x198>
    1306:	40 e0       	ldi	r20, 0x00	; 0
    1308:	50 e0       	ldi	r21, 0x00	; 0
    130a:	42 0f       	add	r20, r18
    130c:	53 1f       	adc	r21, r19
    130e:	2b 2d       	mov	r18, r11
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	42 17       	cp	r20, r18
    1314:	53 07       	cpc	r21, r19
    1316:	14 f4       	brge	.+4      	; 0x131c <dtoa_prf+0x1aa>
    1318:	b4 1a       	sub	r11, r20
    131a:	01 c0       	rjmp	.+2      	; 0x131e <dtoa_prf+0x1ac>
    131c:	b1 2c       	mov	r11, r1
    131e:	2e 2d       	mov	r18, r14
    1320:	28 71       	andi	r18, 0x18	; 24
    1322:	59 f4       	brne	.+22     	; 0x133a <dtoa_prf+0x1c8>
    1324:	f6 01       	movw	r30, r12
    1326:	2b 2d       	mov	r18, r11
    1328:	30 e2       	ldi	r19, 0x20	; 32
    132a:	22 23       	and	r18, r18
    132c:	19 f0       	breq	.+6      	; 0x1334 <dtoa_prf+0x1c2>
    132e:	31 93       	st	Z+, r19
    1330:	21 50       	subi	r18, 0x01	; 1
    1332:	fb cf       	rjmp	.-10     	; 0x132a <dtoa_prf+0x1b8>
    1334:	cb 0c       	add	r12, r11
    1336:	d1 1c       	adc	r13, r1
    1338:	b1 2c       	mov	r11, r1
    133a:	bb 23       	and	r27, r27
    133c:	31 f0       	breq	.+12     	; 0x134a <dtoa_prf+0x1d8>
    133e:	f6 01       	movw	r30, r12
    1340:	60 83       	st	Z, r22
    1342:	96 01       	movw	r18, r12
    1344:	2f 5f       	subi	r18, 0xFF	; 255
    1346:	3f 4f       	sbci	r19, 0xFF	; 255
    1348:	69 01       	movw	r12, r18
    134a:	a1 11       	cpse	r26, r1
    134c:	0b c0       	rjmp	.+22     	; 0x1364 <dtoa_prf+0x1f2>
    134e:	f6 01       	movw	r30, r12
    1350:	2b 2d       	mov	r18, r11
    1352:	30 e3       	ldi	r19, 0x30	; 48
    1354:	22 23       	and	r18, r18
    1356:	19 f0       	breq	.+6      	; 0x135e <dtoa_prf+0x1ec>
    1358:	31 93       	st	Z+, r19
    135a:	21 50       	subi	r18, 0x01	; 1
    135c:	fb cf       	rjmp	.-10     	; 0x1354 <dtoa_prf+0x1e2>
    135e:	cb 0c       	add	r12, r11
    1360:	d1 1c       	adc	r13, r1
    1362:	b1 2c       	mov	r11, r1
    1364:	f8 0e       	add	r15, r24
    1366:	0a 81       	ldd	r16, Y+2	; 0x02
    1368:	37 2f       	mov	r19, r23
    136a:	30 71       	andi	r19, 0x10	; 16
    136c:	a3 2e       	mov	r10, r19
    136e:	74 ff       	sbrs	r23, 4
    1370:	03 c0       	rjmp	.+6      	; 0x1378 <dtoa_prf+0x206>
    1372:	01 33       	cpi	r16, 0x31	; 49
    1374:	09 f4       	brne	.+2      	; 0x1378 <dtoa_prf+0x206>
    1376:	fa 94       	dec	r15
    1378:	1f 14       	cp	r1, r15
    137a:	2c f4       	brge	.+10     	; 0x1386 <dtoa_prf+0x214>
    137c:	2f 2d       	mov	r18, r15
    137e:	29 30       	cpi	r18, 0x09	; 9
    1380:	18 f0       	brcs	.+6      	; 0x1388 <dtoa_prf+0x216>
    1382:	28 e0       	ldi	r18, 0x08	; 8
    1384:	01 c0       	rjmp	.+2      	; 0x1388 <dtoa_prf+0x216>
    1386:	21 e0       	ldi	r18, 0x01	; 1
    1388:	68 2f       	mov	r22, r24
    138a:	39 2f       	mov	r19, r25
    138c:	97 ff       	sbrs	r25, 7
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <dtoa_prf+0x222>
    1390:	60 e0       	ldi	r22, 0x00	; 0
    1392:	30 e0       	ldi	r19, 0x00	; 0
    1394:	46 2f       	mov	r20, r22
    1396:	53 2f       	mov	r21, r19
    1398:	61 2c       	mov	r6, r1
    139a:	71 2c       	mov	r7, r1
    139c:	3e e2       	ldi	r19, 0x2E	; 46
    139e:	93 2e       	mov	r9, r19
    13a0:	bc 01       	movw	r22, r24
    13a2:	62 1b       	sub	r22, r18
    13a4:	71 09       	sbc	r23, r1
    13a6:	9b 01       	movw	r18, r22
    13a8:	dc 01       	movw	r26, r24
    13aa:	a4 1b       	sub	r26, r20
    13ac:	b5 0b       	sbc	r27, r21
    13ae:	e1 e0       	ldi	r30, 0x01	; 1
    13b0:	f0 e0       	ldi	r31, 0x00	; 0
    13b2:	ec 0f       	add	r30, r28
    13b4:	fd 1f       	adc	r31, r29
    13b6:	ae 0f       	add	r26, r30
    13b8:	bf 1f       	adc	r27, r31
    13ba:	e1 2e       	mov	r14, r17
    13bc:	f1 2c       	mov	r15, r1
    13be:	f1 94       	neg	r15
    13c0:	e1 94       	neg	r14
    13c2:	f1 08       	sbc	r15, r1
    13c4:	4f 3f       	cpi	r20, 0xFF	; 255
    13c6:	ff ef       	ldi	r31, 0xFF	; 255
    13c8:	5f 07       	cpc	r21, r31
    13ca:	31 f4       	brne	.+12     	; 0x13d8 <dtoa_prf+0x266>
    13cc:	f6 01       	movw	r30, r12
    13ce:	90 82       	st	Z, r9
    13d0:	b6 01       	movw	r22, r12
    13d2:	6f 5f       	subi	r22, 0xFF	; 255
    13d4:	7f 4f       	sbci	r23, 0xFF	; 255
    13d6:	6b 01       	movw	r12, r22
    13d8:	84 17       	cp	r24, r20
    13da:	95 07       	cpc	r25, r21
    13dc:	4c f0       	brlt	.+18     	; 0x13f0 <dtoa_prf+0x27e>
    13de:	24 17       	cp	r18, r20
    13e0:	35 07       	cpc	r19, r21
    13e2:	34 f4       	brge	.+12     	; 0x13f0 <dtoa_prf+0x27e>
    13e4:	bd 01       	movw	r22, r26
    13e6:	66 0d       	add	r22, r6
    13e8:	77 1d       	adc	r23, r7
    13ea:	fb 01       	movw	r30, r22
    13ec:	11 81       	ldd	r17, Z+1	; 0x01
    13ee:	01 c0       	rjmp	.+2      	; 0x13f2 <dtoa_prf+0x280>
    13f0:	10 e3       	ldi	r17, 0x30	; 48
    13f2:	41 50       	subi	r20, 0x01	; 1
    13f4:	51 09       	sbc	r21, r1
    13f6:	ff ef       	ldi	r31, 0xFF	; 255
    13f8:	6f 1a       	sub	r6, r31
    13fa:	7f 0a       	sbc	r7, r31
    13fc:	b6 01       	movw	r22, r12
    13fe:	6f 5f       	subi	r22, 0xFF	; 255
    1400:	7f 4f       	sbci	r23, 0xFF	; 255
    1402:	4e 15       	cp	r20, r14
    1404:	5f 05       	cpc	r21, r15
    1406:	24 f0       	brlt	.+8      	; 0x1410 <dtoa_prf+0x29e>
    1408:	f6 01       	movw	r30, r12
    140a:	10 83       	st	Z, r17
    140c:	6b 01       	movw	r12, r22
    140e:	da cf       	rjmp	.-76     	; 0x13c4 <dtoa_prf+0x252>
    1410:	48 17       	cp	r20, r24
    1412:	59 07       	cpc	r21, r25
    1414:	39 f4       	brne	.+14     	; 0x1424 <dtoa_prf+0x2b2>
    1416:	06 33       	cpi	r16, 0x36	; 54
    1418:	20 f4       	brcc	.+8      	; 0x1422 <dtoa_prf+0x2b0>
    141a:	05 33       	cpi	r16, 0x35	; 53
    141c:	19 f4       	brne	.+6      	; 0x1424 <dtoa_prf+0x2b2>
    141e:	a1 10       	cpse	r10, r1
    1420:	01 c0       	rjmp	.+2      	; 0x1424 <dtoa_prf+0x2b2>
    1422:	11 e3       	ldi	r17, 0x31	; 49
    1424:	f6 01       	movw	r30, r12
    1426:	10 83       	st	Z, r17
    1428:	fb 01       	movw	r30, r22
    142a:	8b 2d       	mov	r24, r11
    142c:	90 e2       	ldi	r25, 0x20	; 32
    142e:	88 23       	and	r24, r24
    1430:	19 f0       	breq	.+6      	; 0x1438 <dtoa_prf+0x2c6>
    1432:	91 93       	st	Z+, r25
    1434:	81 50       	subi	r24, 0x01	; 1
    1436:	fb cf       	rjmp	.-10     	; 0x142e <dtoa_prf+0x2bc>
    1438:	fb 01       	movw	r30, r22
    143a:	eb 0d       	add	r30, r11
    143c:	f1 1d       	adc	r31, r1
    143e:	10 82       	st	Z, r1
    1440:	80 e0       	ldi	r24, 0x00	; 0
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	29 96       	adiw	r28, 0x09	; 9
    1446:	0f b6       	in	r0, 0x3f	; 63
    1448:	f8 94       	cli
    144a:	de bf       	out	0x3e, r29	; 62
    144c:	0f be       	out	0x3f, r0	; 63
    144e:	cd bf       	out	0x3d, r28	; 61
    1450:	df 91       	pop	r29
    1452:	cf 91       	pop	r28
    1454:	1f 91       	pop	r17
    1456:	0f 91       	pop	r16
    1458:	ff 90       	pop	r15
    145a:	ef 90       	pop	r14
    145c:	df 90       	pop	r13
    145e:	cf 90       	pop	r12
    1460:	bf 90       	pop	r11
    1462:	af 90       	pop	r10
    1464:	9f 90       	pop	r9
    1466:	7f 90       	pop	r7
    1468:	6f 90       	pop	r6
    146a:	08 95       	ret

0000146c <__ftoa_engine>:
    146c:	28 30       	cpi	r18, 0x08	; 8
    146e:	08 f0       	brcs	.+2      	; 0x1472 <__ftoa_engine+0x6>
    1470:	27 e0       	ldi	r18, 0x07	; 7
    1472:	33 27       	eor	r19, r19
    1474:	da 01       	movw	r26, r20
    1476:	99 0f       	add	r25, r25
    1478:	31 1d       	adc	r19, r1
    147a:	87 fd       	sbrc	r24, 7
    147c:	91 60       	ori	r25, 0x01	; 1
    147e:	00 96       	adiw	r24, 0x00	; 0
    1480:	61 05       	cpc	r22, r1
    1482:	71 05       	cpc	r23, r1
    1484:	39 f4       	brne	.+14     	; 0x1494 <__ftoa_engine+0x28>
    1486:	32 60       	ori	r19, 0x02	; 2
    1488:	2e 5f       	subi	r18, 0xFE	; 254
    148a:	3d 93       	st	X+, r19
    148c:	30 e3       	ldi	r19, 0x30	; 48
    148e:	2a 95       	dec	r18
    1490:	e1 f7       	brne	.-8      	; 0x148a <__ftoa_engine+0x1e>
    1492:	08 95       	ret
    1494:	9f 3f       	cpi	r25, 0xFF	; 255
    1496:	30 f0       	brcs	.+12     	; 0x14a4 <__ftoa_engine+0x38>
    1498:	80 38       	cpi	r24, 0x80	; 128
    149a:	71 05       	cpc	r23, r1
    149c:	61 05       	cpc	r22, r1
    149e:	09 f0       	breq	.+2      	; 0x14a2 <__ftoa_engine+0x36>
    14a0:	3c 5f       	subi	r19, 0xFC	; 252
    14a2:	3c 5f       	subi	r19, 0xFC	; 252
    14a4:	3d 93       	st	X+, r19
    14a6:	91 30       	cpi	r25, 0x01	; 1
    14a8:	08 f0       	brcs	.+2      	; 0x14ac <__ftoa_engine+0x40>
    14aa:	80 68       	ori	r24, 0x80	; 128
    14ac:	91 1d       	adc	r25, r1
    14ae:	df 93       	push	r29
    14b0:	cf 93       	push	r28
    14b2:	1f 93       	push	r17
    14b4:	0f 93       	push	r16
    14b6:	ff 92       	push	r15
    14b8:	ef 92       	push	r14
    14ba:	19 2f       	mov	r17, r25
    14bc:	98 7f       	andi	r25, 0xF8	; 248
    14be:	96 95       	lsr	r25
    14c0:	e9 2f       	mov	r30, r25
    14c2:	96 95       	lsr	r25
    14c4:	96 95       	lsr	r25
    14c6:	e9 0f       	add	r30, r25
    14c8:	ff 27       	eor	r31, r31
    14ca:	e4 59       	subi	r30, 0x94	; 148
    14cc:	fe 4f       	sbci	r31, 0xFE	; 254
    14ce:	99 27       	eor	r25, r25
    14d0:	33 27       	eor	r19, r19
    14d2:	ee 24       	eor	r14, r14
    14d4:	ff 24       	eor	r15, r15
    14d6:	a7 01       	movw	r20, r14
    14d8:	e7 01       	movw	r28, r14
    14da:	05 90       	lpm	r0, Z+
    14dc:	08 94       	sec
    14de:	07 94       	ror	r0
    14e0:	28 f4       	brcc	.+10     	; 0x14ec <__ftoa_engine+0x80>
    14e2:	36 0f       	add	r19, r22
    14e4:	e7 1e       	adc	r14, r23
    14e6:	f8 1e       	adc	r15, r24
    14e8:	49 1f       	adc	r20, r25
    14ea:	51 1d       	adc	r21, r1
    14ec:	66 0f       	add	r22, r22
    14ee:	77 1f       	adc	r23, r23
    14f0:	88 1f       	adc	r24, r24
    14f2:	99 1f       	adc	r25, r25
    14f4:	06 94       	lsr	r0
    14f6:	a1 f7       	brne	.-24     	; 0x14e0 <__ftoa_engine+0x74>
    14f8:	05 90       	lpm	r0, Z+
    14fa:	07 94       	ror	r0
    14fc:	28 f4       	brcc	.+10     	; 0x1508 <__ftoa_engine+0x9c>
    14fe:	e7 0e       	add	r14, r23
    1500:	f8 1e       	adc	r15, r24
    1502:	49 1f       	adc	r20, r25
    1504:	56 1f       	adc	r21, r22
    1506:	c1 1d       	adc	r28, r1
    1508:	77 0f       	add	r23, r23
    150a:	88 1f       	adc	r24, r24
    150c:	99 1f       	adc	r25, r25
    150e:	66 1f       	adc	r22, r22
    1510:	06 94       	lsr	r0
    1512:	a1 f7       	brne	.-24     	; 0x14fc <__ftoa_engine+0x90>
    1514:	05 90       	lpm	r0, Z+
    1516:	07 94       	ror	r0
    1518:	28 f4       	brcc	.+10     	; 0x1524 <__ftoa_engine+0xb8>
    151a:	f8 0e       	add	r15, r24
    151c:	49 1f       	adc	r20, r25
    151e:	56 1f       	adc	r21, r22
    1520:	c7 1f       	adc	r28, r23
    1522:	d1 1d       	adc	r29, r1
    1524:	88 0f       	add	r24, r24
    1526:	99 1f       	adc	r25, r25
    1528:	66 1f       	adc	r22, r22
    152a:	77 1f       	adc	r23, r23
    152c:	06 94       	lsr	r0
    152e:	a1 f7       	brne	.-24     	; 0x1518 <__ftoa_engine+0xac>
    1530:	05 90       	lpm	r0, Z+
    1532:	07 94       	ror	r0
    1534:	20 f4       	brcc	.+8      	; 0x153e <__ftoa_engine+0xd2>
    1536:	49 0f       	add	r20, r25
    1538:	56 1f       	adc	r21, r22
    153a:	c7 1f       	adc	r28, r23
    153c:	d8 1f       	adc	r29, r24
    153e:	99 0f       	add	r25, r25
    1540:	66 1f       	adc	r22, r22
    1542:	77 1f       	adc	r23, r23
    1544:	88 1f       	adc	r24, r24
    1546:	06 94       	lsr	r0
    1548:	a9 f7       	brne	.-22     	; 0x1534 <__ftoa_engine+0xc8>
    154a:	84 91       	lpm	r24, Z
    154c:	10 95       	com	r17
    154e:	17 70       	andi	r17, 0x07	; 7
    1550:	41 f0       	breq	.+16     	; 0x1562 <__ftoa_engine+0xf6>
    1552:	d6 95       	lsr	r29
    1554:	c7 95       	ror	r28
    1556:	57 95       	ror	r21
    1558:	47 95       	ror	r20
    155a:	f7 94       	ror	r15
    155c:	e7 94       	ror	r14
    155e:	1a 95       	dec	r17
    1560:	c1 f7       	brne	.-16     	; 0x1552 <__ftoa_engine+0xe6>
    1562:	e2 e1       	ldi	r30, 0x12	; 18
    1564:	f1 e0       	ldi	r31, 0x01	; 1
    1566:	68 94       	set
    1568:	15 90       	lpm	r1, Z+
    156a:	15 91       	lpm	r17, Z+
    156c:	35 91       	lpm	r19, Z+
    156e:	65 91       	lpm	r22, Z+
    1570:	95 91       	lpm	r25, Z+
    1572:	05 90       	lpm	r0, Z+
    1574:	7f e2       	ldi	r23, 0x2F	; 47
    1576:	73 95       	inc	r23
    1578:	e1 18       	sub	r14, r1
    157a:	f1 0a       	sbc	r15, r17
    157c:	43 0b       	sbc	r20, r19
    157e:	56 0b       	sbc	r21, r22
    1580:	c9 0b       	sbc	r28, r25
    1582:	d0 09       	sbc	r29, r0
    1584:	c0 f7       	brcc	.-16     	; 0x1576 <__ftoa_engine+0x10a>
    1586:	e1 0c       	add	r14, r1
    1588:	f1 1e       	adc	r15, r17
    158a:	43 1f       	adc	r20, r19
    158c:	56 1f       	adc	r21, r22
    158e:	c9 1f       	adc	r28, r25
    1590:	d0 1d       	adc	r29, r0
    1592:	7e f4       	brtc	.+30     	; 0x15b2 <__ftoa_engine+0x146>
    1594:	70 33       	cpi	r23, 0x30	; 48
    1596:	11 f4       	brne	.+4      	; 0x159c <__ftoa_engine+0x130>
    1598:	8a 95       	dec	r24
    159a:	e6 cf       	rjmp	.-52     	; 0x1568 <__ftoa_engine+0xfc>
    159c:	e8 94       	clt
    159e:	01 50       	subi	r16, 0x01	; 1
    15a0:	30 f0       	brcs	.+12     	; 0x15ae <__ftoa_engine+0x142>
    15a2:	08 0f       	add	r16, r24
    15a4:	0a f4       	brpl	.+2      	; 0x15a8 <__ftoa_engine+0x13c>
    15a6:	00 27       	eor	r16, r16
    15a8:	02 17       	cp	r16, r18
    15aa:	08 f4       	brcc	.+2      	; 0x15ae <__ftoa_engine+0x142>
    15ac:	20 2f       	mov	r18, r16
    15ae:	23 95       	inc	r18
    15b0:	02 2f       	mov	r16, r18
    15b2:	7a 33       	cpi	r23, 0x3A	; 58
    15b4:	28 f0       	brcs	.+10     	; 0x15c0 <__ftoa_engine+0x154>
    15b6:	79 e3       	ldi	r23, 0x39	; 57
    15b8:	7d 93       	st	X+, r23
    15ba:	2a 95       	dec	r18
    15bc:	e9 f7       	brne	.-6      	; 0x15b8 <__ftoa_engine+0x14c>
    15be:	10 c0       	rjmp	.+32     	; 0x15e0 <__ftoa_engine+0x174>
    15c0:	7d 93       	st	X+, r23
    15c2:	2a 95       	dec	r18
    15c4:	89 f6       	brne	.-94     	; 0x1568 <__ftoa_engine+0xfc>
    15c6:	06 94       	lsr	r0
    15c8:	97 95       	ror	r25
    15ca:	67 95       	ror	r22
    15cc:	37 95       	ror	r19
    15ce:	17 95       	ror	r17
    15d0:	17 94       	ror	r1
    15d2:	e1 18       	sub	r14, r1
    15d4:	f1 0a       	sbc	r15, r17
    15d6:	43 0b       	sbc	r20, r19
    15d8:	56 0b       	sbc	r21, r22
    15da:	c9 0b       	sbc	r28, r25
    15dc:	d0 09       	sbc	r29, r0
    15de:	98 f0       	brcs	.+38     	; 0x1606 <__ftoa_engine+0x19a>
    15e0:	23 95       	inc	r18
    15e2:	7e 91       	ld	r23, -X
    15e4:	73 95       	inc	r23
    15e6:	7a 33       	cpi	r23, 0x3A	; 58
    15e8:	08 f0       	brcs	.+2      	; 0x15ec <__ftoa_engine+0x180>
    15ea:	70 e3       	ldi	r23, 0x30	; 48
    15ec:	7c 93       	st	X, r23
    15ee:	20 13       	cpse	r18, r16
    15f0:	b8 f7       	brcc	.-18     	; 0x15e0 <__ftoa_engine+0x174>
    15f2:	7e 91       	ld	r23, -X
    15f4:	70 61       	ori	r23, 0x10	; 16
    15f6:	7d 93       	st	X+, r23
    15f8:	30 f0       	brcs	.+12     	; 0x1606 <__ftoa_engine+0x19a>
    15fa:	83 95       	inc	r24
    15fc:	71 e3       	ldi	r23, 0x31	; 49
    15fe:	7d 93       	st	X+, r23
    1600:	70 e3       	ldi	r23, 0x30	; 48
    1602:	2a 95       	dec	r18
    1604:	e1 f7       	brne	.-8      	; 0x15fe <__ftoa_engine+0x192>
    1606:	11 24       	eor	r1, r1
    1608:	ef 90       	pop	r14
    160a:	ff 90       	pop	r15
    160c:	0f 91       	pop	r16
    160e:	1f 91       	pop	r17
    1610:	cf 91       	pop	r28
    1612:	df 91       	pop	r29
    1614:	99 27       	eor	r25, r25
    1616:	87 fd       	sbrc	r24, 7
    1618:	90 95       	com	r25
    161a:	08 95       	ret

0000161c <_exit>:
    161c:	f8 94       	cli

0000161e <__stop_program>:
    161e:	ff cf       	rjmp	.-2      	; 0x161e <__stop_program>
