
waypointNavigator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006e  00800200  000014d2  00001566  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000039  0080026e  0080026e  000015d4  2**0
                  ALLOC
  3 .stab         00000024  00000000  00000000  000015d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000001e  00000000  00000000  000015f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000005c  00000000  00000000  00001616  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000360  00000000  00000000  00001678  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003bc1  00000000  00000000  000019d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000012b0  00000000  00000000  00005599  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001f55  00000000  00000000  00006849  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000009a0  00000000  00000000  000087a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001268  00000000  00000000  00009140  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002185  00000000  00000000  0000a3a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000280  00000000  00000000  0000c52d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	05 c1       	rjmp	.+522    	; 0x20c <__ctors_end>
       2:	00 00       	nop
       4:	23 c1       	rjmp	.+582    	; 0x24c <__bad_interrupt>
       6:	00 00       	nop
       8:	21 c1       	rjmp	.+578    	; 0x24c <__bad_interrupt>
       a:	00 00       	nop
       c:	1f c1       	rjmp	.+574    	; 0x24c <__bad_interrupt>
       e:	00 00       	nop
      10:	1d c1       	rjmp	.+570    	; 0x24c <__bad_interrupt>
      12:	00 00       	nop
      14:	1b c1       	rjmp	.+566    	; 0x24c <__bad_interrupt>
      16:	00 00       	nop
      18:	19 c1       	rjmp	.+562    	; 0x24c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	17 c1       	rjmp	.+558    	; 0x24c <__bad_interrupt>
      1e:	00 00       	nop
      20:	15 c1       	rjmp	.+554    	; 0x24c <__bad_interrupt>
      22:	00 00       	nop
      24:	1a c3       	rjmp	.+1588   	; 0x65a <__vector_9>
      26:	00 00       	nop
      28:	11 c1       	rjmp	.+546    	; 0x24c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0f c1       	rjmp	.+542    	; 0x24c <__bad_interrupt>
      2e:	00 00       	nop
      30:	0d c1       	rjmp	.+538    	; 0x24c <__bad_interrupt>
      32:	00 00       	nop
      34:	0b c1       	rjmp	.+534    	; 0x24c <__bad_interrupt>
      36:	00 00       	nop
      38:	09 c1       	rjmp	.+530    	; 0x24c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	07 c1       	rjmp	.+526    	; 0x24c <__bad_interrupt>
      3e:	00 00       	nop
      40:	05 c1       	rjmp	.+522    	; 0x24c <__bad_interrupt>
      42:	00 00       	nop
      44:	03 c1       	rjmp	.+518    	; 0x24c <__bad_interrupt>
      46:	00 00       	nop
      48:	01 c1       	rjmp	.+514    	; 0x24c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ff c0       	rjmp	.+510    	; 0x24c <__bad_interrupt>
      4e:	00 00       	nop
      50:	fd c0       	rjmp	.+506    	; 0x24c <__bad_interrupt>
      52:	00 00       	nop
      54:	fb c0       	rjmp	.+502    	; 0x24c <__bad_interrupt>
      56:	00 00       	nop
      58:	f9 c0       	rjmp	.+498    	; 0x24c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	fe c3       	rjmp	.+2044   	; 0x85a <__vector_23>
      5e:	00 00       	nop
      60:	f5 c0       	rjmp	.+490    	; 0x24c <__bad_interrupt>
      62:	00 00       	nop
      64:	f3 c0       	rjmp	.+486    	; 0x24c <__bad_interrupt>
      66:	00 00       	nop
      68:	f1 c0       	rjmp	.+482    	; 0x24c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ef c0       	rjmp	.+478    	; 0x24c <__bad_interrupt>
      6e:	00 00       	nop
      70:	ed c0       	rjmp	.+474    	; 0x24c <__bad_interrupt>
      72:	00 00       	nop
      74:	eb c0       	rjmp	.+470    	; 0x24c <__bad_interrupt>
      76:	00 00       	nop
      78:	e9 c0       	rjmp	.+466    	; 0x24c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e7 c0       	rjmp	.+462    	; 0x24c <__bad_interrupt>
      7e:	00 00       	nop
      80:	e5 c0       	rjmp	.+458    	; 0x24c <__bad_interrupt>
      82:	00 00       	nop
      84:	e3 c0       	rjmp	.+454    	; 0x24c <__bad_interrupt>
      86:	00 00       	nop
      88:	e1 c0       	rjmp	.+450    	; 0x24c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	df c0       	rjmp	.+446    	; 0x24c <__bad_interrupt>
      8e:	00 00       	nop
      90:	dd c0       	rjmp	.+442    	; 0x24c <__bad_interrupt>
      92:	00 00       	nop
      94:	db c0       	rjmp	.+438    	; 0x24c <__bad_interrupt>
      96:	00 00       	nop
      98:	d9 c0       	rjmp	.+434    	; 0x24c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d7 c0       	rjmp	.+430    	; 0x24c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d5 c0       	rjmp	.+426    	; 0x24c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d3 c0       	rjmp	.+422    	; 0x24c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d1 c0       	rjmp	.+418    	; 0x24c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	cf c0       	rjmp	.+414    	; 0x24c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	cd c0       	rjmp	.+410    	; 0x24c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cb c0       	rjmp	.+406    	; 0x24c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c9 c0       	rjmp	.+402    	; 0x24c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	c7 c0       	rjmp	.+398    	; 0x24c <__bad_interrupt>
      be:	00 00       	nop
      c0:	c5 c0       	rjmp	.+394    	; 0x24c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c3 c0       	rjmp	.+390    	; 0x24c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c1 c0       	rjmp	.+386    	; 0x24c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	bf c0       	rjmp	.+382    	; 0x24c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	bd c0       	rjmp	.+378    	; 0x24c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bb c0       	rjmp	.+374    	; 0x24c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	b9 c0       	rjmp	.+370    	; 0x24c <__bad_interrupt>
      da:	00 00       	nop
      dc:	b7 c0       	rjmp	.+366    	; 0x24c <__bad_interrupt>
      de:	00 00       	nop
      e0:	b5 c0       	rjmp	.+362    	; 0x24c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	00 40       	sbci	r16, 0x00	; 0
     114:	7a 10       	cpse	r7, r10
     116:	f3 5a       	subi	r31, 0xA3	; 163
     118:	00 a0       	ldd	r0, Z+32	; 0x20
     11a:	72 4e       	sbci	r23, 0xE2	; 226
     11c:	18 09       	sbc	r17, r8
     11e:	00 10       	cpse	r0, r0
     120:	a5 d4       	rcall	.+2378   	; 0xa6c <_Z15USART_putstringiPKc+0x1a>
     122:	e8 00       	.word	0x00e8	; ????
     124:	00 e8       	ldi	r16, 0x80	; 128
     126:	76 48       	sbci	r23, 0x86	; 134
     128:	17 00       	.word	0x0017	; ????
     12a:	00 e4       	ldi	r16, 0x40	; 64
     12c:	0b 54       	subi	r16, 0x4B	; 75
     12e:	02 00       	.word	0x0002	; ????
     130:	00 ca       	rjmp	.-3072   	; 0xfffff532 <__eeprom_end+0xff7ef532>
     132:	9a 3b       	cpi	r25, 0xBA	; 186
     134:	00 00       	nop
     136:	00 e1       	ldi	r16, 0x10	; 16
     138:	f5 05       	cpc	r31, r5
     13a:	00 00       	nop
     13c:	80 96       	adiw	r24, 0x20	; 32
     13e:	98 00       	.word	0x0098	; ????
     140:	00 00       	nop
     142:	40 42       	sbci	r20, 0x20	; 32
     144:	0f 00       	.word	0x000f	; ????
     146:	00 00       	nop
     148:	a0 86       	std	Z+8, r10	; 0x08
     14a:	01 00       	.word	0x0001	; ????
     14c:	00 00       	nop
     14e:	10 27       	eor	r17, r16
     150:	00 00       	nop
     152:	00 00       	nop
     154:	e8 03       	fmulsu	r22, r16
     156:	00 00       	nop
     158:	00 00       	nop
     15a:	64 00       	.word	0x0064	; ????
     15c:	00 00       	nop
     15e:	00 00       	nop
     160:	0a 00       	.word	0x000a	; ????
     162:	00 00       	nop
     164:	00 00       	nop
     166:	01 00       	.word	0x0001	; ????
     168:	00 00       	nop
     16a:	00 00       	nop
     16c:	2c 76       	andi	r18, 0x6C	; 108
     16e:	d8 88       	ldd	r13, Y+16	; 0x10
     170:	dc 67       	ori	r29, 0x7C	; 124
     172:	4f 08       	sbc	r4, r15
     174:	23 df       	rcall	.-442    	; 0xffffffbc <__eeprom_end+0xff7effbc>
     176:	c1 df       	rcall	.-126    	; 0xfa <__SREG__+0xbb>
     178:	ae 59       	subi	r26, 0x9E	; 158
     17a:	e1 b1       	in	r30, 0x01	; 1
     17c:	b7 96       	adiw	r30, 0x27	; 39
     17e:	e5 e3       	ldi	r30, 0x35	; 53
     180:	e4 53       	subi	r30, 0x34	; 52
     182:	c6 3a       	cpi	r28, 0xA6	; 166
     184:	e6 51       	subi	r30, 0x16	; 22
     186:	99 76       	andi	r25, 0x69	; 105
     188:	96 e8       	ldi	r25, 0x86	; 134
     18a:	e6 c2       	rjmp	.+1484   	; 0x758 <__vector_9+0xfe>
     18c:	84 26       	eor	r8, r20
     18e:	eb 89       	ldd	r30, Y+19	; 0x13
     190:	8c 9b       	sbis	0x11, 4	; 17
     192:	62 ed       	ldi	r22, 0xD2	; 210
     194:	40 7c       	andi	r20, 0xC0	; 192
     196:	6f fc       	.word	0xfc6f	; ????
     198:	ef bc       	out	0x2f, r14	; 47
     19a:	9c 9f       	mul	r25, r28
     19c:	40 f2       	brcs	.-112    	; 0x12e <__trampolines_end+0x1c>
     19e:	ba a5       	ldd	r27, Y+42	; 0x2a
     1a0:	6f a5       	ldd	r22, Y+47	; 0x2f
     1a2:	f4 90       	lpm	r15, Z
     1a4:	05 5a       	subi	r16, 0xA5	; 165
     1a6:	2a f7       	brpl	.-54     	; 0x172 <__trampolines_end+0x60>
     1a8:	5c 93       	st	X, r21
     1aa:	6b 6c       	ori	r22, 0xCB	; 203
     1ac:	f9 67       	ori	r31, 0x79	; 121
     1ae:	6d c1       	rjmp	.+730    	; 0x48a <_Z10getHeadingv+0x142>
     1b0:	1b fc       	.word	0xfc1b	; ????
     1b2:	e0 e4       	ldi	r30, 0x40	; 64
     1b4:	0d 47       	sbci	r16, 0x7D	; 125
     1b6:	fe f5       	brtc	.+126    	; 0x236 <__do_clear_bss>
     1b8:	20 e6       	ldi	r18, 0x60	; 96
     1ba:	b5 00       	.word	0x00b5	; ????
     1bc:	d0 ed       	ldi	r29, 0xD0	; 208
     1be:	90 2e       	mov	r9, r16
     1c0:	03 00       	.word	0x0003	; ????
     1c2:	94 35       	cpi	r25, 0x54	; 84
     1c4:	77 05       	cpc	r23, r7
     1c6:	00 80       	ld	r0, Z
     1c8:	84 1e       	adc	r8, r20
     1ca:	08 00       	.word	0x0008	; ????
     1cc:	00 20       	and	r0, r0
     1ce:	4e 0a       	sbc	r4, r30
     1d0:	00 00       	nop
     1d2:	00 c8       	rjmp	.-4096   	; 0xfffff1d4 <__eeprom_end+0xff7ef1d4>
     1d4:	0c 33       	cpi	r16, 0x3C	; 60
     1d6:	33 33       	cpi	r19, 0x33	; 51
     1d8:	33 0f       	add	r19, r19
     1da:	98 6e       	ori	r25, 0xE8	; 232
     1dc:	12 83       	std	Z+2, r17	; 0x02
     1de:	11 41       	sbci	r17, 0x11	; 17
     1e0:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1e2:	21 14       	cp	r2, r1
     1e4:	89 3b       	cpi	r24, 0xB9	; 185
     1e6:	e6 55       	subi	r30, 0x56	; 86
     1e8:	16 cf       	rjmp	.-468    	; 0x16 <__zero_reg__+0x15>
     1ea:	fe e6       	ldi	r31, 0x6E	; 110
     1ec:	db 18       	sub	r13, r11
     1ee:	d1 84       	ldd	r13, Z+9	; 0x09
     1f0:	4b 38       	cpi	r20, 0x8B	; 139
     1f2:	1b f7       	brvc	.-58     	; 0x1ba <__trampolines_end+0xa8>
     1f4:	7c 1d       	adc	r23, r12
     1f6:	90 1d       	adc	r25, r0
     1f8:	a4 bb       	out	0x14, r26	; 20
     1fa:	e4 24       	eor	r14, r4
     1fc:	20 32       	cpi	r18, 0x20	; 32
     1fe:	84 72       	andi	r24, 0x24	; 36
     200:	5e 22       	and	r5, r30
     202:	81 00       	.word	0x0081	; ????
     204:	c9 f1       	breq	.+114    	; 0x278 <i2c_rep_start+0x8>
     206:	24 ec       	ldi	r18, 0xC4	; 196
     208:	a1 e5       	ldi	r26, 0x51	; 81
     20a:	3d 27       	eor	r19, r29

0000020c <__ctors_end>:
     20c:	11 24       	eor	r1, r1
     20e:	1f be       	out	0x3f, r1	; 63
     210:	cf ef       	ldi	r28, 0xFF	; 255
     212:	d1 e2       	ldi	r29, 0x21	; 33
     214:	de bf       	out	0x3e, r29	; 62
     216:	cd bf       	out	0x3d, r28	; 61
     218:	00 e0       	ldi	r16, 0x00	; 0
     21a:	0c bf       	out	0x3c, r16	; 60

0000021c <__do_copy_data>:
     21c:	12 e0       	ldi	r17, 0x02	; 2
     21e:	a0 e0       	ldi	r26, 0x00	; 0
     220:	b2 e0       	ldi	r27, 0x02	; 2
     222:	e2 ed       	ldi	r30, 0xD2	; 210
     224:	f4 e1       	ldi	r31, 0x14	; 20
     226:	00 e0       	ldi	r16, 0x00	; 0
     228:	0b bf       	out	0x3b, r16	; 59
     22a:	02 c0       	rjmp	.+4      	; 0x230 <__do_copy_data+0x14>
     22c:	07 90       	elpm	r0, Z+
     22e:	0d 92       	st	X+, r0
     230:	ae 36       	cpi	r26, 0x6E	; 110
     232:	b1 07       	cpc	r27, r17
     234:	d9 f7       	brne	.-10     	; 0x22c <__do_copy_data+0x10>

00000236 <__do_clear_bss>:
     236:	22 e0       	ldi	r18, 0x02	; 2
     238:	ae e6       	ldi	r26, 0x6E	; 110
     23a:	b2 e0       	ldi	r27, 0x02	; 2
     23c:	01 c0       	rjmp	.+2      	; 0x240 <.do_clear_bss_start>

0000023e <.do_clear_bss_loop>:
     23e:	1d 92       	st	X+, r1

00000240 <.do_clear_bss_start>:
     240:	a7 3a       	cpi	r26, 0xA7	; 167
     242:	b2 07       	cpc	r27, r18
     244:	e1 f7       	brne	.-8      	; 0x23e <.do_clear_bss_loop>
     246:	51 d4       	rcall	.+2210   	; 0xaea <main>
     248:	0c 94 67 0a 	jmp	0x14ce	; 0x14ce <_exit>

0000024c <__bad_interrupt>:
     24c:	d9 ce       	rjmp	.-590    	; 0x0 <__vectors>

0000024e <i2c_delay_T2>:
     24e:	00 c0       	rjmp	.+0      	; 0x250 <i2c_delay_T2+0x2>
     250:	00 c0       	rjmp	.+0      	; 0x252 <i2c_delay_T2+0x4>
     252:	00 c0       	rjmp	.+0      	; 0x254 <i2c_delay_T2+0x6>
     254:	00 c0       	rjmp	.+0      	; 0x256 <i2c_delay_T2+0x8>
     256:	00 c0       	rjmp	.+0      	; 0x258 <i2c_delay_T2+0xa>
     258:	00 c0       	rjmp	.+0      	; 0x25a <i2c_delay_T2+0xc>
     25a:	00 00       	nop
     25c:	08 95       	ret

0000025e <i2c_init>:
     25e:	51 98       	cbi	0x0a, 1	; 10
     260:	50 98       	cbi	0x0a, 0	; 10
     262:	59 98       	cbi	0x0b, 1	; 11
     264:	58 98       	cbi	0x0b, 0	; 11
     266:	08 95       	ret

00000268 <i2c_start>:
     268:	51 9a       	sbi	0x0a, 1	; 10
     26a:	f1 df       	rcall	.-30     	; 0x24e <i2c_delay_T2>
     26c:	1d c0       	rjmp	.+58     	; 0x2a8 <i2c_write>
     26e:	08 95       	ret

00000270 <i2c_rep_start>:
     270:	50 9a       	sbi	0x0a, 0	; 10
     272:	ed df       	rcall	.-38     	; 0x24e <i2c_delay_T2>
     274:	51 98       	cbi	0x0a, 1	; 10
     276:	eb df       	rcall	.-42     	; 0x24e <i2c_delay_T2>
     278:	50 98       	cbi	0x0a, 0	; 10
     27a:	e9 df       	rcall	.-46     	; 0x24e <i2c_delay_T2>
     27c:	51 9a       	sbi	0x0a, 1	; 10
     27e:	e7 df       	rcall	.-50     	; 0x24e <i2c_delay_T2>
     280:	13 c0       	rjmp	.+38     	; 0x2a8 <i2c_write>
     282:	08 95       	ret

00000284 <i2c_start_wait>:
     284:	08 2e       	mov	r0, r24

00000286 <i2c_start_wait1>:
     286:	51 9a       	sbi	0x0a, 1	; 10
     288:	e2 df       	rcall	.-60     	; 0x24e <i2c_delay_T2>
     28a:	80 2d       	mov	r24, r0
     28c:	0d d0       	rcall	.+26     	; 0x2a8 <i2c_write>
     28e:	88 23       	and	r24, r24
     290:	11 f0       	breq	.+4      	; 0x296 <i2c_start_wait_done>
     292:	02 d0       	rcall	.+4      	; 0x298 <i2c_stop>
     294:	f8 cf       	rjmp	.-16     	; 0x286 <i2c_start_wait1>

00000296 <i2c_start_wait_done>:
     296:	08 95       	ret

00000298 <i2c_stop>:
     298:	50 9a       	sbi	0x0a, 0	; 10
     29a:	51 9a       	sbi	0x0a, 1	; 10
     29c:	d8 df       	rcall	.-80     	; 0x24e <i2c_delay_T2>
     29e:	50 98       	cbi	0x0a, 0	; 10
     2a0:	d6 df       	rcall	.-84     	; 0x24e <i2c_delay_T2>
     2a2:	51 98       	cbi	0x0a, 1	; 10
     2a4:	d4 cf       	rjmp	.-88     	; 0x24e <i2c_delay_T2>
     2a6:	08 95       	ret

000002a8 <i2c_write>:
     2a8:	08 94       	sec
     2aa:	88 1f       	adc	r24, r24
     2ac:	01 c0       	rjmp	.+2      	; 0x2b0 <i2c_write_first>

000002ae <i2c_write_bit>:
     2ae:	88 0f       	add	r24, r24

000002b0 <i2c_write_first>:
     2b0:	59 f0       	breq	.+22     	; 0x2c8 <i2c_get_ack>
     2b2:	50 9a       	sbi	0x0a, 0	; 10
     2b4:	18 f4       	brcc	.+6      	; 0x2bc <i2c_write_low>
     2b6:	00 00       	nop
     2b8:	51 98       	cbi	0x0a, 1	; 10
     2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <i2c_write_high>

000002bc <i2c_write_low>:
     2bc:	51 9a       	sbi	0x0a, 1	; 10
     2be:	00 c0       	rjmp	.+0      	; 0x2c0 <i2c_write_high>

000002c0 <i2c_write_high>:
     2c0:	c6 df       	rcall	.-116    	; 0x24e <i2c_delay_T2>
     2c2:	50 98       	cbi	0x0a, 0	; 10
     2c4:	c4 df       	rcall	.-120    	; 0x24e <i2c_delay_T2>
     2c6:	f3 cf       	rjmp	.-26     	; 0x2ae <i2c_write_bit>

000002c8 <i2c_get_ack>:
     2c8:	50 9a       	sbi	0x0a, 0	; 10
     2ca:	51 98       	cbi	0x0a, 1	; 10
     2cc:	c0 df       	rcall	.-128    	; 0x24e <i2c_delay_T2>
     2ce:	50 98       	cbi	0x0a, 0	; 10

000002d0 <i2c_ack_wait>:
     2d0:	48 9b       	sbis	0x09, 0	; 9
     2d2:	fe cf       	rjmp	.-4      	; 0x2d0 <i2c_ack_wait>
     2d4:	88 27       	eor	r24, r24
     2d6:	49 99       	sbic	0x09, 1	; 9
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	b9 df       	rcall	.-142    	; 0x24e <i2c_delay_T2>
     2dc:	99 27       	eor	r25, r25
     2de:	08 95       	ret

000002e0 <i2c_readNak>:
     2e0:	88 27       	eor	r24, r24
     2e2:	01 c0       	rjmp	.+2      	; 0x2e6 <i2c_read>

000002e4 <i2c_readAck>:
     2e4:	81 e0       	ldi	r24, 0x01	; 1

000002e6 <i2c_read>:
     2e6:	71 e0       	ldi	r23, 0x01	; 1

000002e8 <i2c_read_bit>:
     2e8:	50 9a       	sbi	0x0a, 0	; 10
     2ea:	51 98       	cbi	0x0a, 1	; 10
     2ec:	b0 df       	rcall	.-160    	; 0x24e <i2c_delay_T2>
     2ee:	50 98       	cbi	0x0a, 0	; 10
     2f0:	ae df       	rcall	.-164    	; 0x24e <i2c_delay_T2>

000002f2 <i2c_read_stretch>:
     2f2:	48 9b       	sbis	0x09, 0	; 9
     2f4:	fe cf       	rjmp	.-4      	; 0x2f2 <i2c_read_stretch>
     2f6:	88 94       	clc
     2f8:	49 99       	sbic	0x09, 1	; 9
     2fa:	08 94       	sec
     2fc:	77 1f       	adc	r23, r23
     2fe:	a0 f7       	brcc	.-24     	; 0x2e8 <i2c_read_bit>

00000300 <i2c_put_ack>:
     300:	50 9a       	sbi	0x0a, 0	; 10
     302:	81 30       	cpi	r24, 0x01	; 1
     304:	11 f0       	breq	.+4      	; 0x30a <i2c_put_ack_low>
     306:	51 98       	cbi	0x0a, 1	; 10
     308:	01 c0       	rjmp	.+2      	; 0x30c <i2c_put_ack_high>

0000030a <i2c_put_ack_low>:
     30a:	51 9a       	sbi	0x0a, 1	; 10

0000030c <i2c_put_ack_high>:
     30c:	a0 df       	rcall	.-192    	; 0x24e <i2c_delay_T2>
     30e:	50 98       	cbi	0x0a, 0	; 10

00000310 <i2c_put_ack_wait>:
     310:	48 9b       	sbis	0x09, 0	; 9
     312:	fe cf       	rjmp	.-4      	; 0x310 <i2c_put_ack_wait>
     314:	9c df       	rcall	.-200    	; 0x24e <i2c_delay_T2>
     316:	87 2f       	mov	r24, r23
     318:	99 27       	eor	r25, r25
     31a:	08 95       	ret

0000031c <_Z13init_HMC5883Lv>:
int16_t raw_y = 0;
int16_t raw_z = 0;

void init_HMC5883L(void){

	i2c_start(HMC5883L_WRITE);
     31c:	8c e3       	ldi	r24, 0x3C	; 60
     31e:	a4 df       	rcall	.-184    	; 0x268 <i2c_start>
	i2c_write(0x00); // set pointer to CRA
     320:	80 e0       	ldi	r24, 0x00	; 0
     322:	c2 df       	rcall	.-124    	; 0x2a8 <i2c_write>
	i2c_write(0x70); // write 0x70 to CRA
     324:	80 e7       	ldi	r24, 0x70	; 112
     326:	c0 df       	rcall	.-128    	; 0x2a8 <i2c_write>
	i2c_stop();
     328:	b7 df       	rcall	.-146    	; 0x298 <i2c_stop>

	i2c_start(HMC5883L_WRITE);
     32a:	8c e3       	ldi	r24, 0x3C	; 60
     32c:	9d df       	rcall	.-198    	; 0x268 <i2c_start>
	i2c_write(0x01); // set pointer to CRB
     32e:	81 e0       	ldi	r24, 0x01	; 1
     330:	bb df       	rcall	.-138    	; 0x2a8 <i2c_write>
	i2c_write(0xA0);
     332:	80 ea       	ldi	r24, 0xA0	; 160
     334:	b9 df       	rcall	.-142    	; 0x2a8 <i2c_write>
	i2c_stop();
     336:	b0 df       	rcall	.-160    	; 0x298 <i2c_stop>

	i2c_start(HMC5883L_WRITE);
     338:	8c e3       	ldi	r24, 0x3C	; 60
     33a:	96 df       	rcall	.-212    	; 0x268 <i2c_start>
	i2c_write(0x02); // set pointer to measurement mode
     33c:	82 e0       	ldi	r24, 0x02	; 2
     33e:	b4 df       	rcall	.-152    	; 0x2a8 <i2c_write>
	i2c_write(0x00); // continuous measurement
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	b2 df       	rcall	.-156    	; 0x2a8 <i2c_write>
	i2c_stop();
     344:	a9 cf       	rjmp	.-174    	; 0x298 <i2c_stop>
     346:	08 95       	ret

00000348 <_Z10getHeadingv>:
}

float getHeading(void){
     348:	cf 92       	push	r12
     34a:	df 92       	push	r13
     34c:	ef 92       	push	r14
     34e:	ff 92       	push	r15

	i2c_start_wait(HMC5883L_WRITE);
     350:	8c e3       	ldi	r24, 0x3C	; 60
     352:	98 df       	rcall	.-208    	; 0x284 <i2c_start_wait>
	i2c_write(0x03); //set pointer to X-axis MSB
     354:	83 e0       	ldi	r24, 0x03	; 3
     356:	a8 df       	rcall	.-176    	; 0x2a8 <i2c_write>
	i2c_stop();
     358:	9f df       	rcall	.-194    	; 0x298 <i2c_stop>

	i2c_rep_start(HMC5883L_READ);
     35a:	8d e3       	ldi	r24, 0x3D	; 61
     35c:	89 df       	rcall	.-238    	; 0x270 <i2c_rep_start>

	raw_x = ((uint8_t)i2c_readAck())<<8;
     35e:	c2 df       	rcall	.-124    	; 0x2e4 <i2c_readAck>
     360:	10 92 72 02 	sts	0x0272, r1
     364:	80 93 73 02 	sts	0x0273, r24
	raw_x |= i2c_readAck();
     368:	bd df       	rcall	.-134    	; 0x2e4 <i2c_readAck>
     36a:	20 91 72 02 	lds	r18, 0x0272
     36e:	30 91 73 02 	lds	r19, 0x0273
     372:	28 2b       	or	r18, r24
     374:	30 93 73 02 	sts	0x0273, r19
     378:	20 93 72 02 	sts	0x0272, r18

	raw_z = ((uint8_t)i2c_readAck())<<8;
     37c:	b3 df       	rcall	.-154    	; 0x2e4 <i2c_readAck>
     37e:	10 92 6e 02 	sts	0x026E, r1
     382:	80 93 6f 02 	sts	0x026F, r24
	raw_z |= i2c_readAck();
     386:	ae df       	rcall	.-164    	; 0x2e4 <i2c_readAck>
     388:	20 91 6e 02 	lds	r18, 0x026E
     38c:	30 91 6f 02 	lds	r19, 0x026F
     390:	28 2b       	or	r18, r24
     392:	30 93 6f 02 	sts	0x026F, r19
     396:	20 93 6e 02 	sts	0x026E, r18

	raw_y = ((uint8_t)i2c_readAck())<<8;
     39a:	a4 df       	rcall	.-184    	; 0x2e4 <i2c_readAck>
     39c:	10 92 70 02 	sts	0x0270, r1
     3a0:	80 93 71 02 	sts	0x0271, r24
	raw_y |= i2c_readNak();
     3a4:	9d df       	rcall	.-198    	; 0x2e0 <i2c_readNak>
     3a6:	20 91 70 02 	lds	r18, 0x0270
     3aa:	30 91 71 02 	lds	r19, 0x0271
     3ae:	28 2b       	or	r18, r24
     3b0:	30 93 71 02 	sts	0x0271, r19
     3b4:	20 93 70 02 	sts	0x0270, r18

	i2c_stop();
     3b8:	6f df       	rcall	.-290    	; 0x298 <i2c_stop>
	
	float heading = atan2(raw_y,raw_x)/2;
     3ba:	60 91 72 02 	lds	r22, 0x0272
     3be:	70 91 73 02 	lds	r23, 0x0273
     3c2:	88 27       	eor	r24, r24
     3c4:	77 fd       	sbrc	r23, 7
     3c6:	80 95       	com	r24
     3c8:	98 2f       	mov	r25, r24
     3ca:	cc d4       	rcall	.+2456   	; 0xd64 <__floatsisf>
     3cc:	6b 01       	movw	r12, r22
     3ce:	7c 01       	movw	r14, r24
     3d0:	60 91 70 02 	lds	r22, 0x0270
     3d4:	70 91 71 02 	lds	r23, 0x0271
     3d8:	88 27       	eor	r24, r24
     3da:	77 fd       	sbrc	r23, 7
     3dc:	80 95       	com	r24
     3de:	98 2f       	mov	r25, r24
     3e0:	c1 d4       	rcall	.+2434   	; 0xd64 <__floatsisf>
     3e2:	a7 01       	movw	r20, r14
     3e4:	96 01       	movw	r18, r12
     3e6:	01 d4       	rcall	.+2050   	; 0xbea <atan2>
     3e8:	20 e0       	ldi	r18, 0x00	; 0
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	40 e0       	ldi	r20, 0x00	; 0
     3ee:	5f e3       	ldi	r21, 0x3F	; 63
     3f0:	71 d5       	rcall	.+2786   	; 0xed4 <__mulsf3>
     3f2:	6b 01       	movw	r12, r22
     3f4:	7c 01       	movw	r14, r24
	*/
		
	float heading_degrees = heading * 180 / PI;
	float heading_dec_degrees = heading_dec * 180 / PI;
	
	debug_print("Raw x: ");
     3f6:	80 e0       	ldi	r24, 0x00	; 0
     3f8:	92 e0       	ldi	r25, 0x02	; 2
     3fa:	68 d0       	rcall	.+208    	; 0x4cc <_Z11debug_printPKc>
	debug_printf(raw_x);
     3fc:	60 91 72 02 	lds	r22, 0x0272
     400:	70 91 73 02 	lds	r23, 0x0273
     404:	88 27       	eor	r24, r24
     406:	77 fd       	sbrc	r23, 7
     408:	80 95       	com	r24
     40a:	98 2f       	mov	r25, r24
     40c:	ab d4       	rcall	.+2390   	; 0xd64 <__floatsisf>
     40e:	6d d0       	rcall	.+218    	; 0x4ea <_Z12debug_printff>
	debug_print("\t Heading (radians): ");
     410:	88 e0       	ldi	r24, 0x08	; 8
     412:	92 e0       	ldi	r25, 0x02	; 2
     414:	5b d0       	rcall	.+182    	; 0x4cc <_Z11debug_printPKc>
	debug_printf(heading);
     416:	c7 01       	movw	r24, r14
     418:	b6 01       	movw	r22, r12
     41a:	67 d0       	rcall	.+206    	; 0x4ea <_Z12debug_printff>
	debug_print("\t Heading (degrees): ");
     41c:	8e e1       	ldi	r24, 0x1E	; 30
     41e:	92 e0       	ldi	r25, 0x02	; 2
     420:	55 d0       	rcall	.+170    	; 0x4cc <_Z11debug_printPKc>
	
	if(heading_dec>2*PI)
	heading_dec-=2*PI;
	*/
		
	float heading_degrees = heading * 180 / PI;
     422:	20 e0       	ldi	r18, 0x00	; 0
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	44 e3       	ldi	r20, 0x34	; 52
     428:	53 e4       	ldi	r21, 0x43	; 67
     42a:	c7 01       	movw	r24, r14
     42c:	b6 01       	movw	r22, r12
     42e:	52 d5       	rcall	.+2724   	; 0xed4 <__mulsf3>
     430:	2b ed       	ldi	r18, 0xDB	; 219
     432:	3f e0       	ldi	r19, 0x0F	; 15
     434:	49 e4       	ldi	r20, 0x49	; 73
     436:	50 e4       	ldi	r21, 0x40	; 64
     438:	2b d4       	rcall	.+2134   	; 0xc90 <__divsf3>
	debug_print("Raw x: ");
	debug_printf(raw_x);
	debug_print("\t Heading (radians): ");
	debug_printf(heading);
	debug_print("\t Heading (degrees): ");
	debug_printf(heading_degrees);
     43a:	57 d0       	rcall	.+174    	; 0x4ea <_Z12debug_printff>
	debug_print("\t Heading (w/Declination): ");
     43c:	84 e3       	ldi	r24, 0x34	; 52
     43e:	92 e0       	ldi	r25, 0x02	; 2
     440:	45 d0       	rcall	.+138    	; 0x4cc <_Z11debug_printPKc>
	raw_y |= i2c_readNak();

	i2c_stop();
	
	float heading = atan2(raw_y,raw_x)/2;
	float heading_dec = heading+DECLINATION;
     442:	25 e3       	ldi	r18, 0x35	; 53
     444:	3a ef       	ldi	r19, 0xFA	; 250
     446:	4e e0       	ldi	r20, 0x0E	; 14
     448:	5e e3       	ldi	r21, 0x3E	; 62
     44a:	c7 01       	movw	r24, r14
     44c:	b6 01       	movw	r22, r12
     44e:	5a d3       	rcall	.+1716   	; 0xb04 <__addsf3>
	if(heading_dec>2*PI)
	heading_dec-=2*PI;
	*/
		
	float heading_degrees = heading * 180 / PI;
	float heading_dec_degrees = heading_dec * 180 / PI;
     450:	20 e0       	ldi	r18, 0x00	; 0
     452:	30 e0       	ldi	r19, 0x00	; 0
     454:	44 e3       	ldi	r20, 0x34	; 52
     456:	53 e4       	ldi	r21, 0x43	; 67
     458:	3d d5       	rcall	.+2682   	; 0xed4 <__mulsf3>
     45a:	2b ed       	ldi	r18, 0xDB	; 219
     45c:	3f e0       	ldi	r19, 0x0F	; 15
     45e:	49 e4       	ldi	r20, 0x49	; 73
     460:	50 e4       	ldi	r21, 0x40	; 64
     462:	16 d4       	rcall	.+2092   	; 0xc90 <__divsf3>
	debug_print("\t Heading (radians): ");
	debug_printf(heading);
	debug_print("\t Heading (degrees): ");
	debug_printf(heading_degrees);
	debug_print("\t Heading (w/Declination): ");
	debug_printf(heading_dec_degrees);
     464:	42 d0       	rcall	.+132    	; 0x4ea <_Z12debug_printff>
	debug_println("");
     466:	82 e5       	ldi	r24, 0x52	; 82
     468:	92 e0       	ldi	r25, 0x02	; 2
     46a:	35 d0       	rcall	.+106    	; 0x4d6 <_Z13debug_printlnPKc>
	
	
	return (atan2((double)raw_y,(double)raw_x)* 180) / 3.14159265 + 180 + DECLINATION;
     46c:	60 91 72 02 	lds	r22, 0x0272
     470:	70 91 73 02 	lds	r23, 0x0273
     474:	88 27       	eor	r24, r24
     476:	77 fd       	sbrc	r23, 7
     478:	80 95       	com	r24
     47a:	98 2f       	mov	r25, r24
     47c:	73 d4       	rcall	.+2278   	; 0xd64 <__floatsisf>
     47e:	6b 01       	movw	r12, r22
     480:	7c 01       	movw	r14, r24
     482:	60 91 70 02 	lds	r22, 0x0270
     486:	70 91 71 02 	lds	r23, 0x0271
     48a:	88 27       	eor	r24, r24
     48c:	77 fd       	sbrc	r23, 7
     48e:	80 95       	com	r24
     490:	98 2f       	mov	r25, r24
     492:	68 d4       	rcall	.+2256   	; 0xd64 <__floatsisf>
     494:	a7 01       	movw	r20, r14
     496:	96 01       	movw	r18, r12
     498:	a8 d3       	rcall	.+1872   	; 0xbea <atan2>
     49a:	20 e0       	ldi	r18, 0x00	; 0
     49c:	30 e0       	ldi	r19, 0x00	; 0
     49e:	44 e3       	ldi	r20, 0x34	; 52
     4a0:	53 e4       	ldi	r21, 0x43	; 67
     4a2:	18 d5       	rcall	.+2608   	; 0xed4 <__mulsf3>
     4a4:	2b ed       	ldi	r18, 0xDB	; 219
     4a6:	3f e0       	ldi	r19, 0x0F	; 15
     4a8:	49 e4       	ldi	r20, 0x49	; 73
     4aa:	50 e4       	ldi	r21, 0x40	; 64
     4ac:	f1 d3       	rcall	.+2018   	; 0xc90 <__divsf3>
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	44 e3       	ldi	r20, 0x34	; 52
     4b4:	53 e4       	ldi	r21, 0x43	; 67
     4b6:	26 d3       	rcall	.+1612   	; 0xb04 <__addsf3>
     4b8:	25 e3       	ldi	r18, 0x35	; 53
     4ba:	3a ef       	ldi	r19, 0xFA	; 250
     4bc:	4e e0       	ldi	r20, 0x0E	; 14
     4be:	5e e3       	ldi	r21, 0x3E	; 62
     4c0:	21 d3       	rcall	.+1602   	; 0xb04 <__addsf3>
}
     4c2:	ff 90       	pop	r15
     4c4:	ef 90       	pop	r14
     4c6:	df 90       	pop	r13
     4c8:	cf 90       	pop	r12
     4ca:	08 95       	ret

000004cc <_Z11debug_printPKc>:
	{
		char string[10]; 
		itoa(debugNum,string,10);
		debug_print(string);		
	}
}
     4cc:	bc 01       	movw	r22, r24
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	bf c2       	rjmp	.+1406   	; 0xa52 <_Z15USART_putstringiPKc>
     4d4:	08 95       	ret

000004d6 <_Z13debug_printlnPKc>:
     4d6:	bc 01       	movw	r22, r24
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	ba d2       	rcall	.+1396   	; 0xa52 <_Z15USART_putstringiPKc>
     4de:	60 e5       	ldi	r22, 0x50	; 80
     4e0:	72 e0       	ldi	r23, 0x02	; 2
     4e2:	80 e0       	ldi	r24, 0x00	; 0
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	b5 c2       	rjmp	.+1386   	; 0xa52 <_Z15USART_putstringiPKc>
     4e8:	08 95       	ret

000004ea <_Z12debug_printff>:

void debug_printf(float debugNum)
{
     4ea:	0f 93       	push	r16
     4ec:	1f 93       	push	r17
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	cd b7       	in	r28, 0x3d	; 61
     4f4:	de b7       	in	r29, 0x3e	; 62
     4f6:	64 97       	sbiw	r28, 0x14	; 20
     4f8:	0f b6       	in	r0, 0x3f	; 63
     4fa:	f8 94       	cli
     4fc:	de bf       	out	0x3e, r29	; 62
     4fe:	0f be       	out	0x3f, r0	; 63
     500:	cd bf       	out	0x3d, r28	; 61
	if(DEBUG_ENABLE == true)
	{
		char string[20];
		dtostrf(debugNum,10,5,string);
     502:	8e 01       	movw	r16, r28
     504:	0f 5f       	subi	r16, 0xFF	; 255
     506:	1f 4f       	sbci	r17, 0xFF	; 255
     508:	25 e0       	ldi	r18, 0x05	; 5
     50a:	4a e0       	ldi	r20, 0x0A	; 10
     50c:	6b d5       	rcall	.+2774   	; 0xfe4 <dtostrf>
		debug_print(string);
     50e:	c8 01       	movw	r24, r16
     510:	dd df       	rcall	.-70     	; 0x4cc <_Z11debug_printPKc>
	}
}
     512:	64 96       	adiw	r28, 0x14	; 20
     514:	0f b6       	in	r0, 0x3f	; 63
     516:	f8 94       	cli
     518:	de bf       	out	0x3e, r29	; 62
     51a:	0f be       	out	0x3f, r0	; 63
     51c:	cd bf       	out	0x3d, r28	; 61
     51e:	df 91       	pop	r29
     520:	cf 91       	pop	r28
     522:	1f 91       	pop	r17
     524:	0f 91       	pop	r16
     526:	08 95       	ret

00000528 <_Z10debug_beepv>:


//beep for 50ms, buzzer attached to PORTB.7 (Digital Pin 13, next to GND)
void debug_beep()
{
	sbi(PORTB,7);
     528:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     52a:	2f ef       	ldi	r18, 0xFF	; 255
     52c:	80 e7       	ldi	r24, 0x70	; 112
     52e:	92 e0       	ldi	r25, 0x02	; 2
     530:	21 50       	subi	r18, 0x01	; 1
     532:	80 40       	sbci	r24, 0x00	; 0
     534:	90 40       	sbci	r25, 0x00	; 0
     536:	e1 f7       	brne	.-8      	; 0x530 <_Z10debug_beepv+0x8>
     538:	00 c0       	rjmp	.+0      	; 0x53a <_Z10debug_beepv+0x12>
     53a:	00 00       	nop
	_delay_ms(50);
	cbi(PORTB,7);
     53c:	2f 98       	cbi	0x05, 7	; 5
     53e:	08 95       	ret

00000540 <_Z15debug_beep_longv>:
}

//beep for 250ms, buzzer attached to PORTB.7 (Digital Pin 13, next to GND)
void debug_beep_long()
{
	sbi(PORTB,7);
     540:	2f 9a       	sbi	0x05, 7	; 5
     542:	2f ef       	ldi	r18, 0xFF	; 255
     544:	84 e3       	ldi	r24, 0x34	; 52
     546:	9c e0       	ldi	r25, 0x0C	; 12
     548:	21 50       	subi	r18, 0x01	; 1
     54a:	80 40       	sbci	r24, 0x00	; 0
     54c:	90 40       	sbci	r25, 0x00	; 0
     54e:	e1 f7       	brne	.-8      	; 0x548 <_Z15debug_beep_longv+0x8>
     550:	00 c0       	rjmp	.+0      	; 0x552 <_Z15debug_beep_longv+0x12>
     552:	00 00       	nop
	_delay_ms(250);
	cbi(PORTB,7);
     554:	2f 98       	cbi	0x05, 7	; 5
     556:	08 95       	ret

00000558 <_Z24quad_output_set_throttlei>:
}

//setters for outputs
void quad_output_set_throttle(int throttle)
{
	THROTTLE_OUT = throttle;
     558:	90 93 a9 00 	sts	0x00A9, r25
     55c:	80 93 a8 00 	sts	0x00A8, r24
	throttle_out = throttle;
     560:	bc 01       	movw	r22, r24
     562:	88 27       	eor	r24, r24
     564:	77 fd       	sbrc	r23, 7
     566:	80 95       	com	r24
     568:	98 2f       	mov	r25, r24
     56a:	fc d3       	rcall	.+2040   	; 0xd64 <__floatsisf>
     56c:	60 93 74 02 	sts	0x0274, r22
     570:	70 93 75 02 	sts	0x0275, r23
     574:	80 93 76 02 	sts	0x0276, r24
     578:	90 93 77 02 	sts	0x0277, r25
     57c:	08 95       	ret

0000057e <_Z16quad_output_initv>:
#include "quad_output.h"

float throttle_out;

void quad_output_init()
{
     57e:	8f 92       	push	r8
     580:	9f 92       	push	r9
     582:	af 92       	push	r10
     584:	bf 92       	push	r11
     586:	cf 92       	push	r12
     588:	df 92       	push	r13
     58a:	ef 92       	push	r14
     58c:	ff 92       	push	r15
     58e:	0f 93       	push	r16
     590:	1f 93       	push	r17
     592:	cf 93       	push	r28
     594:	df 93       	push	r29
	DDRH = 0xFF;  //set OC4x to output
     596:	8f ef       	ldi	r24, 0xFF	; 255
     598:	80 93 01 01 	sts	0x0101, r24
	DDRE = 0xFF; //output
     59c:	8d b9       	out	0x0d, r24	; 13
	//System Clock as source
	//Mode 8: Phase and Freq. Correct PWM top=ICR1
	//OC1A output: Non-inverted
	//OC1B output: currently disabled
	//OC1C output: currently disabled
	ICR4 = (F_CPU / (SERVO_HZ*8)) - 1;
     59e:	8f e3       	ldi	r24, 0x3F	; 63
     5a0:	9c e9       	ldi	r25, 0x9C	; 156
     5a2:	90 93 a7 00 	sts	0x00A7, r25
     5a6:	80 93 a6 00 	sts	0x00A6, r24
	TCCR4A=(1<<COM4A1)|(1<<COM4B1)|(1<<COM4C1);//COM1A1 Clear OCnA when match counting up,Set on
     5aa:	38 ea       	ldi	r19, 0xA8	; 168
     5ac:	30 93 a0 00 	sts	0x00A0, r19
	TCCR4B=(1<<WGM43)|(1<<CS41);// Phase and Freq correct ICR1=Top
     5b0:	22 e1       	ldi	r18, 0x12	; 18
     5b2:	20 93 a1 00 	sts	0x00A1, r18
	
	ICR3 = (F_CPU / (SERVO_HZ*8)) - 1;
     5b6:	90 93 97 00 	sts	0x0097, r25
     5ba:	80 93 96 00 	sts	0x0096, r24
	TCCR3A=(1<<COM3A1)|(1<<COM3B1)|(1<<COM3C1);//COM1A1 Clear OCnA when match counting up,Set on
     5be:	30 93 90 00 	sts	0x0090, r19
	TCCR3B=(1<<WGM33)|(1<<CS31);// Phase and Freq correct ICR1=Top
     5c2:	20 93 91 00 	sts	0x0091, r18
		
	THROTTLE_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     5c6:	c6 eb       	ldi	r28, 0xB6	; 182
     5c8:	d3 e0       	ldi	r29, 0x03	; 3
     5ca:	d0 93 a9 00 	sts	0x00A9, r29
     5ce:	c0 93 a8 00 	sts	0x00A8, r28
	AILERON_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     5d2:	0f 2e       	mov	r0, r31
     5d4:	fa ea       	ldi	r31, 0xAA	; 170
     5d6:	8f 2e       	mov	r8, r31
     5d8:	91 2c       	mov	r9, r1
     5da:	f0 2d       	mov	r31, r0
     5dc:	f4 01       	movw	r30, r8
     5de:	d1 83       	std	Z+1, r29	; 0x01
     5e0:	c0 83       	st	Z, r28
	ELEVATOR_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     5e2:	0f 2e       	mov	r0, r31
     5e4:	fc ea       	ldi	r31, 0xAC	; 172
     5e6:	af 2e       	mov	r10, r31
     5e8:	b1 2c       	mov	r11, r1
     5ea:	f0 2d       	mov	r31, r0
     5ec:	f5 01       	movw	r30, r10
     5ee:	d1 83       	std	Z+1, r29	; 0x01
     5f0:	c0 83       	st	Z, r28
	RUDDER_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     5f2:	0f 2e       	mov	r0, r31
     5f4:	f8 e9       	ldi	r31, 0x98	; 152
     5f6:	cf 2e       	mov	r12, r31
     5f8:	d1 2c       	mov	r13, r1
     5fa:	f0 2d       	mov	r31, r0
     5fc:	f6 01       	movw	r30, r12
     5fe:	d1 83       	std	Z+1, r29	; 0x01
     600:	c0 83       	st	Z, r28
	GEAR_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     602:	0f 2e       	mov	r0, r31
     604:	fa e9       	ldi	r31, 0x9A	; 154
     606:	ef 2e       	mov	r14, r31
     608:	f1 2c       	mov	r15, r1
     60a:	f0 2d       	mov	r31, r0
     60c:	f7 01       	movw	r30, r14
     60e:	d1 83       	std	Z+1, r29	; 0x01
     610:	c0 83       	st	Z, r28
	AUX_OUT = DEFAULT_PWM_OUTPUT; //start at low value so vehicle is not armed
     612:	0c e9       	ldi	r16, 0x9C	; 156
     614:	10 e0       	ldi	r17, 0x00	; 0
     616:	f8 01       	movw	r30, r16
     618:	d1 83       	std	Z+1, r29	; 0x01
     61a:	c0 83       	st	Z, r28
	
	quad_output_set_throttle(DEFAULT_PWM_OUTPUT);
     61c:	86 eb       	ldi	r24, 0xB6	; 182
     61e:	93 e0       	ldi	r25, 0x03	; 3
     620:	9b df       	rcall	.-202    	; 0x558 <_Z24quad_output_set_throttlei>
	throttle_out = throttle;
}

void quad_output_set_aileron(int aileron)
{
	AILERON_OUT = aileron;
     622:	f4 01       	movw	r30, r8
     624:	d1 83       	std	Z+1, r29	; 0x01
     626:	c0 83       	st	Z, r28
}

void quad_output_set_elevator(int elevator)
{
	ELEVATOR_OUT = elevator;
     628:	f5 01       	movw	r30, r10
     62a:	d1 83       	std	Z+1, r29	; 0x01
     62c:	c0 83       	st	Z, r28
}

void quad_output_set_rudder(int rudder)
{
	RUDDER_OUT = rudder;
     62e:	f6 01       	movw	r30, r12
     630:	d1 83       	std	Z+1, r29	; 0x01
     632:	c0 83       	st	Z, r28
}

void quad_output_set_gear(int gear)
{
	GEAR_OUT = gear;
     634:	f7 01       	movw	r30, r14
     636:	d1 83       	std	Z+1, r29	; 0x01
     638:	c0 83       	st	Z, r28
}

void quad_output_set_aux(int aux)
{
	AUX_OUT = aux;
     63a:	f8 01       	movw	r30, r16
     63c:	d1 83       	std	Z+1, r29	; 0x01
     63e:	c0 83       	st	Z, r28
	quad_output_set_aileron(DEFAULT_PWM_OUTPUT);
	quad_output_set_elevator(DEFAULT_PWM_OUTPUT);
	quad_output_set_rudder(DEFAULT_PWM_OUTPUT);
	quad_output_set_gear(DEFAULT_PWM_OUTPUT);
	quad_output_set_aux(DEFAULT_PWM_OUTPUT);
}
     640:	df 91       	pop	r29
     642:	cf 91       	pop	r28
     644:	1f 91       	pop	r17
     646:	0f 91       	pop	r16
     648:	ff 90       	pop	r15
     64a:	ef 90       	pop	r14
     64c:	df 90       	pop	r13
     64e:	cf 90       	pop	r12
     650:	bf 90       	pop	r11
     652:	af 90       	pop	r10
     654:	9f 90       	pop	r9
     656:	8f 90       	pop	r8
     658:	08 95       	ret

0000065a <__vector_9>:

volatile uint8_t portHistory = 0x00;     // default is low

//Pin Change Interrupt for reading Channel Values
ISR(PCINT0_vect)
{
     65a:	1f 92       	push	r1
     65c:	0f 92       	push	r0
     65e:	0f b6       	in	r0, 0x3f	; 63
     660:	0f 92       	push	r0
     662:	11 24       	eor	r1, r1
     664:	0b b6       	in	r0, 0x3b	; 59
     666:	0f 92       	push	r0
     668:	2f 93       	push	r18
     66a:	3f 93       	push	r19
     66c:	4f 93       	push	r20
     66e:	5f 93       	push	r21
     670:	6f 93       	push	r22
     672:	7f 93       	push	r23
     674:	8f 93       	push	r24
     676:	9f 93       	push	r25
     678:	af 93       	push	r26
     67a:	bf 93       	push	r27
     67c:	cf 93       	push	r28
     67e:	ef 93       	push	r30
     680:	ff 93       	push	r31
	uint8_t changedBits;
	
	//determine which pin on RX_PORT changed:
	changedBits = RX_PORT ^ portHistory;
     682:	83 b1       	in	r24, 0x03	; 3
     684:	c0 91 78 02 	lds	r28, 0x0278
     688:	c8 27       	eor	r28, r24
	portHistory = RX_PORT;
     68a:	83 b1       	in	r24, 0x03	; 3
     68c:	80 93 78 02 	sts	0x0278, r24
	
	
	//Now, operate for that pin:
	
	if(changedBits & (1 << THROTTLE_IN_PIN))	//if the pin assigned to throttle has changed (high->low or low->high)
     690:	c0 ff       	sbrs	r28, 0
     692:	1c c0       	rjmp	.+56     	; 0x6cc <__vector_9+0x72>
	{
		if(RX_PORT & (1<<THROTTLE_IN_PIN))	//if the pin is high
     694:	18 9b       	sbis	0x03, 0	; 3
     696:	0a c0       	rjmp	.+20     	; 0x6ac <__vector_9+0x52>
		{
			ulThrottleStart = micros();	//note the current time
     698:	2a d1       	rcall	.+596    	; 0x8ee <_Z6microsv>
     69a:	60 93 8d 02 	sts	0x028D, r22
     69e:	70 93 8e 02 	sts	0x028E, r23
     6a2:	80 93 8f 02 	sts	0x028F, r24
     6a6:	90 93 90 02 	sts	0x0290, r25
     6aa:	10 c0       	rjmp	.+32     	; 0x6cc <__vector_9+0x72>
		}
		else	//if the pin has gone low
		{
			unThrottleInShared = (uint16_t)(micros()-ulThrottleStart);		//we are interested in how long it was high for
     6ac:	20 d1       	rcall	.+576    	; 0x8ee <_Z6microsv>
     6ae:	20 91 8d 02 	lds	r18, 0x028D
     6b2:	30 91 8e 02 	lds	r19, 0x028E
     6b6:	62 1b       	sub	r22, r18
     6b8:	73 0b       	sbc	r23, r19
     6ba:	70 93 9d 02 	sts	0x029D, r23
     6be:	60 93 9c 02 	sts	0x029C, r22
			rxUpdateFlagsShared |= THROTTLE_FLAG;		//and we need to let our code know that there is new data for the throttle
     6c2:	80 91 91 02 	lds	r24, 0x0291
     6c6:	81 60       	ori	r24, 0x01	; 1
     6c8:	80 93 91 02 	sts	0x0291, r24
		}
	}
	
	if(changedBits & (1 << AILERON_IN_PIN))
     6cc:	c1 ff       	sbrs	r28, 1
     6ce:	1c c0       	rjmp	.+56     	; 0x708 <__vector_9+0xae>
	{
		if(RX_PORT & (1<<AILERON_IN_PIN))
     6d0:	19 9b       	sbis	0x03, 1	; 3
     6d2:	0a c0       	rjmp	.+20     	; 0x6e8 <__vector_9+0x8e>
		{
			ulAileronStart = micros();
     6d4:	0c d1       	rcall	.+536    	; 0x8ee <_Z6microsv>
     6d6:	60 93 89 02 	sts	0x0289, r22
     6da:	70 93 8a 02 	sts	0x028A, r23
     6de:	80 93 8b 02 	sts	0x028B, r24
     6e2:	90 93 8c 02 	sts	0x028C, r25
     6e6:	10 c0       	rjmp	.+32     	; 0x708 <__vector_9+0xae>
		}
		else
		{
			unAileronInShared = (uint16_t)(micros()-ulAileronStart);
     6e8:	02 d1       	rcall	.+516    	; 0x8ee <_Z6microsv>
     6ea:	20 91 89 02 	lds	r18, 0x0289
     6ee:	30 91 8a 02 	lds	r19, 0x028A
     6f2:	62 1b       	sub	r22, r18
     6f4:	73 0b       	sbc	r23, r19
     6f6:	70 93 9b 02 	sts	0x029B, r23
     6fa:	60 93 9a 02 	sts	0x029A, r22
			rxUpdateFlagsShared |= AILERON_FLAG;
     6fe:	80 91 91 02 	lds	r24, 0x0291
     702:	82 60       	ori	r24, 0x02	; 2
     704:	80 93 91 02 	sts	0x0291, r24
		}
	}
	
	if(changedBits & (1 << ELEVATOR_IN_PIN))
     708:	c2 ff       	sbrs	r28, 2
     70a:	1c c0       	rjmp	.+56     	; 0x744 <__vector_9+0xea>
	{
		if(RX_PORT & (1<<ELEVATOR_IN_PIN))
     70c:	1a 9b       	sbis	0x03, 2	; 3
     70e:	0a c0       	rjmp	.+20     	; 0x724 <__vector_9+0xca>
		{
			ulElevatorStart = micros();
     710:	ee d0       	rcall	.+476    	; 0x8ee <_Z6microsv>
     712:	60 93 85 02 	sts	0x0285, r22
     716:	70 93 86 02 	sts	0x0286, r23
     71a:	80 93 87 02 	sts	0x0287, r24
     71e:	90 93 88 02 	sts	0x0288, r25
     722:	10 c0       	rjmp	.+32     	; 0x744 <__vector_9+0xea>
		}
		else
		{
			unElevatorInShared = (uint16_t)(micros()-ulElevatorStart);
     724:	e4 d0       	rcall	.+456    	; 0x8ee <_Z6microsv>
     726:	20 91 85 02 	lds	r18, 0x0285
     72a:	30 91 86 02 	lds	r19, 0x0286
     72e:	62 1b       	sub	r22, r18
     730:	73 0b       	sbc	r23, r19
     732:	70 93 99 02 	sts	0x0299, r23
     736:	60 93 98 02 	sts	0x0298, r22
			rxUpdateFlagsShared |= ELEVATOR_FLAG;
     73a:	80 91 91 02 	lds	r24, 0x0291
     73e:	84 60       	ori	r24, 0x04	; 4
     740:	80 93 91 02 	sts	0x0291, r24
		}
	}
	
	if(changedBits & (1 << RUDDER_IN_PIN))
     744:	c3 ff       	sbrs	r28, 3
     746:	1c c0       	rjmp	.+56     	; 0x780 <__vector_9+0x126>
	{
		if(RX_PORT & (1<<RUDDER_IN_PIN))
     748:	1b 9b       	sbis	0x03, 3	; 3
     74a:	0a c0       	rjmp	.+20     	; 0x760 <__vector_9+0x106>
		{
			ulRudderStart = micros();
     74c:	d0 d0       	rcall	.+416    	; 0x8ee <_Z6microsv>
     74e:	60 93 81 02 	sts	0x0281, r22
     752:	70 93 82 02 	sts	0x0282, r23
     756:	80 93 83 02 	sts	0x0283, r24
     75a:	90 93 84 02 	sts	0x0284, r25
     75e:	10 c0       	rjmp	.+32     	; 0x780 <__vector_9+0x126>
		}
		else
		{
			unRudderInShared = (uint16_t)(micros()-ulRudderStart);
     760:	c6 d0       	rcall	.+396    	; 0x8ee <_Z6microsv>
     762:	20 91 81 02 	lds	r18, 0x0281
     766:	30 91 82 02 	lds	r19, 0x0282
     76a:	62 1b       	sub	r22, r18
     76c:	73 0b       	sbc	r23, r19
     76e:	70 93 97 02 	sts	0x0297, r23
     772:	60 93 96 02 	sts	0x0296, r22
			rxUpdateFlagsShared |= RUDDER_FLAG;
     776:	80 91 91 02 	lds	r24, 0x0291
     77a:	88 60       	ori	r24, 0x08	; 8
     77c:	80 93 91 02 	sts	0x0291, r24
		}
	}
	
	if(changedBits & (1 << GEAR_IN_PIN))
     780:	c4 ff       	sbrs	r28, 4
     782:	1c c0       	rjmp	.+56     	; 0x7bc <__vector_9+0x162>
	{
		if(RX_PORT & (1<<GEAR_IN_PIN))
     784:	1c 9b       	sbis	0x03, 4	; 3
     786:	0a c0       	rjmp	.+20     	; 0x79c <__vector_9+0x142>
		{
			ulGearStart = micros();
     788:	b2 d0       	rcall	.+356    	; 0x8ee <_Z6microsv>
     78a:	60 93 7d 02 	sts	0x027D, r22
     78e:	70 93 7e 02 	sts	0x027E, r23
     792:	80 93 7f 02 	sts	0x027F, r24
     796:	90 93 80 02 	sts	0x0280, r25
     79a:	10 c0       	rjmp	.+32     	; 0x7bc <__vector_9+0x162>
		}
		else
		{
			unGearInShared = (uint16_t)(micros()-ulGearStart);
     79c:	a8 d0       	rcall	.+336    	; 0x8ee <_Z6microsv>
     79e:	20 91 7d 02 	lds	r18, 0x027D
     7a2:	30 91 7e 02 	lds	r19, 0x027E
     7a6:	62 1b       	sub	r22, r18
     7a8:	73 0b       	sbc	r23, r19
     7aa:	70 93 95 02 	sts	0x0295, r23
     7ae:	60 93 94 02 	sts	0x0294, r22
			rxUpdateFlagsShared |= GEAR_FLAG;
     7b2:	80 91 91 02 	lds	r24, 0x0291
     7b6:	80 61       	ori	r24, 0x10	; 16
     7b8:	80 93 91 02 	sts	0x0291, r24
		}
	}
	
	if(changedBits & (1 << AUX_IN_PIN))
     7bc:	c5 ff       	sbrs	r28, 5
     7be:	1c c0       	rjmp	.+56     	; 0x7f8 <__vector_9+0x19e>
	{
		if(RX_PORT & (1<<AUX_IN_PIN))
     7c0:	1d 9b       	sbis	0x03, 5	; 3
     7c2:	0a c0       	rjmp	.+20     	; 0x7d8 <__vector_9+0x17e>
		{
			ulAuxStart = micros();
     7c4:	94 d0       	rcall	.+296    	; 0x8ee <_Z6microsv>
     7c6:	60 93 79 02 	sts	0x0279, r22
     7ca:	70 93 7a 02 	sts	0x027A, r23
     7ce:	80 93 7b 02 	sts	0x027B, r24
     7d2:	90 93 7c 02 	sts	0x027C, r25
     7d6:	10 c0       	rjmp	.+32     	; 0x7f8 <__vector_9+0x19e>
		}
		else
		{
			unAuxInShared = (uint16_t)(micros()-ulAuxStart);
     7d8:	8a d0       	rcall	.+276    	; 0x8ee <_Z6microsv>
     7da:	20 91 79 02 	lds	r18, 0x0279
     7de:	30 91 7a 02 	lds	r19, 0x027A
     7e2:	62 1b       	sub	r22, r18
     7e4:	73 0b       	sbc	r23, r19
     7e6:	70 93 93 02 	sts	0x0293, r23
     7ea:	60 93 92 02 	sts	0x0292, r22
			rxUpdateFlagsShared |= AUX_FLAG;
     7ee:	80 91 91 02 	lds	r24, 0x0291
     7f2:	80 62       	ori	r24, 0x20	; 32
     7f4:	80 93 91 02 	sts	0x0291, r24
		}
	}
}
     7f8:	ff 91       	pop	r31
     7fa:	ef 91       	pop	r30
     7fc:	cf 91       	pop	r28
     7fe:	bf 91       	pop	r27
     800:	af 91       	pop	r26
     802:	9f 91       	pop	r25
     804:	8f 91       	pop	r24
     806:	7f 91       	pop	r23
     808:	6f 91       	pop	r22
     80a:	5f 91       	pop	r21
     80c:	4f 91       	pop	r20
     80e:	3f 91       	pop	r19
     810:	2f 91       	pop	r18
     812:	0f 90       	pop	r0
     814:	0b be       	out	0x3b, r0	; 59
     816:	0f 90       	pop	r0
     818:	0f be       	out	0x3f, r0	; 63
     81a:	0f 90       	pop	r0
     81c:	1f 90       	pop	r1
     81e:	18 95       	reti

00000820 <_Z7rx_initv>:

void rx_init()
{
	DDRB = 0x00;
     820:	14 b8       	out	0x04, r1	; 4
	sbi(DDRB,7);
     822:	27 9a       	sbi	0x04, 7	; 4
	//Enable pin change interrupts
	PCMSK0 |= (1<<PCINT0);	//enable PCINT0
     824:	eb e6       	ldi	r30, 0x6B	; 107
     826:	f0 e0       	ldi	r31, 0x00	; 0
     828:	80 81       	ld	r24, Z
     82a:	81 60       	ori	r24, 0x01	; 1
     82c:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT1);	//enable PCINT1
     82e:	80 81       	ld	r24, Z
     830:	82 60       	ori	r24, 0x02	; 2
     832:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT2);	//enable PCINT2
     834:	80 81       	ld	r24, Z
     836:	84 60       	ori	r24, 0x04	; 4
     838:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT3);	//enable PCINT3
     83a:	80 81       	ld	r24, Z
     83c:	88 60       	ori	r24, 0x08	; 8
     83e:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT4);	//enable PCINT4
     840:	80 81       	ld	r24, Z
     842:	80 61       	ori	r24, 0x10	; 16
     844:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT5);	//enable PCINT5
     846:	80 81       	ld	r24, Z
     848:	80 62       	ori	r24, 0x20	; 32
     84a:	80 83       	st	Z, r24
	PCICR |= (1<<PCIE0);	//enable pin change interrupts 0:7
     84c:	e8 e6       	ldi	r30, 0x68	; 104
     84e:	f0 e0       	ldi	r31, 0x00	; 0
     850:	80 81       	ld	r24, Z
     852:	81 60       	ori	r24, 0x01	; 1
     854:	80 83       	st	Z, r24
	sei(); //enable interrupts
     856:	78 94       	sei
     858:	08 95       	ret

0000085a <__vector_23>:
	m = timer0_millis;
	SREG = oldSREG;
	sei();

	return m;
}
     85a:	1f 92       	push	r1
     85c:	0f 92       	push	r0
     85e:	0f b6       	in	r0, 0x3f	; 63
     860:	0f 92       	push	r0
     862:	11 24       	eor	r1, r1
     864:	2f 93       	push	r18
     866:	3f 93       	push	r19
     868:	8f 93       	push	r24
     86a:	9f 93       	push	r25
     86c:	af 93       	push	r26
     86e:	bf 93       	push	r27
     870:	80 91 9f 02 	lds	r24, 0x029F
     874:	90 91 a0 02 	lds	r25, 0x02A0
     878:	a0 91 a1 02 	lds	r26, 0x02A1
     87c:	b0 91 a2 02 	lds	r27, 0x02A2
     880:	30 91 9e 02 	lds	r19, 0x029E
     884:	23 e0       	ldi	r18, 0x03	; 3
     886:	23 0f       	add	r18, r19
     888:	2d 37       	cpi	r18, 0x7D	; 125
     88a:	20 f4       	brcc	.+8      	; 0x894 <__vector_23+0x3a>
     88c:	01 96       	adiw	r24, 0x01	; 1
     88e:	a1 1d       	adc	r26, r1
     890:	b1 1d       	adc	r27, r1
     892:	05 c0       	rjmp	.+10     	; 0x89e <__vector_23+0x44>
     894:	26 e8       	ldi	r18, 0x86	; 134
     896:	23 0f       	add	r18, r19
     898:	02 96       	adiw	r24, 0x02	; 2
     89a:	a1 1d       	adc	r26, r1
     89c:	b1 1d       	adc	r27, r1
     89e:	20 93 9e 02 	sts	0x029E, r18
     8a2:	80 93 9f 02 	sts	0x029F, r24
     8a6:	90 93 a0 02 	sts	0x02A0, r25
     8aa:	a0 93 a1 02 	sts	0x02A1, r26
     8ae:	b0 93 a2 02 	sts	0x02A2, r27
     8b2:	80 91 a3 02 	lds	r24, 0x02A3
     8b6:	90 91 a4 02 	lds	r25, 0x02A4
     8ba:	a0 91 a5 02 	lds	r26, 0x02A5
     8be:	b0 91 a6 02 	lds	r27, 0x02A6
     8c2:	01 96       	adiw	r24, 0x01	; 1
     8c4:	a1 1d       	adc	r26, r1
     8c6:	b1 1d       	adc	r27, r1
     8c8:	80 93 a3 02 	sts	0x02A3, r24
     8cc:	90 93 a4 02 	sts	0x02A4, r25
     8d0:	a0 93 a5 02 	sts	0x02A5, r26
     8d4:	b0 93 a6 02 	sts	0x02A6, r27
     8d8:	bf 91       	pop	r27
     8da:	af 91       	pop	r26
     8dc:	9f 91       	pop	r25
     8de:	8f 91       	pop	r24
     8e0:	3f 91       	pop	r19
     8e2:	2f 91       	pop	r18
     8e4:	0f 90       	pop	r0
     8e6:	0f be       	out	0x3f, r0	; 63
     8e8:	0f 90       	pop	r0
     8ea:	1f 90       	pop	r1
     8ec:	18 95       	reti

000008ee <_Z6microsv>:

long  micros() {

	unsigned long m;
	uint8_t oldSREG = SREG, t;
     8ee:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
     8f0:	f8 94       	cli
	m = timer0_overflow_count;
     8f2:	80 91 a3 02 	lds	r24, 0x02A3
     8f6:	90 91 a4 02 	lds	r25, 0x02A4
     8fa:	a0 91 a5 02 	lds	r26, 0x02A5
     8fe:	b0 91 a6 02 	lds	r27, 0x02A6
	t = TCNT0;
     902:	26 b5       	in	r18, 0x26	; 38
  
#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
     904:	a8 9b       	sbis	0x15, 0	; 21
     906:	02 c0       	rjmp	.+4      	; 0x90c <_Z6microsv+0x1e>
     908:	2f 3f       	cpi	r18, 0xFF	; 255
     90a:	a9 f4       	brne	.+42     	; 0x936 <_Z6microsv+0x48>
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
     90c:	3f bf       	out	0x3f, r19	; 63
	
	sei();
     90e:	78 94       	sei
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
     910:	ba 2f       	mov	r27, r26
     912:	a9 2f       	mov	r26, r25
     914:	98 2f       	mov	r25, r24
     916:	88 27       	eor	r24, r24
     918:	82 0f       	add	r24, r18
     91a:	91 1d       	adc	r25, r1
     91c:	a1 1d       	adc	r26, r1
     91e:	b1 1d       	adc	r27, r1
     920:	bc 01       	movw	r22, r24
     922:	cd 01       	movw	r24, r26
     924:	66 0f       	add	r22, r22
     926:	77 1f       	adc	r23, r23
     928:	88 1f       	adc	r24, r24
     92a:	99 1f       	adc	r25, r25
     92c:	66 0f       	add	r22, r22
     92e:	77 1f       	adc	r23, r23
     930:	88 1f       	adc	r24, r24
     932:	99 1f       	adc	r25, r25
     934:	08 95       	ret
	m = timer0_overflow_count;
	t = TCNT0;
  
#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
		m++;
     936:	01 96       	adiw	r24, 0x01	; 1
     938:	a1 1d       	adc	r26, r1
     93a:	b1 1d       	adc	r27, r1
     93c:	e7 cf       	rjmp	.-50     	; 0x90c <_Z6microsv+0x1e>

0000093e <_Z10initTimersv>:


void initTimers()
{
	// enable timer overflow interrupt for Timer0
	TIMSK0=(1<<TOIE0);
     93e:	81 e0       	ldi	r24, 0x01	; 1
     940:	80 93 6e 00 	sts	0x006E, r24
	
	//set timer to zero
	TCNT0=0x00;
     944:	16 bc       	out	0x26, r1	; 38

	// start timer0 with /1024 prescaler
	TCCR0B = (1<<CS01) | (1<<CS00);
     946:	83 e0       	ldi	r24, 0x03	; 3
     948:	85 bd       	out	0x25, r24	; 37
     94a:	08 95       	ret

0000094c <_Z10USART_initii>:
	{
		while(!(UCSR3A & (1<<RXC3)));
		return UDR3;
	}
	
}
     94c:	cf 93       	push	r28
     94e:	df 93       	push	r29
     950:	ec 01       	movw	r28, r24
     952:	cb 01       	movw	r24, r22
     954:	aa 27       	eor	r26, r26
     956:	97 fd       	sbrc	r25, 7
     958:	a0 95       	com	r26
     95a:	ba 2f       	mov	r27, r26
     95c:	88 0f       	add	r24, r24
     95e:	99 1f       	adc	r25, r25
     960:	aa 1f       	adc	r26, r26
     962:	bb 1f       	adc	r27, r27
     964:	88 0f       	add	r24, r24
     966:	99 1f       	adc	r25, r25
     968:	aa 1f       	adc	r26, r26
     96a:	bb 1f       	adc	r27, r27
     96c:	9c 01       	movw	r18, r24
     96e:	ad 01       	movw	r20, r26
     970:	22 0f       	add	r18, r18
     972:	33 1f       	adc	r19, r19
     974:	44 1f       	adc	r20, r20
     976:	55 1f       	adc	r21, r21
     978:	22 0f       	add	r18, r18
     97a:	33 1f       	adc	r19, r19
     97c:	44 1f       	adc	r20, r20
     97e:	55 1f       	adc	r21, r21
     980:	60 e0       	ldi	r22, 0x00	; 0
     982:	74 e2       	ldi	r23, 0x24	; 36
     984:	84 ef       	ldi	r24, 0xF4	; 244
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	0b d3       	rcall	.+1558   	; 0xfa0 <__udivmodsi4>
     98a:	21 50       	subi	r18, 0x01	; 1
     98c:	31 09       	sbc	r19, r1
     98e:	20 97       	sbiw	r28, 0x00	; 0
     990:	59 f4       	brne	.+22     	; 0x9a8 <_Z10USART_initii+0x5c>
     992:	30 93 c5 00 	sts	0x00C5, r19
     996:	20 93 c4 00 	sts	0x00C4, r18
     99a:	88 e1       	ldi	r24, 0x18	; 24
     99c:	80 93 c1 00 	sts	0x00C1, r24
     9a0:	86 e0       	ldi	r24, 0x06	; 6
     9a2:	80 93 c2 00 	sts	0x00C2, r24
     9a6:	28 c0       	rjmp	.+80     	; 0x9f8 <_Z10USART_initii+0xac>
     9a8:	c1 30       	cpi	r28, 0x01	; 1
     9aa:	d1 05       	cpc	r29, r1
     9ac:	59 f4       	brne	.+22     	; 0x9c4 <_Z10USART_initii+0x78>
     9ae:	30 93 cd 00 	sts	0x00CD, r19
     9b2:	20 93 cc 00 	sts	0x00CC, r18
     9b6:	88 e1       	ldi	r24, 0x18	; 24
     9b8:	80 93 c9 00 	sts	0x00C9, r24
     9bc:	86 e0       	ldi	r24, 0x06	; 6
     9be:	80 93 ca 00 	sts	0x00CA, r24
     9c2:	1a c0       	rjmp	.+52     	; 0x9f8 <_Z10USART_initii+0xac>
     9c4:	c2 30       	cpi	r28, 0x02	; 2
     9c6:	d1 05       	cpc	r29, r1
     9c8:	59 f4       	brne	.+22     	; 0x9e0 <_Z10USART_initii+0x94>
     9ca:	30 93 d5 00 	sts	0x00D5, r19
     9ce:	20 93 d4 00 	sts	0x00D4, r18
     9d2:	88 e1       	ldi	r24, 0x18	; 24
     9d4:	80 93 d1 00 	sts	0x00D1, r24
     9d8:	86 e0       	ldi	r24, 0x06	; 6
     9da:	80 93 d2 00 	sts	0x00D2, r24
     9de:	0c c0       	rjmp	.+24     	; 0x9f8 <_Z10USART_initii+0xac>
     9e0:	23 97       	sbiw	r28, 0x03	; 3
     9e2:	51 f4       	brne	.+20     	; 0x9f8 <_Z10USART_initii+0xac>
     9e4:	30 93 35 01 	sts	0x0135, r19
     9e8:	20 93 34 01 	sts	0x0134, r18
     9ec:	88 e1       	ldi	r24, 0x18	; 24
     9ee:	80 93 31 01 	sts	0x0131, r24
     9f2:	86 e0       	ldi	r24, 0x06	; 6
     9f4:	80 93 32 01 	sts	0x0132, r24
     9f8:	df 91       	pop	r29
     9fa:	cf 91       	pop	r28
     9fc:	08 95       	ret

000009fe <_Z10USART_sendih>:
     9fe:	00 97       	sbiw	r24, 0x00	; 0
     a00:	41 f4       	brne	.+16     	; 0xa12 <_Z10USART_sendih+0x14>
     a02:	e0 ec       	ldi	r30, 0xC0	; 192
     a04:	f0 e0       	ldi	r31, 0x00	; 0
     a06:	80 81       	ld	r24, Z
     a08:	85 ff       	sbrs	r24, 5
     a0a:	fd cf       	rjmp	.-6      	; 0xa06 <_Z10USART_sendih+0x8>
     a0c:	60 93 c6 00 	sts	0x00C6, r22
     a10:	08 95       	ret
     a12:	81 30       	cpi	r24, 0x01	; 1
     a14:	91 05       	cpc	r25, r1
     a16:	41 f4       	brne	.+16     	; 0xa28 <_Z10USART_sendih+0x2a>
     a18:	e8 ec       	ldi	r30, 0xC8	; 200
     a1a:	f0 e0       	ldi	r31, 0x00	; 0
     a1c:	80 81       	ld	r24, Z
     a1e:	85 ff       	sbrs	r24, 5
     a20:	fd cf       	rjmp	.-6      	; 0xa1c <_Z10USART_sendih+0x1e>
     a22:	60 93 ce 00 	sts	0x00CE, r22
     a26:	08 95       	ret
     a28:	82 30       	cpi	r24, 0x02	; 2
     a2a:	91 05       	cpc	r25, r1
     a2c:	41 f4       	brne	.+16     	; 0xa3e <_Z10USART_sendih+0x40>
     a2e:	e0 ed       	ldi	r30, 0xD0	; 208
     a30:	f0 e0       	ldi	r31, 0x00	; 0
     a32:	80 81       	ld	r24, Z
     a34:	85 ff       	sbrs	r24, 5
     a36:	fd cf       	rjmp	.-6      	; 0xa32 <_Z10USART_sendih+0x34>
     a38:	60 93 d6 00 	sts	0x00D6, r22
     a3c:	08 95       	ret
     a3e:	03 97       	sbiw	r24, 0x03	; 3
     a40:	39 f4       	brne	.+14     	; 0xa50 <_Z10USART_sendih+0x52>
     a42:	e0 e3       	ldi	r30, 0x30	; 48
     a44:	f1 e0       	ldi	r31, 0x01	; 1
     a46:	80 81       	ld	r24, Z
     a48:	85 ff       	sbrs	r24, 5
     a4a:	fd cf       	rjmp	.-6      	; 0xa46 <_Z10USART_sendih+0x48>
     a4c:	60 93 36 01 	sts	0x0136, r22
     a50:	08 95       	ret

00000a52 <_Z15USART_putstringiPKc>:

	//return the received string
	return(string);
}*/

void USART_putstring(int usartNum, const char* StringPtr){
     a52:	0f 93       	push	r16
     a54:	1f 93       	push	r17
     a56:	cf 93       	push	r28
     a58:	df 93       	push	r29
     a5a:	8c 01       	movw	r16, r24
     a5c:	eb 01       	movw	r28, r22
	
	while(*StringPtr != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
     a5e:	68 81       	ld	r22, Y
     a60:	66 23       	and	r22, r22
     a62:	31 f0       	breq	.+12     	; 0xa70 <_Z15USART_putstringiPKc+0x1e>
     a64:	21 96       	adiw	r28, 0x01	; 1
		USART_send(usartNum, *StringPtr);    //Using the simple send function we send one char at a time
     a66:	c8 01       	movw	r24, r16
     a68:	ca df       	rcall	.-108    	; 0x9fe <_Z10USART_sendih>
	return(string);
}*/

void USART_putstring(int usartNum, const char* StringPtr){
	
	while(*StringPtr != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
     a6a:	69 91       	ld	r22, Y+
     a6c:	61 11       	cpse	r22, r1
     a6e:	fb cf       	rjmp	.-10     	; 0xa66 <_Z15USART_putstringiPKc+0x14>
		USART_send(usartNum, *StringPtr);    //Using the simple send function we send one char at a time
	StringPtr++;}        //We increment the pointer so we can read the next char
	
}
     a70:	df 91       	pop	r29
     a72:	cf 91       	pop	r28
     a74:	1f 91       	pop	r17
     a76:	0f 91       	pop	r16
     a78:	08 95       	ret

00000a7a <_Z10initialisev>:

bool initialise()
{
	bool success = true;
	
	USART_init(USART_PC,9600);
     a7a:	60 e8       	ldi	r22, 0x80	; 128
     a7c:	75 e2       	ldi	r23, 0x25	; 37
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	64 df       	rcall	.-312    	; 0x94c <_Z10USART_initii>
	initTimers();
     a84:	5c df       	rcall	.-328    	; 0x93e <_Z10initTimersv>
	rx_init();
     a86:	cc de       	rcall	.-616    	; 0x820 <_Z7rx_initv>
	/*
	if(altimeter_init()==false)
		success=false;
		*/

	quad_output_init();
     a88:	7a dd       	rcall	.-1292   	; 0x57e <_Z16quad_output_initv>
			_delay_ms(200);
		}
	}
	*/
	
	i2c_init();
     a8a:	e9 db       	rcall	.-2094   	; 0x25e <i2c_init>
	
	init_HMC5883L();
     a8c:	47 dc       	rcall	.-1906   	; 0x31c <_Z13init_HMC5883Lv>
	
	debug_println("Initialization succeeded!");
     a8e:	83 e5       	ldi	r24, 0x53	; 83
     a90:	92 e0       	ldi	r25, 0x02	; 2
     a92:	21 dd       	rcall	.-1470   	; 0x4d6 <_Z13debug_printlnPKc>
	
	//beep some pattern I can recognize
	debug_beep_long();
     a94:	55 dd       	rcall	.-1366   	; 0x540 <_Z15debug_beep_longv>
     a96:	2f ef       	ldi	r18, 0xFF	; 255
     a98:	84 e3       	ldi	r24, 0x34	; 52
     a9a:	9c e0       	ldi	r25, 0x0C	; 12
     a9c:	21 50       	subi	r18, 0x01	; 1
     a9e:	80 40       	sbci	r24, 0x00	; 0
     aa0:	90 40       	sbci	r25, 0x00	; 0
     aa2:	e1 f7       	brne	.-8      	; 0xa9c <_Z10initialisev+0x22>
     aa4:	00 c0       	rjmp	.+0      	; 0xaa6 <_Z10initialisev+0x2c>
     aa6:	00 00       	nop
	_delay_ms(250);
	debug_beep();
     aa8:	3f dd       	rcall	.-1410   	; 0x528 <_Z10debug_beepv>
     aaa:	2f ef       	ldi	r18, 0xFF	; 255
     aac:	84 e3       	ldi	r24, 0x34	; 52
     aae:	9c e0       	ldi	r25, 0x0C	; 12
     ab0:	21 50       	subi	r18, 0x01	; 1
     ab2:	80 40       	sbci	r24, 0x00	; 0
     ab4:	90 40       	sbci	r25, 0x00	; 0
     ab6:	e1 f7       	brne	.-8      	; 0xab0 <_Z10initialisev+0x36>
     ab8:	00 c0       	rjmp	.+0      	; 0xaba <_Z10initialisev+0x40>
     aba:	00 00       	nop
	_delay_ms(250);
	debug_beep();
     abc:	35 dd       	rcall	.-1430   	; 0x528 <_Z10debug_beepv>
     abe:	2f ef       	ldi	r18, 0xFF	; 255
     ac0:	84 e3       	ldi	r24, 0x34	; 52
     ac2:	9c e0       	ldi	r25, 0x0C	; 12
     ac4:	21 50       	subi	r18, 0x01	; 1
     ac6:	80 40       	sbci	r24, 0x00	; 0
     ac8:	90 40       	sbci	r25, 0x00	; 0
     aca:	e1 f7       	brne	.-8      	; 0xac4 <_Z10initialisev+0x4a>
     acc:	00 c0       	rjmp	.+0      	; 0xace <_Z10initialisev+0x54>
     ace:	00 00       	nop
	_delay_ms(250);
	debug_beep();
     ad0:	2b dd       	rcall	.-1450   	; 0x528 <_Z10debug_beepv>
     ad2:	2f ef       	ldi	r18, 0xFF	; 255
     ad4:	84 e3       	ldi	r24, 0x34	; 52
     ad6:	9c e0       	ldi	r25, 0x0C	; 12
     ad8:	21 50       	subi	r18, 0x01	; 1
     ada:	80 40       	sbci	r24, 0x00	; 0
     adc:	90 40       	sbci	r25, 0x00	; 0
     ade:	e1 f7       	brne	.-8      	; 0xad8 <_Z10initialisev+0x5e>
     ae0:	00 c0       	rjmp	.+0      	; 0xae2 <_Z10initialisev+0x68>
     ae2:	00 00       	nop
	_delay_ms(250);
	debug_beep_long();
     ae4:	2d dd       	rcall	.-1446   	; 0x540 <_Z15debug_beep_longv>
	
	return success;
}
     ae6:	81 e0       	ldi	r24, 0x01	; 1
     ae8:	08 95       	ret

00000aea <main>:

bool initialise();

int main(void)
{
	initialise();
     aea:	c7 df       	rcall	.-114    	; 0xa7a <_Z10initialisev>
     aec:	2f ef       	ldi	r18, 0xFF	; 255
     aee:	89 e6       	ldi	r24, 0x69	; 105
     af0:	98 e1       	ldi	r25, 0x18	; 24
     af2:	21 50       	subi	r18, 0x01	; 1
     af4:	80 40       	sbci	r24, 0x00	; 0
     af6:	90 40       	sbci	r25, 0x00	; 0
     af8:	e1 f7       	brne	.-8      	; 0xaf2 <main+0x8>
     afa:	00 c0       	rjmp	.+0      	; 0xafc <main+0x12>
     afc:	00 00       	nop
	while(1)
	{
		//rx_update();
		_delay_ms(500);
		//debug_printf(getHeading());
		getHeading();
     afe:	24 dc       	rcall	.-1976   	; 0x348 <_Z10getHeadingv>
     b00:	f5 cf       	rjmp	.-22     	; 0xaec <main+0x2>

00000b02 <__subsf3>:
     b02:	50 58       	subi	r21, 0x80	; 128

00000b04 <__addsf3>:
     b04:	bb 27       	eor	r27, r27
     b06:	aa 27       	eor	r26, r26
     b08:	0e d0       	rcall	.+28     	; 0xb26 <__addsf3x>
     b0a:	a3 c1       	rjmp	.+838    	; 0xe52 <__fp_round>
     b0c:	94 d1       	rcall	.+808    	; 0xe36 <__fp_pscA>
     b0e:	30 f0       	brcs	.+12     	; 0xb1c <__addsf3+0x18>
     b10:	99 d1       	rcall	.+818    	; 0xe44 <__fp_pscB>
     b12:	20 f0       	brcs	.+8      	; 0xb1c <__addsf3+0x18>
     b14:	31 f4       	brne	.+12     	; 0xb22 <__addsf3+0x1e>
     b16:	9f 3f       	cpi	r25, 0xFF	; 255
     b18:	11 f4       	brne	.+4      	; 0xb1e <__addsf3+0x1a>
     b1a:	1e f4       	brtc	.+6      	; 0xb22 <__addsf3+0x1e>
     b1c:	64 c1       	rjmp	.+712    	; 0xde6 <__fp_nan>
     b1e:	0e f4       	brtc	.+2      	; 0xb22 <__addsf3+0x1e>
     b20:	e0 95       	com	r30
     b22:	e7 fb       	bst	r30, 7
     b24:	5a c1       	rjmp	.+692    	; 0xdda <__fp_inf>

00000b26 <__addsf3x>:
     b26:	e9 2f       	mov	r30, r25
     b28:	a5 d1       	rcall	.+842    	; 0xe74 <__fp_split3>
     b2a:	80 f3       	brcs	.-32     	; 0xb0c <__addsf3+0x8>
     b2c:	ba 17       	cp	r27, r26
     b2e:	62 07       	cpc	r22, r18
     b30:	73 07       	cpc	r23, r19
     b32:	84 07       	cpc	r24, r20
     b34:	95 07       	cpc	r25, r21
     b36:	18 f0       	brcs	.+6      	; 0xb3e <__addsf3x+0x18>
     b38:	71 f4       	brne	.+28     	; 0xb56 <__addsf3x+0x30>
     b3a:	9e f5       	brtc	.+102    	; 0xba2 <__addsf3x+0x7c>
     b3c:	bd c1       	rjmp	.+890    	; 0xeb8 <__fp_zero>
     b3e:	0e f4       	brtc	.+2      	; 0xb42 <__addsf3x+0x1c>
     b40:	e0 95       	com	r30
     b42:	0b 2e       	mov	r0, r27
     b44:	ba 2f       	mov	r27, r26
     b46:	a0 2d       	mov	r26, r0
     b48:	0b 01       	movw	r0, r22
     b4a:	b9 01       	movw	r22, r18
     b4c:	90 01       	movw	r18, r0
     b4e:	0c 01       	movw	r0, r24
     b50:	ca 01       	movw	r24, r20
     b52:	a0 01       	movw	r20, r0
     b54:	11 24       	eor	r1, r1
     b56:	ff 27       	eor	r31, r31
     b58:	59 1b       	sub	r21, r25
     b5a:	99 f0       	breq	.+38     	; 0xb82 <__addsf3x+0x5c>
     b5c:	59 3f       	cpi	r21, 0xF9	; 249
     b5e:	50 f4       	brcc	.+20     	; 0xb74 <__addsf3x+0x4e>
     b60:	50 3e       	cpi	r21, 0xE0	; 224
     b62:	68 f1       	brcs	.+90     	; 0xbbe <__addsf3x+0x98>
     b64:	1a 16       	cp	r1, r26
     b66:	f0 40       	sbci	r31, 0x00	; 0
     b68:	a2 2f       	mov	r26, r18
     b6a:	23 2f       	mov	r18, r19
     b6c:	34 2f       	mov	r19, r20
     b6e:	44 27       	eor	r20, r20
     b70:	58 5f       	subi	r21, 0xF8	; 248
     b72:	f3 cf       	rjmp	.-26     	; 0xb5a <__addsf3x+0x34>
     b74:	46 95       	lsr	r20
     b76:	37 95       	ror	r19
     b78:	27 95       	ror	r18
     b7a:	a7 95       	ror	r26
     b7c:	f0 40       	sbci	r31, 0x00	; 0
     b7e:	53 95       	inc	r21
     b80:	c9 f7       	brne	.-14     	; 0xb74 <__addsf3x+0x4e>
     b82:	7e f4       	brtc	.+30     	; 0xba2 <__addsf3x+0x7c>
     b84:	1f 16       	cp	r1, r31
     b86:	ba 0b       	sbc	r27, r26
     b88:	62 0b       	sbc	r22, r18
     b8a:	73 0b       	sbc	r23, r19
     b8c:	84 0b       	sbc	r24, r20
     b8e:	ba f0       	brmi	.+46     	; 0xbbe <__addsf3x+0x98>
     b90:	91 50       	subi	r25, 0x01	; 1
     b92:	a1 f0       	breq	.+40     	; 0xbbc <__addsf3x+0x96>
     b94:	ff 0f       	add	r31, r31
     b96:	bb 1f       	adc	r27, r27
     b98:	66 1f       	adc	r22, r22
     b9a:	77 1f       	adc	r23, r23
     b9c:	88 1f       	adc	r24, r24
     b9e:	c2 f7       	brpl	.-16     	; 0xb90 <__addsf3x+0x6a>
     ba0:	0e c0       	rjmp	.+28     	; 0xbbe <__addsf3x+0x98>
     ba2:	ba 0f       	add	r27, r26
     ba4:	62 1f       	adc	r22, r18
     ba6:	73 1f       	adc	r23, r19
     ba8:	84 1f       	adc	r24, r20
     baa:	48 f4       	brcc	.+18     	; 0xbbe <__addsf3x+0x98>
     bac:	87 95       	ror	r24
     bae:	77 95       	ror	r23
     bb0:	67 95       	ror	r22
     bb2:	b7 95       	ror	r27
     bb4:	f7 95       	ror	r31
     bb6:	9e 3f       	cpi	r25, 0xFE	; 254
     bb8:	08 f0       	brcs	.+2      	; 0xbbc <__addsf3x+0x96>
     bba:	b3 cf       	rjmp	.-154    	; 0xb22 <__addsf3+0x1e>
     bbc:	93 95       	inc	r25
     bbe:	88 0f       	add	r24, r24
     bc0:	08 f0       	brcs	.+2      	; 0xbc4 <__addsf3x+0x9e>
     bc2:	99 27       	eor	r25, r25
     bc4:	ee 0f       	add	r30, r30
     bc6:	97 95       	ror	r25
     bc8:	87 95       	ror	r24
     bca:	08 95       	ret
     bcc:	34 d1       	rcall	.+616    	; 0xe36 <__fp_pscA>
     bce:	58 f0       	brcs	.+22     	; 0xbe6 <__addsf3x+0xc0>
     bd0:	80 e8       	ldi	r24, 0x80	; 128
     bd2:	91 e0       	ldi	r25, 0x01	; 1
     bd4:	09 f4       	brne	.+2      	; 0xbd8 <__addsf3x+0xb2>
     bd6:	9e ef       	ldi	r25, 0xFE	; 254
     bd8:	35 d1       	rcall	.+618    	; 0xe44 <__fp_pscB>
     bda:	28 f0       	brcs	.+10     	; 0xbe6 <__addsf3x+0xc0>
     bdc:	40 e8       	ldi	r20, 0x80	; 128
     bde:	51 e0       	ldi	r21, 0x01	; 1
     be0:	59 f4       	brne	.+22     	; 0xbf8 <atan2+0xe>
     be2:	5e ef       	ldi	r21, 0xFE	; 254
     be4:	09 c0       	rjmp	.+18     	; 0xbf8 <atan2+0xe>
     be6:	ff c0       	rjmp	.+510    	; 0xde6 <__fp_nan>
     be8:	67 c1       	rjmp	.+718    	; 0xeb8 <__fp_zero>

00000bea <atan2>:
     bea:	e9 2f       	mov	r30, r25
     bec:	e0 78       	andi	r30, 0x80	; 128
     bee:	42 d1       	rcall	.+644    	; 0xe74 <__fp_split3>
     bf0:	68 f3       	brcs	.-38     	; 0xbcc <__addsf3x+0xa6>
     bf2:	09 2e       	mov	r0, r25
     bf4:	05 2a       	or	r0, r21
     bf6:	c1 f3       	breq	.-16     	; 0xbe8 <__addsf3x+0xc2>
     bf8:	26 17       	cp	r18, r22
     bfa:	37 07       	cpc	r19, r23
     bfc:	48 07       	cpc	r20, r24
     bfe:	59 07       	cpc	r21, r25
     c00:	38 f0       	brcs	.+14     	; 0xc10 <atan2+0x26>
     c02:	0e 2e       	mov	r0, r30
     c04:	07 f8       	bld	r0, 7
     c06:	e0 25       	eor	r30, r0
     c08:	69 f0       	breq	.+26     	; 0xc24 <atan2+0x3a>
     c0a:	e0 25       	eor	r30, r0
     c0c:	e0 64       	ori	r30, 0x40	; 64
     c0e:	0a c0       	rjmp	.+20     	; 0xc24 <atan2+0x3a>
     c10:	ef 63       	ori	r30, 0x3F	; 63
     c12:	07 f8       	bld	r0, 7
     c14:	00 94       	com	r0
     c16:	07 fa       	bst	r0, 7
     c18:	db 01       	movw	r26, r22
     c1a:	b9 01       	movw	r22, r18
     c1c:	9d 01       	movw	r18, r26
     c1e:	dc 01       	movw	r26, r24
     c20:	ca 01       	movw	r24, r20
     c22:	ad 01       	movw	r20, r26
     c24:	ef 93       	push	r30
     c26:	43 d0       	rcall	.+134    	; 0xcae <__divsf3_pse>
     c28:	14 d1       	rcall	.+552    	; 0xe52 <__fp_round>
     c2a:	0a d0       	rcall	.+20     	; 0xc40 <atan>
     c2c:	5f 91       	pop	r21
     c2e:	55 23       	and	r21, r21
     c30:	31 f0       	breq	.+12     	; 0xc3e <atan2+0x54>
     c32:	2b ed       	ldi	r18, 0xDB	; 219
     c34:	3f e0       	ldi	r19, 0x0F	; 15
     c36:	49 e4       	ldi	r20, 0x49	; 73
     c38:	50 fd       	sbrc	r21, 0
     c3a:	49 ec       	ldi	r20, 0xC9	; 201
     c3c:	63 cf       	rjmp	.-314    	; 0xb04 <__addsf3>
     c3e:	08 95       	ret

00000c40 <atan>:
     c40:	df 93       	push	r29
     c42:	dd 27       	eor	r29, r29
     c44:	b9 2f       	mov	r27, r25
     c46:	bf 77       	andi	r27, 0x7F	; 127
     c48:	40 e8       	ldi	r20, 0x80	; 128
     c4a:	5f e3       	ldi	r21, 0x3F	; 63
     c4c:	16 16       	cp	r1, r22
     c4e:	17 06       	cpc	r1, r23
     c50:	48 07       	cpc	r20, r24
     c52:	5b 07       	cpc	r21, r27
     c54:	10 f4       	brcc	.+4      	; 0xc5a <atan+0x1a>
     c56:	d9 2f       	mov	r29, r25
     c58:	36 d1       	rcall	.+620    	; 0xec6 <inverse>
     c5a:	9f 93       	push	r25
     c5c:	8f 93       	push	r24
     c5e:	7f 93       	push	r23
     c60:	6f 93       	push	r22
     c62:	9b d1       	rcall	.+822    	; 0xf9a <square>
     c64:	e4 ee       	ldi	r30, 0xE4	; 228
     c66:	f0 e0       	ldi	r31, 0x00	; 0
     c68:	c1 d0       	rcall	.+386    	; 0xdec <__fp_powser>
     c6a:	f3 d0       	rcall	.+486    	; 0xe52 <__fp_round>
     c6c:	2f 91       	pop	r18
     c6e:	3f 91       	pop	r19
     c70:	4f 91       	pop	r20
     c72:	5f 91       	pop	r21
     c74:	3b d1       	rcall	.+630    	; 0xeec <__mulsf3x>
     c76:	dd 23       	and	r29, r29
     c78:	49 f0       	breq	.+18     	; 0xc8c <atan+0x4c>
     c7a:	90 58       	subi	r25, 0x80	; 128
     c7c:	a2 ea       	ldi	r26, 0xA2	; 162
     c7e:	2a ed       	ldi	r18, 0xDA	; 218
     c80:	3f e0       	ldi	r19, 0x0F	; 15
     c82:	49 ec       	ldi	r20, 0xC9	; 201
     c84:	5f e3       	ldi	r21, 0x3F	; 63
     c86:	d0 78       	andi	r29, 0x80	; 128
     c88:	5d 27       	eor	r21, r29
     c8a:	4d df       	rcall	.-358    	; 0xb26 <__addsf3x>
     c8c:	df 91       	pop	r29
     c8e:	e1 c0       	rjmp	.+450    	; 0xe52 <__fp_round>

00000c90 <__divsf3>:
     c90:	0c d0       	rcall	.+24     	; 0xcaa <__divsf3x>
     c92:	df c0       	rjmp	.+446    	; 0xe52 <__fp_round>
     c94:	d7 d0       	rcall	.+430    	; 0xe44 <__fp_pscB>
     c96:	40 f0       	brcs	.+16     	; 0xca8 <__divsf3+0x18>
     c98:	ce d0       	rcall	.+412    	; 0xe36 <__fp_pscA>
     c9a:	30 f0       	brcs	.+12     	; 0xca8 <__divsf3+0x18>
     c9c:	21 f4       	brne	.+8      	; 0xca6 <__divsf3+0x16>
     c9e:	5f 3f       	cpi	r21, 0xFF	; 255
     ca0:	19 f0       	breq	.+6      	; 0xca8 <__divsf3+0x18>
     ca2:	9b c0       	rjmp	.+310    	; 0xdda <__fp_inf>
     ca4:	51 11       	cpse	r21, r1
     ca6:	09 c1       	rjmp	.+530    	; 0xeba <__fp_szero>
     ca8:	9e c0       	rjmp	.+316    	; 0xde6 <__fp_nan>

00000caa <__divsf3x>:
     caa:	e4 d0       	rcall	.+456    	; 0xe74 <__fp_split3>
     cac:	98 f3       	brcs	.-26     	; 0xc94 <__divsf3+0x4>

00000cae <__divsf3_pse>:
     cae:	99 23       	and	r25, r25
     cb0:	c9 f3       	breq	.-14     	; 0xca4 <__divsf3+0x14>
     cb2:	55 23       	and	r21, r21
     cb4:	b1 f3       	breq	.-20     	; 0xca2 <__divsf3+0x12>
     cb6:	95 1b       	sub	r25, r21
     cb8:	55 0b       	sbc	r21, r21
     cba:	bb 27       	eor	r27, r27
     cbc:	aa 27       	eor	r26, r26
     cbe:	62 17       	cp	r22, r18
     cc0:	73 07       	cpc	r23, r19
     cc2:	84 07       	cpc	r24, r20
     cc4:	38 f0       	brcs	.+14     	; 0xcd4 <__divsf3_pse+0x26>
     cc6:	9f 5f       	subi	r25, 0xFF	; 255
     cc8:	5f 4f       	sbci	r21, 0xFF	; 255
     cca:	22 0f       	add	r18, r18
     ccc:	33 1f       	adc	r19, r19
     cce:	44 1f       	adc	r20, r20
     cd0:	aa 1f       	adc	r26, r26
     cd2:	a9 f3       	breq	.-22     	; 0xcbe <__divsf3_pse+0x10>
     cd4:	33 d0       	rcall	.+102    	; 0xd3c <__divsf3_pse+0x8e>
     cd6:	0e 2e       	mov	r0, r30
     cd8:	3a f0       	brmi	.+14     	; 0xce8 <__divsf3_pse+0x3a>
     cda:	e0 e8       	ldi	r30, 0x80	; 128
     cdc:	30 d0       	rcall	.+96     	; 0xd3e <__divsf3_pse+0x90>
     cde:	91 50       	subi	r25, 0x01	; 1
     ce0:	50 40       	sbci	r21, 0x00	; 0
     ce2:	e6 95       	lsr	r30
     ce4:	00 1c       	adc	r0, r0
     ce6:	ca f7       	brpl	.-14     	; 0xcda <__divsf3_pse+0x2c>
     ce8:	29 d0       	rcall	.+82     	; 0xd3c <__divsf3_pse+0x8e>
     cea:	fe 2f       	mov	r31, r30
     cec:	27 d0       	rcall	.+78     	; 0xd3c <__divsf3_pse+0x8e>
     cee:	66 0f       	add	r22, r22
     cf0:	77 1f       	adc	r23, r23
     cf2:	88 1f       	adc	r24, r24
     cf4:	bb 1f       	adc	r27, r27
     cf6:	26 17       	cp	r18, r22
     cf8:	37 07       	cpc	r19, r23
     cfa:	48 07       	cpc	r20, r24
     cfc:	ab 07       	cpc	r26, r27
     cfe:	b0 e8       	ldi	r27, 0x80	; 128
     d00:	09 f0       	breq	.+2      	; 0xd04 <__divsf3_pse+0x56>
     d02:	bb 0b       	sbc	r27, r27
     d04:	80 2d       	mov	r24, r0
     d06:	bf 01       	movw	r22, r30
     d08:	ff 27       	eor	r31, r31
     d0a:	93 58       	subi	r25, 0x83	; 131
     d0c:	5f 4f       	sbci	r21, 0xFF	; 255
     d0e:	2a f0       	brmi	.+10     	; 0xd1a <__divsf3_pse+0x6c>
     d10:	9e 3f       	cpi	r25, 0xFE	; 254
     d12:	51 05       	cpc	r21, r1
     d14:	68 f0       	brcs	.+26     	; 0xd30 <__divsf3_pse+0x82>
     d16:	61 c0       	rjmp	.+194    	; 0xdda <__fp_inf>
     d18:	d0 c0       	rjmp	.+416    	; 0xeba <__fp_szero>
     d1a:	5f 3f       	cpi	r21, 0xFF	; 255
     d1c:	ec f3       	brlt	.-6      	; 0xd18 <__divsf3_pse+0x6a>
     d1e:	98 3e       	cpi	r25, 0xE8	; 232
     d20:	dc f3       	brlt	.-10     	; 0xd18 <__divsf3_pse+0x6a>
     d22:	86 95       	lsr	r24
     d24:	77 95       	ror	r23
     d26:	67 95       	ror	r22
     d28:	b7 95       	ror	r27
     d2a:	f7 95       	ror	r31
     d2c:	9f 5f       	subi	r25, 0xFF	; 255
     d2e:	c9 f7       	brne	.-14     	; 0xd22 <__divsf3_pse+0x74>
     d30:	88 0f       	add	r24, r24
     d32:	91 1d       	adc	r25, r1
     d34:	96 95       	lsr	r25
     d36:	87 95       	ror	r24
     d38:	97 f9       	bld	r25, 7
     d3a:	08 95       	ret
     d3c:	e1 e0       	ldi	r30, 0x01	; 1
     d3e:	66 0f       	add	r22, r22
     d40:	77 1f       	adc	r23, r23
     d42:	88 1f       	adc	r24, r24
     d44:	bb 1f       	adc	r27, r27
     d46:	62 17       	cp	r22, r18
     d48:	73 07       	cpc	r23, r19
     d4a:	84 07       	cpc	r24, r20
     d4c:	ba 07       	cpc	r27, r26
     d4e:	20 f0       	brcs	.+8      	; 0xd58 <__divsf3_pse+0xaa>
     d50:	62 1b       	sub	r22, r18
     d52:	73 0b       	sbc	r23, r19
     d54:	84 0b       	sbc	r24, r20
     d56:	ba 0b       	sbc	r27, r26
     d58:	ee 1f       	adc	r30, r30
     d5a:	88 f7       	brcc	.-30     	; 0xd3e <__divsf3_pse+0x90>
     d5c:	e0 95       	com	r30
     d5e:	08 95       	ret

00000d60 <__floatunsisf>:
     d60:	e8 94       	clt
     d62:	09 c0       	rjmp	.+18     	; 0xd76 <__floatsisf+0x12>

00000d64 <__floatsisf>:
     d64:	97 fb       	bst	r25, 7
     d66:	3e f4       	brtc	.+14     	; 0xd76 <__floatsisf+0x12>
     d68:	90 95       	com	r25
     d6a:	80 95       	com	r24
     d6c:	70 95       	com	r23
     d6e:	61 95       	neg	r22
     d70:	7f 4f       	sbci	r23, 0xFF	; 255
     d72:	8f 4f       	sbci	r24, 0xFF	; 255
     d74:	9f 4f       	sbci	r25, 0xFF	; 255
     d76:	99 23       	and	r25, r25
     d78:	a9 f0       	breq	.+42     	; 0xda4 <__floatsisf+0x40>
     d7a:	f9 2f       	mov	r31, r25
     d7c:	96 e9       	ldi	r25, 0x96	; 150
     d7e:	bb 27       	eor	r27, r27
     d80:	93 95       	inc	r25
     d82:	f6 95       	lsr	r31
     d84:	87 95       	ror	r24
     d86:	77 95       	ror	r23
     d88:	67 95       	ror	r22
     d8a:	b7 95       	ror	r27
     d8c:	f1 11       	cpse	r31, r1
     d8e:	f8 cf       	rjmp	.-16     	; 0xd80 <__floatsisf+0x1c>
     d90:	fa f4       	brpl	.+62     	; 0xdd0 <__floatsisf+0x6c>
     d92:	bb 0f       	add	r27, r27
     d94:	11 f4       	brne	.+4      	; 0xd9a <__floatsisf+0x36>
     d96:	60 ff       	sbrs	r22, 0
     d98:	1b c0       	rjmp	.+54     	; 0xdd0 <__floatsisf+0x6c>
     d9a:	6f 5f       	subi	r22, 0xFF	; 255
     d9c:	7f 4f       	sbci	r23, 0xFF	; 255
     d9e:	8f 4f       	sbci	r24, 0xFF	; 255
     da0:	9f 4f       	sbci	r25, 0xFF	; 255
     da2:	16 c0       	rjmp	.+44     	; 0xdd0 <__floatsisf+0x6c>
     da4:	88 23       	and	r24, r24
     da6:	11 f0       	breq	.+4      	; 0xdac <__floatsisf+0x48>
     da8:	96 e9       	ldi	r25, 0x96	; 150
     daa:	11 c0       	rjmp	.+34     	; 0xdce <__floatsisf+0x6a>
     dac:	77 23       	and	r23, r23
     dae:	21 f0       	breq	.+8      	; 0xdb8 <__floatsisf+0x54>
     db0:	9e e8       	ldi	r25, 0x8E	; 142
     db2:	87 2f       	mov	r24, r23
     db4:	76 2f       	mov	r23, r22
     db6:	05 c0       	rjmp	.+10     	; 0xdc2 <__floatsisf+0x5e>
     db8:	66 23       	and	r22, r22
     dba:	71 f0       	breq	.+28     	; 0xdd8 <__floatsisf+0x74>
     dbc:	96 e8       	ldi	r25, 0x86	; 134
     dbe:	86 2f       	mov	r24, r22
     dc0:	70 e0       	ldi	r23, 0x00	; 0
     dc2:	60 e0       	ldi	r22, 0x00	; 0
     dc4:	2a f0       	brmi	.+10     	; 0xdd0 <__floatsisf+0x6c>
     dc6:	9a 95       	dec	r25
     dc8:	66 0f       	add	r22, r22
     dca:	77 1f       	adc	r23, r23
     dcc:	88 1f       	adc	r24, r24
     dce:	da f7       	brpl	.-10     	; 0xdc6 <__floatsisf+0x62>
     dd0:	88 0f       	add	r24, r24
     dd2:	96 95       	lsr	r25
     dd4:	87 95       	ror	r24
     dd6:	97 f9       	bld	r25, 7
     dd8:	08 95       	ret

00000dda <__fp_inf>:
     dda:	97 f9       	bld	r25, 7
     ddc:	9f 67       	ori	r25, 0x7F	; 127
     dde:	80 e8       	ldi	r24, 0x80	; 128
     de0:	70 e0       	ldi	r23, 0x00	; 0
     de2:	60 e0       	ldi	r22, 0x00	; 0
     de4:	08 95       	ret

00000de6 <__fp_nan>:
     de6:	9f ef       	ldi	r25, 0xFF	; 255
     de8:	80 ec       	ldi	r24, 0xC0	; 192
     dea:	08 95       	ret

00000dec <__fp_powser>:
     dec:	df 93       	push	r29
     dee:	cf 93       	push	r28
     df0:	1f 93       	push	r17
     df2:	0f 93       	push	r16
     df4:	ff 92       	push	r15
     df6:	ef 92       	push	r14
     df8:	df 92       	push	r13
     dfa:	7b 01       	movw	r14, r22
     dfc:	8c 01       	movw	r16, r24
     dfe:	68 94       	set
     e00:	05 c0       	rjmp	.+10     	; 0xe0c <__fp_powser+0x20>
     e02:	da 2e       	mov	r13, r26
     e04:	ef 01       	movw	r28, r30
     e06:	72 d0       	rcall	.+228    	; 0xeec <__mulsf3x>
     e08:	fe 01       	movw	r30, r28
     e0a:	e8 94       	clt
     e0c:	a5 91       	lpm	r26, Z+
     e0e:	25 91       	lpm	r18, Z+
     e10:	35 91       	lpm	r19, Z+
     e12:	45 91       	lpm	r20, Z+
     e14:	55 91       	lpm	r21, Z+
     e16:	ae f3       	brts	.-22     	; 0xe02 <__fp_powser+0x16>
     e18:	ef 01       	movw	r28, r30
     e1a:	85 de       	rcall	.-758    	; 0xb26 <__addsf3x>
     e1c:	fe 01       	movw	r30, r28
     e1e:	97 01       	movw	r18, r14
     e20:	a8 01       	movw	r20, r16
     e22:	da 94       	dec	r13
     e24:	79 f7       	brne	.-34     	; 0xe04 <__fp_powser+0x18>
     e26:	df 90       	pop	r13
     e28:	ef 90       	pop	r14
     e2a:	ff 90       	pop	r15
     e2c:	0f 91       	pop	r16
     e2e:	1f 91       	pop	r17
     e30:	cf 91       	pop	r28
     e32:	df 91       	pop	r29
     e34:	08 95       	ret

00000e36 <__fp_pscA>:
     e36:	00 24       	eor	r0, r0
     e38:	0a 94       	dec	r0
     e3a:	16 16       	cp	r1, r22
     e3c:	17 06       	cpc	r1, r23
     e3e:	18 06       	cpc	r1, r24
     e40:	09 06       	cpc	r0, r25
     e42:	08 95       	ret

00000e44 <__fp_pscB>:
     e44:	00 24       	eor	r0, r0
     e46:	0a 94       	dec	r0
     e48:	12 16       	cp	r1, r18
     e4a:	13 06       	cpc	r1, r19
     e4c:	14 06       	cpc	r1, r20
     e4e:	05 06       	cpc	r0, r21
     e50:	08 95       	ret

00000e52 <__fp_round>:
     e52:	09 2e       	mov	r0, r25
     e54:	03 94       	inc	r0
     e56:	00 0c       	add	r0, r0
     e58:	11 f4       	brne	.+4      	; 0xe5e <__fp_round+0xc>
     e5a:	88 23       	and	r24, r24
     e5c:	52 f0       	brmi	.+20     	; 0xe72 <__fp_round+0x20>
     e5e:	bb 0f       	add	r27, r27
     e60:	40 f4       	brcc	.+16     	; 0xe72 <__fp_round+0x20>
     e62:	bf 2b       	or	r27, r31
     e64:	11 f4       	brne	.+4      	; 0xe6a <__fp_round+0x18>
     e66:	60 ff       	sbrs	r22, 0
     e68:	04 c0       	rjmp	.+8      	; 0xe72 <__fp_round+0x20>
     e6a:	6f 5f       	subi	r22, 0xFF	; 255
     e6c:	7f 4f       	sbci	r23, 0xFF	; 255
     e6e:	8f 4f       	sbci	r24, 0xFF	; 255
     e70:	9f 4f       	sbci	r25, 0xFF	; 255
     e72:	08 95       	ret

00000e74 <__fp_split3>:
     e74:	57 fd       	sbrc	r21, 7
     e76:	90 58       	subi	r25, 0x80	; 128
     e78:	44 0f       	add	r20, r20
     e7a:	55 1f       	adc	r21, r21
     e7c:	59 f0       	breq	.+22     	; 0xe94 <__fp_splitA+0x10>
     e7e:	5f 3f       	cpi	r21, 0xFF	; 255
     e80:	71 f0       	breq	.+28     	; 0xe9e <__fp_splitA+0x1a>
     e82:	47 95       	ror	r20

00000e84 <__fp_splitA>:
     e84:	88 0f       	add	r24, r24
     e86:	97 fb       	bst	r25, 7
     e88:	99 1f       	adc	r25, r25
     e8a:	61 f0       	breq	.+24     	; 0xea4 <__fp_splitA+0x20>
     e8c:	9f 3f       	cpi	r25, 0xFF	; 255
     e8e:	79 f0       	breq	.+30     	; 0xeae <__fp_splitA+0x2a>
     e90:	87 95       	ror	r24
     e92:	08 95       	ret
     e94:	12 16       	cp	r1, r18
     e96:	13 06       	cpc	r1, r19
     e98:	14 06       	cpc	r1, r20
     e9a:	55 1f       	adc	r21, r21
     e9c:	f2 cf       	rjmp	.-28     	; 0xe82 <__fp_split3+0xe>
     e9e:	46 95       	lsr	r20
     ea0:	f1 df       	rcall	.-30     	; 0xe84 <__fp_splitA>
     ea2:	08 c0       	rjmp	.+16     	; 0xeb4 <__fp_splitA+0x30>
     ea4:	16 16       	cp	r1, r22
     ea6:	17 06       	cpc	r1, r23
     ea8:	18 06       	cpc	r1, r24
     eaa:	99 1f       	adc	r25, r25
     eac:	f1 cf       	rjmp	.-30     	; 0xe90 <__fp_splitA+0xc>
     eae:	86 95       	lsr	r24
     eb0:	71 05       	cpc	r23, r1
     eb2:	61 05       	cpc	r22, r1
     eb4:	08 94       	sec
     eb6:	08 95       	ret

00000eb8 <__fp_zero>:
     eb8:	e8 94       	clt

00000eba <__fp_szero>:
     eba:	bb 27       	eor	r27, r27
     ebc:	66 27       	eor	r22, r22
     ebe:	77 27       	eor	r23, r23
     ec0:	cb 01       	movw	r24, r22
     ec2:	97 f9       	bld	r25, 7
     ec4:	08 95       	ret

00000ec6 <inverse>:
     ec6:	9b 01       	movw	r18, r22
     ec8:	ac 01       	movw	r20, r24
     eca:	60 e0       	ldi	r22, 0x00	; 0
     ecc:	70 e0       	ldi	r23, 0x00	; 0
     ece:	80 e8       	ldi	r24, 0x80	; 128
     ed0:	9f e3       	ldi	r25, 0x3F	; 63
     ed2:	de ce       	rjmp	.-580    	; 0xc90 <__divsf3>

00000ed4 <__mulsf3>:
     ed4:	0b d0       	rcall	.+22     	; 0xeec <__mulsf3x>
     ed6:	bd cf       	rjmp	.-134    	; 0xe52 <__fp_round>
     ed8:	ae df       	rcall	.-164    	; 0xe36 <__fp_pscA>
     eda:	28 f0       	brcs	.+10     	; 0xee6 <__mulsf3+0x12>
     edc:	b3 df       	rcall	.-154    	; 0xe44 <__fp_pscB>
     ede:	18 f0       	brcs	.+6      	; 0xee6 <__mulsf3+0x12>
     ee0:	95 23       	and	r25, r21
     ee2:	09 f0       	breq	.+2      	; 0xee6 <__mulsf3+0x12>
     ee4:	7a cf       	rjmp	.-268    	; 0xdda <__fp_inf>
     ee6:	7f cf       	rjmp	.-258    	; 0xde6 <__fp_nan>
     ee8:	11 24       	eor	r1, r1
     eea:	e7 cf       	rjmp	.-50     	; 0xeba <__fp_szero>

00000eec <__mulsf3x>:
     eec:	c3 df       	rcall	.-122    	; 0xe74 <__fp_split3>
     eee:	a0 f3       	brcs	.-24     	; 0xed8 <__mulsf3+0x4>

00000ef0 <__mulsf3_pse>:
     ef0:	95 9f       	mul	r25, r21
     ef2:	d1 f3       	breq	.-12     	; 0xee8 <__mulsf3+0x14>
     ef4:	95 0f       	add	r25, r21
     ef6:	50 e0       	ldi	r21, 0x00	; 0
     ef8:	55 1f       	adc	r21, r21
     efa:	62 9f       	mul	r22, r18
     efc:	f0 01       	movw	r30, r0
     efe:	72 9f       	mul	r23, r18
     f00:	bb 27       	eor	r27, r27
     f02:	f0 0d       	add	r31, r0
     f04:	b1 1d       	adc	r27, r1
     f06:	63 9f       	mul	r22, r19
     f08:	aa 27       	eor	r26, r26
     f0a:	f0 0d       	add	r31, r0
     f0c:	b1 1d       	adc	r27, r1
     f0e:	aa 1f       	adc	r26, r26
     f10:	64 9f       	mul	r22, r20
     f12:	66 27       	eor	r22, r22
     f14:	b0 0d       	add	r27, r0
     f16:	a1 1d       	adc	r26, r1
     f18:	66 1f       	adc	r22, r22
     f1a:	82 9f       	mul	r24, r18
     f1c:	22 27       	eor	r18, r18
     f1e:	b0 0d       	add	r27, r0
     f20:	a1 1d       	adc	r26, r1
     f22:	62 1f       	adc	r22, r18
     f24:	73 9f       	mul	r23, r19
     f26:	b0 0d       	add	r27, r0
     f28:	a1 1d       	adc	r26, r1
     f2a:	62 1f       	adc	r22, r18
     f2c:	83 9f       	mul	r24, r19
     f2e:	a0 0d       	add	r26, r0
     f30:	61 1d       	adc	r22, r1
     f32:	22 1f       	adc	r18, r18
     f34:	74 9f       	mul	r23, r20
     f36:	33 27       	eor	r19, r19
     f38:	a0 0d       	add	r26, r0
     f3a:	61 1d       	adc	r22, r1
     f3c:	23 1f       	adc	r18, r19
     f3e:	84 9f       	mul	r24, r20
     f40:	60 0d       	add	r22, r0
     f42:	21 1d       	adc	r18, r1
     f44:	82 2f       	mov	r24, r18
     f46:	76 2f       	mov	r23, r22
     f48:	6a 2f       	mov	r22, r26
     f4a:	11 24       	eor	r1, r1
     f4c:	9f 57       	subi	r25, 0x7F	; 127
     f4e:	50 40       	sbci	r21, 0x00	; 0
     f50:	8a f0       	brmi	.+34     	; 0xf74 <__mulsf3_pse+0x84>
     f52:	e1 f0       	breq	.+56     	; 0xf8c <__mulsf3_pse+0x9c>
     f54:	88 23       	and	r24, r24
     f56:	4a f0       	brmi	.+18     	; 0xf6a <__mulsf3_pse+0x7a>
     f58:	ee 0f       	add	r30, r30
     f5a:	ff 1f       	adc	r31, r31
     f5c:	bb 1f       	adc	r27, r27
     f5e:	66 1f       	adc	r22, r22
     f60:	77 1f       	adc	r23, r23
     f62:	88 1f       	adc	r24, r24
     f64:	91 50       	subi	r25, 0x01	; 1
     f66:	50 40       	sbci	r21, 0x00	; 0
     f68:	a9 f7       	brne	.-22     	; 0xf54 <__mulsf3_pse+0x64>
     f6a:	9e 3f       	cpi	r25, 0xFE	; 254
     f6c:	51 05       	cpc	r21, r1
     f6e:	70 f0       	brcs	.+28     	; 0xf8c <__mulsf3_pse+0x9c>
     f70:	34 cf       	rjmp	.-408    	; 0xdda <__fp_inf>
     f72:	a3 cf       	rjmp	.-186    	; 0xeba <__fp_szero>
     f74:	5f 3f       	cpi	r21, 0xFF	; 255
     f76:	ec f3       	brlt	.-6      	; 0xf72 <__mulsf3_pse+0x82>
     f78:	98 3e       	cpi	r25, 0xE8	; 232
     f7a:	dc f3       	brlt	.-10     	; 0xf72 <__mulsf3_pse+0x82>
     f7c:	86 95       	lsr	r24
     f7e:	77 95       	ror	r23
     f80:	67 95       	ror	r22
     f82:	b7 95       	ror	r27
     f84:	f7 95       	ror	r31
     f86:	e7 95       	ror	r30
     f88:	9f 5f       	subi	r25, 0xFF	; 255
     f8a:	c1 f7       	brne	.-16     	; 0xf7c <__mulsf3_pse+0x8c>
     f8c:	fe 2b       	or	r31, r30
     f8e:	88 0f       	add	r24, r24
     f90:	91 1d       	adc	r25, r1
     f92:	96 95       	lsr	r25
     f94:	87 95       	ror	r24
     f96:	97 f9       	bld	r25, 7
     f98:	08 95       	ret

00000f9a <square>:
     f9a:	9b 01       	movw	r18, r22
     f9c:	ac 01       	movw	r20, r24
     f9e:	9a cf       	rjmp	.-204    	; 0xed4 <__mulsf3>

00000fa0 <__udivmodsi4>:
     fa0:	a1 e2       	ldi	r26, 0x21	; 33
     fa2:	1a 2e       	mov	r1, r26
     fa4:	aa 1b       	sub	r26, r26
     fa6:	bb 1b       	sub	r27, r27
     fa8:	fd 01       	movw	r30, r26
     faa:	0d c0       	rjmp	.+26     	; 0xfc6 <__udivmodsi4_ep>

00000fac <__udivmodsi4_loop>:
     fac:	aa 1f       	adc	r26, r26
     fae:	bb 1f       	adc	r27, r27
     fb0:	ee 1f       	adc	r30, r30
     fb2:	ff 1f       	adc	r31, r31
     fb4:	a2 17       	cp	r26, r18
     fb6:	b3 07       	cpc	r27, r19
     fb8:	e4 07       	cpc	r30, r20
     fba:	f5 07       	cpc	r31, r21
     fbc:	20 f0       	brcs	.+8      	; 0xfc6 <__udivmodsi4_ep>
     fbe:	a2 1b       	sub	r26, r18
     fc0:	b3 0b       	sbc	r27, r19
     fc2:	e4 0b       	sbc	r30, r20
     fc4:	f5 0b       	sbc	r31, r21

00000fc6 <__udivmodsi4_ep>:
     fc6:	66 1f       	adc	r22, r22
     fc8:	77 1f       	adc	r23, r23
     fca:	88 1f       	adc	r24, r24
     fcc:	99 1f       	adc	r25, r25
     fce:	1a 94       	dec	r1
     fd0:	69 f7       	brne	.-38     	; 0xfac <__udivmodsi4_loop>
     fd2:	60 95       	com	r22
     fd4:	70 95       	com	r23
     fd6:	80 95       	com	r24
     fd8:	90 95       	com	r25
     fda:	9b 01       	movw	r18, r22
     fdc:	ac 01       	movw	r20, r24
     fde:	bd 01       	movw	r22, r26
     fe0:	cf 01       	movw	r24, r30
     fe2:	08 95       	ret

00000fe4 <dtostrf>:
     fe4:	ef 92       	push	r14
     fe6:	0f 93       	push	r16
     fe8:	1f 93       	push	r17
     fea:	cf 93       	push	r28
     fec:	df 93       	push	r29
     fee:	e8 01       	movw	r28, r16
     ff0:	47 ff       	sbrs	r20, 7
     ff2:	02 c0       	rjmp	.+4      	; 0xff8 <dtostrf+0x14>
     ff4:	34 e1       	ldi	r19, 0x14	; 20
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <dtostrf+0x16>
     ff8:	34 e0       	ldi	r19, 0x04	; 4
     ffa:	e4 2f       	mov	r30, r20
     ffc:	ff 27       	eor	r31, r31
     ffe:	e7 fd       	sbrc	r30, 7
    1000:	f0 95       	com	r31
    1002:	f7 ff       	sbrs	r31, 7
    1004:	03 c0       	rjmp	.+6      	; 0x100c <dtostrf+0x28>
    1006:	f1 95       	neg	r31
    1008:	e1 95       	neg	r30
    100a:	f1 09       	sbc	r31, r1
    100c:	e3 2e       	mov	r14, r19
    100e:	02 2f       	mov	r16, r18
    1010:	2e 2f       	mov	r18, r30
    1012:	ae 01       	movw	r20, r28
    1014:	07 d0       	rcall	.+14     	; 0x1024 <dtoa_prf>
    1016:	ce 01       	movw	r24, r28
    1018:	df 91       	pop	r29
    101a:	cf 91       	pop	r28
    101c:	1f 91       	pop	r17
    101e:	0f 91       	pop	r16
    1020:	ef 90       	pop	r14
    1022:	08 95       	ret

00001024 <dtoa_prf>:
    1024:	6f 92       	push	r6
    1026:	7f 92       	push	r7
    1028:	9f 92       	push	r9
    102a:	af 92       	push	r10
    102c:	bf 92       	push	r11
    102e:	cf 92       	push	r12
    1030:	df 92       	push	r13
    1032:	ef 92       	push	r14
    1034:	ff 92       	push	r15
    1036:	0f 93       	push	r16
    1038:	1f 93       	push	r17
    103a:	cf 93       	push	r28
    103c:	df 93       	push	r29
    103e:	cd b7       	in	r28, 0x3d	; 61
    1040:	de b7       	in	r29, 0x3e	; 62
    1042:	29 97       	sbiw	r28, 0x09	; 9
    1044:	0f b6       	in	r0, 0x3f	; 63
    1046:	f8 94       	cli
    1048:	de bf       	out	0x3e, r29	; 62
    104a:	0f be       	out	0x3f, r0	; 63
    104c:	cd bf       	out	0x3d, r28	; 61
    104e:	6a 01       	movw	r12, r20
    1050:	b2 2e       	mov	r11, r18
    1052:	10 2f       	mov	r17, r16
    1054:	0c 33       	cpi	r16, 0x3C	; 60
    1056:	20 f4       	brcc	.+8      	; 0x1060 <dtoa_prf+0x3c>
    1058:	ff 24       	eor	r15, r15
    105a:	f3 94       	inc	r15
    105c:	f0 0e       	add	r15, r16
    105e:	02 c0       	rjmp	.+4      	; 0x1064 <dtoa_prf+0x40>
    1060:	4c e3       	ldi	r20, 0x3C	; 60
    1062:	f4 2e       	mov	r15, r20
    1064:	0f 2d       	mov	r16, r15
    1066:	27 e0       	ldi	r18, 0x07	; 7
    1068:	ae 01       	movw	r20, r28
    106a:	4f 5f       	subi	r20, 0xFF	; 255
    106c:	5f 4f       	sbci	r21, 0xFF	; 255
    106e:	57 d1       	rcall	.+686    	; 0x131e <__ftoa_engine>
    1070:	79 81       	ldd	r23, Y+1	; 0x01
    1072:	27 2f       	mov	r18, r23
    1074:	29 70       	andi	r18, 0x09	; 9
    1076:	21 30       	cpi	r18, 0x01	; 1
    1078:	31 f0       	breq	.+12     	; 0x1086 <dtoa_prf+0x62>
    107a:	e1 fc       	sbrc	r14, 1
    107c:	06 c0       	rjmp	.+12     	; 0x108a <dtoa_prf+0x66>
    107e:	e0 fc       	sbrc	r14, 0
    1080:	06 c0       	rjmp	.+12     	; 0x108e <dtoa_prf+0x6a>
    1082:	60 e0       	ldi	r22, 0x00	; 0
    1084:	05 c0       	rjmp	.+10     	; 0x1090 <dtoa_prf+0x6c>
    1086:	6d e2       	ldi	r22, 0x2D	; 45
    1088:	03 c0       	rjmp	.+6      	; 0x1090 <dtoa_prf+0x6c>
    108a:	6b e2       	ldi	r22, 0x2B	; 43
    108c:	01 c0       	rjmp	.+2      	; 0x1090 <dtoa_prf+0x6c>
    108e:	60 e2       	ldi	r22, 0x20	; 32
    1090:	ae 2d       	mov	r26, r14
    1092:	a0 71       	andi	r26, 0x10	; 16
    1094:	73 ff       	sbrs	r23, 3
    1096:	36 c0       	rjmp	.+108    	; 0x1104 <dtoa_prf+0xe0>
    1098:	66 23       	and	r22, r22
    109a:	11 f0       	breq	.+4      	; 0x10a0 <dtoa_prf+0x7c>
    109c:	84 e0       	ldi	r24, 0x04	; 4
    109e:	01 c0       	rjmp	.+2      	; 0x10a2 <dtoa_prf+0x7e>
    10a0:	83 e0       	ldi	r24, 0x03	; 3
    10a2:	8b 15       	cp	r24, r11
    10a4:	10 f4       	brcc	.+4      	; 0x10aa <dtoa_prf+0x86>
    10a6:	b8 1a       	sub	r11, r24
    10a8:	01 c0       	rjmp	.+2      	; 0x10ac <dtoa_prf+0x88>
    10aa:	b1 2c       	mov	r11, r1
    10ac:	a1 11       	cpse	r26, r1
    10ae:	0b c0       	rjmp	.+22     	; 0x10c6 <dtoa_prf+0xa2>
    10b0:	f6 01       	movw	r30, r12
    10b2:	8b 2d       	mov	r24, r11
    10b4:	90 e2       	ldi	r25, 0x20	; 32
    10b6:	88 23       	and	r24, r24
    10b8:	19 f0       	breq	.+6      	; 0x10c0 <dtoa_prf+0x9c>
    10ba:	91 93       	st	Z+, r25
    10bc:	81 50       	subi	r24, 0x01	; 1
    10be:	fb cf       	rjmp	.-10     	; 0x10b6 <dtoa_prf+0x92>
    10c0:	cb 0c       	add	r12, r11
    10c2:	d1 1c       	adc	r13, r1
    10c4:	b1 2c       	mov	r11, r1
    10c6:	66 23       	and	r22, r22
    10c8:	31 f0       	breq	.+12     	; 0x10d6 <dtoa_prf+0xb2>
    10ca:	f6 01       	movw	r30, r12
    10cc:	60 83       	st	Z, r22
    10ce:	96 01       	movw	r18, r12
    10d0:	2f 5f       	subi	r18, 0xFF	; 255
    10d2:	3f 4f       	sbci	r19, 0xFF	; 255
    10d4:	69 01       	movw	r12, r18
    10d6:	c6 01       	movw	r24, r12
    10d8:	03 96       	adiw	r24, 0x03	; 3
    10da:	e2 fe       	sbrs	r14, 2
    10dc:	05 c0       	rjmp	.+10     	; 0x10e8 <dtoa_prf+0xc4>
    10de:	2e e4       	ldi	r18, 0x4E	; 78
    10e0:	f6 01       	movw	r30, r12
    10e2:	20 83       	st	Z, r18
    10e4:	31 e4       	ldi	r19, 0x41	; 65
    10e6:	04 c0       	rjmp	.+8      	; 0x10f0 <dtoa_prf+0xcc>
    10e8:	2e e6       	ldi	r18, 0x6E	; 110
    10ea:	f6 01       	movw	r30, r12
    10ec:	20 83       	st	Z, r18
    10ee:	31 e6       	ldi	r19, 0x61	; 97
    10f0:	31 83       	std	Z+1, r19	; 0x01
    10f2:	22 83       	std	Z+2, r18	; 0x02
    10f4:	fc 01       	movw	r30, r24
    10f6:	2b 2d       	mov	r18, r11
    10f8:	30 e2       	ldi	r19, 0x20	; 32
    10fa:	22 23       	and	r18, r18
    10fc:	f1 f1       	breq	.+124    	; 0x117a <dtoa_prf+0x156>
    10fe:	31 93       	st	Z+, r19
    1100:	21 50       	subi	r18, 0x01	; 1
    1102:	fb cf       	rjmp	.-10     	; 0x10fa <dtoa_prf+0xd6>
    1104:	72 ff       	sbrs	r23, 2
    1106:	40 c0       	rjmp	.+128    	; 0x1188 <dtoa_prf+0x164>
    1108:	66 23       	and	r22, r22
    110a:	11 f0       	breq	.+4      	; 0x1110 <dtoa_prf+0xec>
    110c:	84 e0       	ldi	r24, 0x04	; 4
    110e:	01 c0       	rjmp	.+2      	; 0x1112 <dtoa_prf+0xee>
    1110:	83 e0       	ldi	r24, 0x03	; 3
    1112:	8b 15       	cp	r24, r11
    1114:	10 f4       	brcc	.+4      	; 0x111a <dtoa_prf+0xf6>
    1116:	b8 1a       	sub	r11, r24
    1118:	01 c0       	rjmp	.+2      	; 0x111c <dtoa_prf+0xf8>
    111a:	b1 2c       	mov	r11, r1
    111c:	a1 11       	cpse	r26, r1
    111e:	0b c0       	rjmp	.+22     	; 0x1136 <dtoa_prf+0x112>
    1120:	f6 01       	movw	r30, r12
    1122:	8b 2d       	mov	r24, r11
    1124:	90 e2       	ldi	r25, 0x20	; 32
    1126:	88 23       	and	r24, r24
    1128:	19 f0       	breq	.+6      	; 0x1130 <dtoa_prf+0x10c>
    112a:	91 93       	st	Z+, r25
    112c:	81 50       	subi	r24, 0x01	; 1
    112e:	fb cf       	rjmp	.-10     	; 0x1126 <dtoa_prf+0x102>
    1130:	cb 0c       	add	r12, r11
    1132:	d1 1c       	adc	r13, r1
    1134:	b1 2c       	mov	r11, r1
    1136:	66 23       	and	r22, r22
    1138:	31 f0       	breq	.+12     	; 0x1146 <dtoa_prf+0x122>
    113a:	f6 01       	movw	r30, r12
    113c:	60 83       	st	Z, r22
    113e:	96 01       	movw	r18, r12
    1140:	2f 5f       	subi	r18, 0xFF	; 255
    1142:	3f 4f       	sbci	r19, 0xFF	; 255
    1144:	69 01       	movw	r12, r18
    1146:	c6 01       	movw	r24, r12
    1148:	03 96       	adiw	r24, 0x03	; 3
    114a:	e2 fe       	sbrs	r14, 2
    114c:	07 c0       	rjmp	.+14     	; 0x115c <dtoa_prf+0x138>
    114e:	29 e4       	ldi	r18, 0x49	; 73
    1150:	f6 01       	movw	r30, r12
    1152:	20 83       	st	Z, r18
    1154:	2e e4       	ldi	r18, 0x4E	; 78
    1156:	21 83       	std	Z+1, r18	; 0x01
    1158:	26 e4       	ldi	r18, 0x46	; 70
    115a:	06 c0       	rjmp	.+12     	; 0x1168 <dtoa_prf+0x144>
    115c:	29 e6       	ldi	r18, 0x69	; 105
    115e:	f6 01       	movw	r30, r12
    1160:	20 83       	st	Z, r18
    1162:	2e e6       	ldi	r18, 0x6E	; 110
    1164:	21 83       	std	Z+1, r18	; 0x01
    1166:	26 e6       	ldi	r18, 0x66	; 102
    1168:	22 83       	std	Z+2, r18	; 0x02
    116a:	fc 01       	movw	r30, r24
    116c:	2b 2d       	mov	r18, r11
    116e:	30 e2       	ldi	r19, 0x20	; 32
    1170:	22 23       	and	r18, r18
    1172:	19 f0       	breq	.+6      	; 0x117a <dtoa_prf+0x156>
    1174:	31 93       	st	Z+, r19
    1176:	21 50       	subi	r18, 0x01	; 1
    1178:	fb cf       	rjmp	.-10     	; 0x1170 <dtoa_prf+0x14c>
    117a:	fc 01       	movw	r30, r24
    117c:	eb 0d       	add	r30, r11
    117e:	f1 1d       	adc	r31, r1
    1180:	10 82       	st	Z, r1
    1182:	8e ef       	ldi	r24, 0xFE	; 254
    1184:	9f ef       	ldi	r25, 0xFF	; 255
    1186:	b7 c0       	rjmp	.+366    	; 0x12f6 <dtoa_prf+0x2d2>
    1188:	b1 e0       	ldi	r27, 0x01	; 1
    118a:	61 11       	cpse	r22, r1
    118c:	01 c0       	rjmp	.+2      	; 0x1190 <dtoa_prf+0x16c>
    118e:	b0 e0       	ldi	r27, 0x00	; 0
    1190:	4b 2f       	mov	r20, r27
    1192:	50 e0       	ldi	r21, 0x00	; 0
    1194:	18 16       	cp	r1, r24
    1196:	19 06       	cpc	r1, r25
    1198:	24 f4       	brge	.+8      	; 0x11a2 <dtoa_prf+0x17e>
    119a:	9c 01       	movw	r18, r24
    119c:	2f 5f       	subi	r18, 0xFF	; 255
    119e:	3f 4f       	sbci	r19, 0xFF	; 255
    11a0:	02 c0       	rjmp	.+4      	; 0x11a6 <dtoa_prf+0x182>
    11a2:	21 e0       	ldi	r18, 0x01	; 1
    11a4:	30 e0       	ldi	r19, 0x00	; 0
    11a6:	24 0f       	add	r18, r20
    11a8:	35 1f       	adc	r19, r21
    11aa:	11 23       	and	r17, r17
    11ac:	29 f0       	breq	.+10     	; 0x11b8 <dtoa_prf+0x194>
    11ae:	41 2f       	mov	r20, r17
    11b0:	50 e0       	ldi	r21, 0x00	; 0
    11b2:	4f 5f       	subi	r20, 0xFF	; 255
    11b4:	5f 4f       	sbci	r21, 0xFF	; 255
    11b6:	02 c0       	rjmp	.+4      	; 0x11bc <dtoa_prf+0x198>
    11b8:	40 e0       	ldi	r20, 0x00	; 0
    11ba:	50 e0       	ldi	r21, 0x00	; 0
    11bc:	42 0f       	add	r20, r18
    11be:	53 1f       	adc	r21, r19
    11c0:	2b 2d       	mov	r18, r11
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	42 17       	cp	r20, r18
    11c6:	53 07       	cpc	r21, r19
    11c8:	14 f4       	brge	.+4      	; 0x11ce <dtoa_prf+0x1aa>
    11ca:	b4 1a       	sub	r11, r20
    11cc:	01 c0       	rjmp	.+2      	; 0x11d0 <dtoa_prf+0x1ac>
    11ce:	b1 2c       	mov	r11, r1
    11d0:	2e 2d       	mov	r18, r14
    11d2:	28 71       	andi	r18, 0x18	; 24
    11d4:	59 f4       	brne	.+22     	; 0x11ec <dtoa_prf+0x1c8>
    11d6:	f6 01       	movw	r30, r12
    11d8:	2b 2d       	mov	r18, r11
    11da:	30 e2       	ldi	r19, 0x20	; 32
    11dc:	22 23       	and	r18, r18
    11de:	19 f0       	breq	.+6      	; 0x11e6 <dtoa_prf+0x1c2>
    11e0:	31 93       	st	Z+, r19
    11e2:	21 50       	subi	r18, 0x01	; 1
    11e4:	fb cf       	rjmp	.-10     	; 0x11dc <dtoa_prf+0x1b8>
    11e6:	cb 0c       	add	r12, r11
    11e8:	d1 1c       	adc	r13, r1
    11ea:	b1 2c       	mov	r11, r1
    11ec:	bb 23       	and	r27, r27
    11ee:	31 f0       	breq	.+12     	; 0x11fc <dtoa_prf+0x1d8>
    11f0:	f6 01       	movw	r30, r12
    11f2:	60 83       	st	Z, r22
    11f4:	96 01       	movw	r18, r12
    11f6:	2f 5f       	subi	r18, 0xFF	; 255
    11f8:	3f 4f       	sbci	r19, 0xFF	; 255
    11fa:	69 01       	movw	r12, r18
    11fc:	a1 11       	cpse	r26, r1
    11fe:	0b c0       	rjmp	.+22     	; 0x1216 <dtoa_prf+0x1f2>
    1200:	f6 01       	movw	r30, r12
    1202:	2b 2d       	mov	r18, r11
    1204:	30 e3       	ldi	r19, 0x30	; 48
    1206:	22 23       	and	r18, r18
    1208:	19 f0       	breq	.+6      	; 0x1210 <dtoa_prf+0x1ec>
    120a:	31 93       	st	Z+, r19
    120c:	21 50       	subi	r18, 0x01	; 1
    120e:	fb cf       	rjmp	.-10     	; 0x1206 <dtoa_prf+0x1e2>
    1210:	cb 0c       	add	r12, r11
    1212:	d1 1c       	adc	r13, r1
    1214:	b1 2c       	mov	r11, r1
    1216:	f8 0e       	add	r15, r24
    1218:	0a 81       	ldd	r16, Y+2	; 0x02
    121a:	37 2f       	mov	r19, r23
    121c:	30 71       	andi	r19, 0x10	; 16
    121e:	a3 2e       	mov	r10, r19
    1220:	74 ff       	sbrs	r23, 4
    1222:	03 c0       	rjmp	.+6      	; 0x122a <dtoa_prf+0x206>
    1224:	01 33       	cpi	r16, 0x31	; 49
    1226:	09 f4       	brne	.+2      	; 0x122a <dtoa_prf+0x206>
    1228:	fa 94       	dec	r15
    122a:	1f 14       	cp	r1, r15
    122c:	2c f4       	brge	.+10     	; 0x1238 <dtoa_prf+0x214>
    122e:	2f 2d       	mov	r18, r15
    1230:	29 30       	cpi	r18, 0x09	; 9
    1232:	18 f0       	brcs	.+6      	; 0x123a <dtoa_prf+0x216>
    1234:	28 e0       	ldi	r18, 0x08	; 8
    1236:	01 c0       	rjmp	.+2      	; 0x123a <dtoa_prf+0x216>
    1238:	21 e0       	ldi	r18, 0x01	; 1
    123a:	68 2f       	mov	r22, r24
    123c:	39 2f       	mov	r19, r25
    123e:	97 ff       	sbrs	r25, 7
    1240:	02 c0       	rjmp	.+4      	; 0x1246 <dtoa_prf+0x222>
    1242:	60 e0       	ldi	r22, 0x00	; 0
    1244:	30 e0       	ldi	r19, 0x00	; 0
    1246:	46 2f       	mov	r20, r22
    1248:	53 2f       	mov	r21, r19
    124a:	61 2c       	mov	r6, r1
    124c:	71 2c       	mov	r7, r1
    124e:	3e e2       	ldi	r19, 0x2E	; 46
    1250:	93 2e       	mov	r9, r19
    1252:	bc 01       	movw	r22, r24
    1254:	62 1b       	sub	r22, r18
    1256:	71 09       	sbc	r23, r1
    1258:	9b 01       	movw	r18, r22
    125a:	dc 01       	movw	r26, r24
    125c:	a4 1b       	sub	r26, r20
    125e:	b5 0b       	sbc	r27, r21
    1260:	e1 e0       	ldi	r30, 0x01	; 1
    1262:	f0 e0       	ldi	r31, 0x00	; 0
    1264:	ec 0f       	add	r30, r28
    1266:	fd 1f       	adc	r31, r29
    1268:	ae 0f       	add	r26, r30
    126a:	bf 1f       	adc	r27, r31
    126c:	e1 2e       	mov	r14, r17
    126e:	f1 2c       	mov	r15, r1
    1270:	f1 94       	neg	r15
    1272:	e1 94       	neg	r14
    1274:	f1 08       	sbc	r15, r1
    1276:	4f 3f       	cpi	r20, 0xFF	; 255
    1278:	ff ef       	ldi	r31, 0xFF	; 255
    127a:	5f 07       	cpc	r21, r31
    127c:	31 f4       	brne	.+12     	; 0x128a <dtoa_prf+0x266>
    127e:	f6 01       	movw	r30, r12
    1280:	90 82       	st	Z, r9
    1282:	b6 01       	movw	r22, r12
    1284:	6f 5f       	subi	r22, 0xFF	; 255
    1286:	7f 4f       	sbci	r23, 0xFF	; 255
    1288:	6b 01       	movw	r12, r22
    128a:	84 17       	cp	r24, r20
    128c:	95 07       	cpc	r25, r21
    128e:	4c f0       	brlt	.+18     	; 0x12a2 <dtoa_prf+0x27e>
    1290:	24 17       	cp	r18, r20
    1292:	35 07       	cpc	r19, r21
    1294:	34 f4       	brge	.+12     	; 0x12a2 <dtoa_prf+0x27e>
    1296:	bd 01       	movw	r22, r26
    1298:	66 0d       	add	r22, r6
    129a:	77 1d       	adc	r23, r7
    129c:	fb 01       	movw	r30, r22
    129e:	11 81       	ldd	r17, Z+1	; 0x01
    12a0:	01 c0       	rjmp	.+2      	; 0x12a4 <dtoa_prf+0x280>
    12a2:	10 e3       	ldi	r17, 0x30	; 48
    12a4:	41 50       	subi	r20, 0x01	; 1
    12a6:	51 09       	sbc	r21, r1
    12a8:	ff ef       	ldi	r31, 0xFF	; 255
    12aa:	6f 1a       	sub	r6, r31
    12ac:	7f 0a       	sbc	r7, r31
    12ae:	b6 01       	movw	r22, r12
    12b0:	6f 5f       	subi	r22, 0xFF	; 255
    12b2:	7f 4f       	sbci	r23, 0xFF	; 255
    12b4:	4e 15       	cp	r20, r14
    12b6:	5f 05       	cpc	r21, r15
    12b8:	24 f0       	brlt	.+8      	; 0x12c2 <dtoa_prf+0x29e>
    12ba:	f6 01       	movw	r30, r12
    12bc:	10 83       	st	Z, r17
    12be:	6b 01       	movw	r12, r22
    12c0:	da cf       	rjmp	.-76     	; 0x1276 <dtoa_prf+0x252>
    12c2:	48 17       	cp	r20, r24
    12c4:	59 07       	cpc	r21, r25
    12c6:	39 f4       	brne	.+14     	; 0x12d6 <dtoa_prf+0x2b2>
    12c8:	06 33       	cpi	r16, 0x36	; 54
    12ca:	20 f4       	brcc	.+8      	; 0x12d4 <dtoa_prf+0x2b0>
    12cc:	05 33       	cpi	r16, 0x35	; 53
    12ce:	19 f4       	brne	.+6      	; 0x12d6 <dtoa_prf+0x2b2>
    12d0:	a1 10       	cpse	r10, r1
    12d2:	01 c0       	rjmp	.+2      	; 0x12d6 <dtoa_prf+0x2b2>
    12d4:	11 e3       	ldi	r17, 0x31	; 49
    12d6:	f6 01       	movw	r30, r12
    12d8:	10 83       	st	Z, r17
    12da:	fb 01       	movw	r30, r22
    12dc:	8b 2d       	mov	r24, r11
    12de:	90 e2       	ldi	r25, 0x20	; 32
    12e0:	88 23       	and	r24, r24
    12e2:	19 f0       	breq	.+6      	; 0x12ea <dtoa_prf+0x2c6>
    12e4:	91 93       	st	Z+, r25
    12e6:	81 50       	subi	r24, 0x01	; 1
    12e8:	fb cf       	rjmp	.-10     	; 0x12e0 <dtoa_prf+0x2bc>
    12ea:	fb 01       	movw	r30, r22
    12ec:	eb 0d       	add	r30, r11
    12ee:	f1 1d       	adc	r31, r1
    12f0:	10 82       	st	Z, r1
    12f2:	80 e0       	ldi	r24, 0x00	; 0
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	29 96       	adiw	r28, 0x09	; 9
    12f8:	0f b6       	in	r0, 0x3f	; 63
    12fa:	f8 94       	cli
    12fc:	de bf       	out	0x3e, r29	; 62
    12fe:	0f be       	out	0x3f, r0	; 63
    1300:	cd bf       	out	0x3d, r28	; 61
    1302:	df 91       	pop	r29
    1304:	cf 91       	pop	r28
    1306:	1f 91       	pop	r17
    1308:	0f 91       	pop	r16
    130a:	ff 90       	pop	r15
    130c:	ef 90       	pop	r14
    130e:	df 90       	pop	r13
    1310:	cf 90       	pop	r12
    1312:	bf 90       	pop	r11
    1314:	af 90       	pop	r10
    1316:	9f 90       	pop	r9
    1318:	7f 90       	pop	r7
    131a:	6f 90       	pop	r6
    131c:	08 95       	ret

0000131e <__ftoa_engine>:
    131e:	28 30       	cpi	r18, 0x08	; 8
    1320:	08 f0       	brcs	.+2      	; 0x1324 <__ftoa_engine+0x6>
    1322:	27 e0       	ldi	r18, 0x07	; 7
    1324:	33 27       	eor	r19, r19
    1326:	da 01       	movw	r26, r20
    1328:	99 0f       	add	r25, r25
    132a:	31 1d       	adc	r19, r1
    132c:	87 fd       	sbrc	r24, 7
    132e:	91 60       	ori	r25, 0x01	; 1
    1330:	00 96       	adiw	r24, 0x00	; 0
    1332:	61 05       	cpc	r22, r1
    1334:	71 05       	cpc	r23, r1
    1336:	39 f4       	brne	.+14     	; 0x1346 <__ftoa_engine+0x28>
    1338:	32 60       	ori	r19, 0x02	; 2
    133a:	2e 5f       	subi	r18, 0xFE	; 254
    133c:	3d 93       	st	X+, r19
    133e:	30 e3       	ldi	r19, 0x30	; 48
    1340:	2a 95       	dec	r18
    1342:	e1 f7       	brne	.-8      	; 0x133c <__ftoa_engine+0x1e>
    1344:	08 95       	ret
    1346:	9f 3f       	cpi	r25, 0xFF	; 255
    1348:	30 f0       	brcs	.+12     	; 0x1356 <__ftoa_engine+0x38>
    134a:	80 38       	cpi	r24, 0x80	; 128
    134c:	71 05       	cpc	r23, r1
    134e:	61 05       	cpc	r22, r1
    1350:	09 f0       	breq	.+2      	; 0x1354 <__ftoa_engine+0x36>
    1352:	3c 5f       	subi	r19, 0xFC	; 252
    1354:	3c 5f       	subi	r19, 0xFC	; 252
    1356:	3d 93       	st	X+, r19
    1358:	91 30       	cpi	r25, 0x01	; 1
    135a:	08 f0       	brcs	.+2      	; 0x135e <__ftoa_engine+0x40>
    135c:	80 68       	ori	r24, 0x80	; 128
    135e:	91 1d       	adc	r25, r1
    1360:	df 93       	push	r29
    1362:	cf 93       	push	r28
    1364:	1f 93       	push	r17
    1366:	0f 93       	push	r16
    1368:	ff 92       	push	r15
    136a:	ef 92       	push	r14
    136c:	19 2f       	mov	r17, r25
    136e:	98 7f       	andi	r25, 0xF8	; 248
    1370:	96 95       	lsr	r25
    1372:	e9 2f       	mov	r30, r25
    1374:	96 95       	lsr	r25
    1376:	96 95       	lsr	r25
    1378:	e9 0f       	add	r30, r25
    137a:	ff 27       	eor	r31, r31
    137c:	e4 59       	subi	r30, 0x94	; 148
    137e:	fe 4f       	sbci	r31, 0xFE	; 254
    1380:	99 27       	eor	r25, r25
    1382:	33 27       	eor	r19, r19
    1384:	ee 24       	eor	r14, r14
    1386:	ff 24       	eor	r15, r15
    1388:	a7 01       	movw	r20, r14
    138a:	e7 01       	movw	r28, r14
    138c:	05 90       	lpm	r0, Z+
    138e:	08 94       	sec
    1390:	07 94       	ror	r0
    1392:	28 f4       	brcc	.+10     	; 0x139e <__ftoa_engine+0x80>
    1394:	36 0f       	add	r19, r22
    1396:	e7 1e       	adc	r14, r23
    1398:	f8 1e       	adc	r15, r24
    139a:	49 1f       	adc	r20, r25
    139c:	51 1d       	adc	r21, r1
    139e:	66 0f       	add	r22, r22
    13a0:	77 1f       	adc	r23, r23
    13a2:	88 1f       	adc	r24, r24
    13a4:	99 1f       	adc	r25, r25
    13a6:	06 94       	lsr	r0
    13a8:	a1 f7       	brne	.-24     	; 0x1392 <__ftoa_engine+0x74>
    13aa:	05 90       	lpm	r0, Z+
    13ac:	07 94       	ror	r0
    13ae:	28 f4       	brcc	.+10     	; 0x13ba <__ftoa_engine+0x9c>
    13b0:	e7 0e       	add	r14, r23
    13b2:	f8 1e       	adc	r15, r24
    13b4:	49 1f       	adc	r20, r25
    13b6:	56 1f       	adc	r21, r22
    13b8:	c1 1d       	adc	r28, r1
    13ba:	77 0f       	add	r23, r23
    13bc:	88 1f       	adc	r24, r24
    13be:	99 1f       	adc	r25, r25
    13c0:	66 1f       	adc	r22, r22
    13c2:	06 94       	lsr	r0
    13c4:	a1 f7       	brne	.-24     	; 0x13ae <__ftoa_engine+0x90>
    13c6:	05 90       	lpm	r0, Z+
    13c8:	07 94       	ror	r0
    13ca:	28 f4       	brcc	.+10     	; 0x13d6 <__ftoa_engine+0xb8>
    13cc:	f8 0e       	add	r15, r24
    13ce:	49 1f       	adc	r20, r25
    13d0:	56 1f       	adc	r21, r22
    13d2:	c7 1f       	adc	r28, r23
    13d4:	d1 1d       	adc	r29, r1
    13d6:	88 0f       	add	r24, r24
    13d8:	99 1f       	adc	r25, r25
    13da:	66 1f       	adc	r22, r22
    13dc:	77 1f       	adc	r23, r23
    13de:	06 94       	lsr	r0
    13e0:	a1 f7       	brne	.-24     	; 0x13ca <__ftoa_engine+0xac>
    13e2:	05 90       	lpm	r0, Z+
    13e4:	07 94       	ror	r0
    13e6:	20 f4       	brcc	.+8      	; 0x13f0 <__ftoa_engine+0xd2>
    13e8:	49 0f       	add	r20, r25
    13ea:	56 1f       	adc	r21, r22
    13ec:	c7 1f       	adc	r28, r23
    13ee:	d8 1f       	adc	r29, r24
    13f0:	99 0f       	add	r25, r25
    13f2:	66 1f       	adc	r22, r22
    13f4:	77 1f       	adc	r23, r23
    13f6:	88 1f       	adc	r24, r24
    13f8:	06 94       	lsr	r0
    13fa:	a9 f7       	brne	.-22     	; 0x13e6 <__ftoa_engine+0xc8>
    13fc:	84 91       	lpm	r24, Z
    13fe:	10 95       	com	r17
    1400:	17 70       	andi	r17, 0x07	; 7
    1402:	41 f0       	breq	.+16     	; 0x1414 <__ftoa_engine+0xf6>
    1404:	d6 95       	lsr	r29
    1406:	c7 95       	ror	r28
    1408:	57 95       	ror	r21
    140a:	47 95       	ror	r20
    140c:	f7 94       	ror	r15
    140e:	e7 94       	ror	r14
    1410:	1a 95       	dec	r17
    1412:	c1 f7       	brne	.-16     	; 0x1404 <__ftoa_engine+0xe6>
    1414:	e2 e1       	ldi	r30, 0x12	; 18
    1416:	f1 e0       	ldi	r31, 0x01	; 1
    1418:	68 94       	set
    141a:	15 90       	lpm	r1, Z+
    141c:	15 91       	lpm	r17, Z+
    141e:	35 91       	lpm	r19, Z+
    1420:	65 91       	lpm	r22, Z+
    1422:	95 91       	lpm	r25, Z+
    1424:	05 90       	lpm	r0, Z+
    1426:	7f e2       	ldi	r23, 0x2F	; 47
    1428:	73 95       	inc	r23
    142a:	e1 18       	sub	r14, r1
    142c:	f1 0a       	sbc	r15, r17
    142e:	43 0b       	sbc	r20, r19
    1430:	56 0b       	sbc	r21, r22
    1432:	c9 0b       	sbc	r28, r25
    1434:	d0 09       	sbc	r29, r0
    1436:	c0 f7       	brcc	.-16     	; 0x1428 <__ftoa_engine+0x10a>
    1438:	e1 0c       	add	r14, r1
    143a:	f1 1e       	adc	r15, r17
    143c:	43 1f       	adc	r20, r19
    143e:	56 1f       	adc	r21, r22
    1440:	c9 1f       	adc	r28, r25
    1442:	d0 1d       	adc	r29, r0
    1444:	7e f4       	brtc	.+30     	; 0x1464 <__ftoa_engine+0x146>
    1446:	70 33       	cpi	r23, 0x30	; 48
    1448:	11 f4       	brne	.+4      	; 0x144e <__ftoa_engine+0x130>
    144a:	8a 95       	dec	r24
    144c:	e6 cf       	rjmp	.-52     	; 0x141a <__ftoa_engine+0xfc>
    144e:	e8 94       	clt
    1450:	01 50       	subi	r16, 0x01	; 1
    1452:	30 f0       	brcs	.+12     	; 0x1460 <__ftoa_engine+0x142>
    1454:	08 0f       	add	r16, r24
    1456:	0a f4       	brpl	.+2      	; 0x145a <__ftoa_engine+0x13c>
    1458:	00 27       	eor	r16, r16
    145a:	02 17       	cp	r16, r18
    145c:	08 f4       	brcc	.+2      	; 0x1460 <__ftoa_engine+0x142>
    145e:	20 2f       	mov	r18, r16
    1460:	23 95       	inc	r18
    1462:	02 2f       	mov	r16, r18
    1464:	7a 33       	cpi	r23, 0x3A	; 58
    1466:	28 f0       	brcs	.+10     	; 0x1472 <__ftoa_engine+0x154>
    1468:	79 e3       	ldi	r23, 0x39	; 57
    146a:	7d 93       	st	X+, r23
    146c:	2a 95       	dec	r18
    146e:	e9 f7       	brne	.-6      	; 0x146a <__ftoa_engine+0x14c>
    1470:	10 c0       	rjmp	.+32     	; 0x1492 <__ftoa_engine+0x174>
    1472:	7d 93       	st	X+, r23
    1474:	2a 95       	dec	r18
    1476:	89 f6       	brne	.-94     	; 0x141a <__ftoa_engine+0xfc>
    1478:	06 94       	lsr	r0
    147a:	97 95       	ror	r25
    147c:	67 95       	ror	r22
    147e:	37 95       	ror	r19
    1480:	17 95       	ror	r17
    1482:	17 94       	ror	r1
    1484:	e1 18       	sub	r14, r1
    1486:	f1 0a       	sbc	r15, r17
    1488:	43 0b       	sbc	r20, r19
    148a:	56 0b       	sbc	r21, r22
    148c:	c9 0b       	sbc	r28, r25
    148e:	d0 09       	sbc	r29, r0
    1490:	98 f0       	brcs	.+38     	; 0x14b8 <__ftoa_engine+0x19a>
    1492:	23 95       	inc	r18
    1494:	7e 91       	ld	r23, -X
    1496:	73 95       	inc	r23
    1498:	7a 33       	cpi	r23, 0x3A	; 58
    149a:	08 f0       	brcs	.+2      	; 0x149e <__ftoa_engine+0x180>
    149c:	70 e3       	ldi	r23, 0x30	; 48
    149e:	7c 93       	st	X, r23
    14a0:	20 13       	cpse	r18, r16
    14a2:	b8 f7       	brcc	.-18     	; 0x1492 <__ftoa_engine+0x174>
    14a4:	7e 91       	ld	r23, -X
    14a6:	70 61       	ori	r23, 0x10	; 16
    14a8:	7d 93       	st	X+, r23
    14aa:	30 f0       	brcs	.+12     	; 0x14b8 <__ftoa_engine+0x19a>
    14ac:	83 95       	inc	r24
    14ae:	71 e3       	ldi	r23, 0x31	; 49
    14b0:	7d 93       	st	X+, r23
    14b2:	70 e3       	ldi	r23, 0x30	; 48
    14b4:	2a 95       	dec	r18
    14b6:	e1 f7       	brne	.-8      	; 0x14b0 <__ftoa_engine+0x192>
    14b8:	11 24       	eor	r1, r1
    14ba:	ef 90       	pop	r14
    14bc:	ff 90       	pop	r15
    14be:	0f 91       	pop	r16
    14c0:	1f 91       	pop	r17
    14c2:	cf 91       	pop	r28
    14c4:	df 91       	pop	r29
    14c6:	99 27       	eor	r25, r25
    14c8:	87 fd       	sbrc	r24, 7
    14ca:	90 95       	com	r25
    14cc:	08 95       	ret

000014ce <_exit>:
    14ce:	f8 94       	cli

000014d0 <__stop_program>:
    14d0:	ff cf       	rjmp	.-2      	; 0x14d0 <__stop_program>
